{"version":3,"sources":["node_modules/highlight.js/lib/languages/elixir.js"],"names":["module","exports","hljs","ELIXIR_IDENT_RE","ELIXIR_METHOD_RE","ELIXIR_KEYWORDS","SUBST","className","begin","end","lexemes","keywords","STRING","contains","BACKSLASH_ESCAPE","variants","FUNCTION","beginKeywords","inherit","TITLE_MODE","endsParent","CLASS","ELIXIR_DEFAULT_CONTAINS","HASH_COMMENT_MODE","relevance","RE_STARTERS_RE","illegal"],"mappings":";;AAAAA,OAAOC,OAAP,GAAiB,UAASC,IAAT,EAAe;AAC9B,MAAIC,kBAAkB,kCAAtB;AACA,MAAIC,mBAAmB,oFAAvB;AACA,MAAIC,kBACF,+EACA,2EADA,GAEA,4BAHF;AAIA,MAAIC,QAAQ;AACVC,eAAW,OADD;AAEVC,WAAO,MAFG,EAEKC,KAAK,GAFV;AAGVC,aAASP,eAHC;AAIVQ,cAAUN;AAJA,GAAZ;AAMA,MAAIO,SAAS;AACXL,eAAW,QADA;AAEXM,cAAU,CAACX,KAAKY,gBAAN,EAAwBR,KAAxB,CAFC;AAGXS,cAAU,CACR;AACEP,aAAO,GADT,EACcC,KAAK;AADnB,KADQ,EAIR;AACED,aAAO,GADT,EACcC,KAAK;AADnB,KAJQ;AAHC,GAAb;AAYA,MAAIO,WAAW;AACbT,eAAW,UADE;AAEbU,mBAAe,mBAFF,EAEuBR,KAAK,MAF5B,EAEoC;AACjDI,cAAU,CACRX,KAAKgB,OAAL,CAAahB,KAAKiB,UAAlB,EAA8B;AAC5BX,aAAOL,eADqB;AAE5BiB,kBAAY;AAFgB,KAA9B,CADQ;AAHG,GAAf;AAUA,MAAIC,QAAQnB,KAAKgB,OAAL,CAAaF,QAAb,EAAuB;AACjCT,eAAW,OADsB;AAEjCU,mBAAe,yCAFkB,EAEyBR,KAAK;AAF9B,GAAvB,CAAZ;AAIA,MAAIa,0BAA0B,CAC5BV,MAD4B,EAE5BV,KAAKqB,iBAFuB,EAG5BF,KAH4B,EAI5BL,QAJ4B,EAK5B;AACET,eAAW,QADb;AAEEC,WAAO,UAFT;AAGEK,cAAU,CAACD,MAAD,EAAS,EAACJ,OAAOJ,gBAAR,EAAT,CAHZ;AAIEoB,eAAW;AAJb,GAL4B,EAW5B;AACEjB,eAAW,QADb;AAEEC,WAAOL,kBAAkB,GAF3B;AAGEqB,eAAW;AAHb,GAX4B,EAgB5B;AACEjB,eAAW,QADb;AAEEC,WAAO,2EAFT;AAGEgB,eAAW;AAHb,GAhB4B,EAqB5B;AACEjB,eAAW,UADb;AAEEC,WAAO;AAFT,GArB4B,EAyB5B;AACEA,WAAO;AADT,GAzB4B,EA4B5B,EAAE;AACAA,WAAO,MAAMN,KAAKuB,cAAX,GAA4B,OADrC;AAEEZ,cAAU,CACRX,KAAKqB,iBADG,EAER;AACEhB,iBAAW,QADb;AAEEmB,eAAS,KAFX;AAGEb,gBAAU,CAACX,KAAKY,gBAAN,EAAwBR,KAAxB,CAHZ;AAIES,gBAAU,CACR;AACEP,eAAO,GADT,EACcC,KAAK;AADnB,OADQ,EAIR;AACED,eAAO,OADT,EACkBC,KAAK;AADvB,OAJQ;AAJZ,KAFQ,CAFZ;AAkBEe,eAAW;AAlBb,GA5B4B,CAA9B;AAiDAlB,QAAMO,QAAN,GAAiBS,uBAAjB;;AAEA,SAAO;AACLZ,aAASP,eADJ;AAELQ,cAAUN,eAFL;AAGLQ,cAAUS;AAHL,GAAP;AAKD,CA/FD","file":"elixir.js","sourceRoot":"/Users/liangdong06/work/react-tools","sourcesContent":["module.exports = function(hljs) {\n  var ELIXIR_IDENT_RE = '[a-zA-Z_][a-zA-Z0-9_]*(\\\\!|\\\\?)?';\n  var ELIXIR_METHOD_RE = '[a-zA-Z_]\\\\w*[!?=]?|[-+~]\\\\@|<<|>>|=~|===?|<=>|[<>]=?|\\\\*\\\\*|[-/+%^&*~`|]|\\\\[\\\\]=?';\n  var ELIXIR_KEYWORDS =\n    'and false then defined module in return redo retry end for true self when ' +\n    'next until do begin unless nil break not case cond alias while ensure or ' +\n    'include use alias fn quote';\n  var SUBST = {\n    className: 'subst',\n    begin: '#\\\\{', end: '}',\n    lexemes: ELIXIR_IDENT_RE,\n    keywords: ELIXIR_KEYWORDS\n  };\n  var STRING = {\n    className: 'string',\n    contains: [hljs.BACKSLASH_ESCAPE, SUBST],\n    variants: [\n      {\n        begin: /'/, end: /'/\n      },\n      {\n        begin: /\"/, end: /\"/\n      }\n    ]\n  };\n  var FUNCTION = {\n    className: 'function',\n    beginKeywords: 'def defp defmacro', end: /\\B\\b/, // the mode is ended by the title\n    contains: [\n      hljs.inherit(hljs.TITLE_MODE, {\n        begin: ELIXIR_IDENT_RE,\n        endsParent: true\n      })\n    ]\n  };\n  var CLASS = hljs.inherit(FUNCTION, {\n    className: 'class',\n    beginKeywords: 'defimpl defmodule defprotocol defrecord', end: /\\bdo\\b|$|;/\n  });\n  var ELIXIR_DEFAULT_CONTAINS = [\n    STRING,\n    hljs.HASH_COMMENT_MODE,\n    CLASS,\n    FUNCTION,\n    {\n      className: 'symbol',\n      begin: ':(?!\\\\s)',\n      contains: [STRING, {begin: ELIXIR_METHOD_RE}],\n      relevance: 0\n    },\n    {\n      className: 'symbol',\n      begin: ELIXIR_IDENT_RE + ':',\n      relevance: 0\n    },\n    {\n      className: 'number',\n      begin: '(\\\\b0[0-7_]+)|(\\\\b0x[0-9a-fA-F_]+)|(\\\\b[1-9][0-9_]*(\\\\.[0-9_]+)?)|[0_]\\\\b',\n      relevance: 0\n    },\n    {\n      className: 'variable',\n      begin: '(\\\\$\\\\W)|((\\\\$|\\\\@\\\\@?)(\\\\w+))'\n    },\n    {\n      begin: '->'\n    },\n    { // regexp container\n      begin: '(' + hljs.RE_STARTERS_RE + ')\\\\s*',\n      contains: [\n        hljs.HASH_COMMENT_MODE,\n        {\n          className: 'regexp',\n          illegal: '\\\\n',\n          contains: [hljs.BACKSLASH_ESCAPE, SUBST],\n          variants: [\n            {\n              begin: '/', end: '/[a-z]*'\n            },\n            {\n              begin: '%r\\\\[', end: '\\\\][a-z]*'\n            }\n          ]\n        }\n      ],\n      relevance: 0\n    }\n  ];\n  SUBST.contains = ELIXIR_DEFAULT_CONTAINS;\n\n  return {\n    lexemes: ELIXIR_IDENT_RE,\n    keywords: ELIXIR_KEYWORDS,\n    contains: ELIXIR_DEFAULT_CONTAINS\n  };\n};"]}