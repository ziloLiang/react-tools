{"version":3,"sources":["node_modules/remarkable/lib/rules_block/list.js"],"names":["skipBulletListMarker","state","startLine","marker","pos","max","bMarks","tShift","eMarks","src","charCodeAt","skipOrderedListMarker","ch","markTightParagraphs","idx","i","l","level","tokens","length","type","tight","module","exports","list","endLine","silent","nextLine","indent","oldTShift","oldIndent","oldTight","oldParentType","start","posAfterMarker","indentAfterMarker","markerValue","markerCharCode","isOrdered","contentStart","listTokIdx","prevEmptyEnd","listLines","itemLines","terminatorRules","terminate","options","maxNesting","Number","substr","push","order","lines","parser","ruler","getRules","skipSpaces","blkIndent","parentType","tokenize","line","isEmpty"],"mappings":"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","file":"list.js","sourceRoot":"/Users/liangdong06/work/react-tools","sourcesContent":["// Lists\n\n'use strict';\n\n\n// Search `[-+*][\\n ]`, returns next pos arter marker on success\n// or -1 on fail.\nfunction skipBulletListMarker(state, startLine) {\n  var marker, pos, max;\n\n  pos = state.bMarks[startLine] + state.tShift[startLine];\n  max = state.eMarks[startLine];\n\n  if (pos >= max) { return -1; }\n\n  marker = state.src.charCodeAt(pos++);\n  // Check bullet\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x2B/* + */) {\n    return -1;\n  }\n\n  if (pos < max && state.src.charCodeAt(pos) !== 0x20) {\n    // \" 1.test \" - is not a list item\n    return -1;\n  }\n\n  return pos;\n}\n\n// Search `\\d+[.)][\\n ]`, returns next pos arter marker on success\n// or -1 on fail.\nfunction skipOrderedListMarker(state, startLine) {\n  var ch,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  if (pos + 1 >= max) { return -1; }\n\n  ch = state.src.charCodeAt(pos++);\n\n  if (ch < 0x30/* 0 */ || ch > 0x39/* 9 */) { return -1; }\n\n  for (;;) {\n    // EOL -> fail\n    if (pos >= max) { return -1; }\n\n    ch = state.src.charCodeAt(pos++);\n\n    if (ch >= 0x30/* 0 */ && ch <= 0x39/* 9 */) {\n      continue;\n    }\n\n    // found valid marker\n    if (ch === 0x29/* ) */ || ch === 0x2e/* . */) {\n      break;\n    }\n\n    return -1;\n  }\n\n\n  if (pos < max && state.src.charCodeAt(pos) !== 0x20/* space */) {\n    // \" 1.test \" - is not a list item\n    return -1;\n  }\n  return pos;\n}\n\nfunction markTightParagraphs(state, idx) {\n  var i, l,\n      level = state.level + 2;\n\n  for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].tight = true;\n      state.tokens[i].tight = true;\n      i += 2;\n    }\n  }\n}\n\n\nmodule.exports = function list(state, startLine, endLine, silent) {\n  var nextLine,\n      indent,\n      oldTShift,\n      oldIndent,\n      oldTight,\n      oldParentType,\n      start,\n      posAfterMarker,\n      max,\n      indentAfterMarker,\n      markerValue,\n      markerCharCode,\n      isOrdered,\n      contentStart,\n      listTokIdx,\n      prevEmptyEnd,\n      listLines,\n      itemLines,\n      tight = true,\n      terminatorRules,\n      i, l, terminate;\n\n  // Detect list type and position after marker\n  if ((posAfterMarker = skipOrderedListMarker(state, startLine)) >= 0) {\n    isOrdered = true;\n  } else if ((posAfterMarker = skipBulletListMarker(state, startLine)) >= 0) {\n    isOrdered = false;\n  } else {\n    return false;\n  }\n\n  if (state.level >= state.options.maxNesting) { return false; }\n\n  // We should terminate list on style change. Remember first one to compare.\n  markerCharCode = state.src.charCodeAt(posAfterMarker - 1);\n\n  // For validation mode we can terminate immediately\n  if (silent) { return true; }\n\n  // Start list\n  listTokIdx = state.tokens.length;\n\n  if (isOrdered) {\n    start = state.bMarks[startLine] + state.tShift[startLine];\n    markerValue = Number(state.src.substr(start, posAfterMarker - start - 1));\n\n    state.tokens.push({\n      type: 'ordered_list_open',\n      order: markerValue,\n      lines: listLines = [ startLine, 0 ],\n      level: state.level++\n    });\n\n  } else {\n    state.tokens.push({\n      type: 'bullet_list_open',\n      lines: listLines = [ startLine, 0 ],\n      level: state.level++\n    });\n  }\n\n  //\n  // Iterate list items\n  //\n\n  nextLine = startLine;\n  prevEmptyEnd = false;\n  terminatorRules = state.parser.ruler.getRules('list');\n\n  while (nextLine < endLine) {\n    contentStart = state.skipSpaces(posAfterMarker);\n    max = state.eMarks[nextLine];\n\n    if (contentStart >= max) {\n      // trimming space in \"-    \\n  3\" case, indent is 1 here\n      indentAfterMarker = 1;\n    } else {\n      indentAfterMarker = contentStart - posAfterMarker;\n    }\n\n    // If we have more than 4 spaces, the indent is 1\n    // (the rest is just indented code block)\n    if (indentAfterMarker > 4) { indentAfterMarker = 1; }\n\n    // If indent is less than 1, assume that it's one, example:\n    //  \"-\\n  test\"\n    if (indentAfterMarker < 1) { indentAfterMarker = 1; }\n\n    // \"  -  test\"\n    //  ^^^^^ - calculating total length of this thing\n    indent = (posAfterMarker - state.bMarks[nextLine]) + indentAfterMarker;\n\n    // Run subparser & write tokens\n    state.tokens.push({\n      type: 'list_item_open',\n      lines: itemLines = [ startLine, 0 ],\n      level: state.level++\n    });\n\n    oldIndent = state.blkIndent;\n    oldTight = state.tight;\n    oldTShift = state.tShift[startLine];\n    oldParentType = state.parentType;\n    state.tShift[startLine] = contentStart - state.bMarks[startLine];\n    state.blkIndent = indent;\n    state.tight = true;\n    state.parentType = 'list';\n\n    state.parser.tokenize(state, startLine, endLine, true);\n\n    // If any of list item is tight, mark list as tight\n    if (!state.tight || prevEmptyEnd) {\n      tight = false;\n    }\n    // Item become loose if finish with empty line,\n    // but we should filter last element, because it means list finish\n    prevEmptyEnd = (state.line - startLine) > 1 && state.isEmpty(state.line - 1);\n\n    state.blkIndent = oldIndent;\n    state.tShift[startLine] = oldTShift;\n    state.tight = oldTight;\n    state.parentType = oldParentType;\n\n    state.tokens.push({\n      type: 'list_item_close',\n      level: --state.level\n    });\n\n    nextLine = startLine = state.line;\n    itemLines[1] = nextLine;\n    contentStart = state.bMarks[startLine];\n\n    if (nextLine >= endLine) { break; }\n\n    if (state.isEmpty(nextLine)) {\n      break;\n    }\n\n    //\n    // Try to check if list is terminated or continued.\n    //\n    if (state.tShift[nextLine] < state.blkIndent) { break; }\n\n    // fail if terminating block found\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n\n    // fail if list has another type\n    if (isOrdered) {\n      posAfterMarker = skipOrderedListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n    } else {\n      posAfterMarker = skipBulletListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n    }\n\n    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) { break; }\n  }\n\n  // Finilize list\n  state.tokens.push({\n    type: isOrdered ? 'ordered_list_close' : 'bullet_list_close',\n    level: --state.level\n  });\n  listLines[1] = nextLine;\n\n  state.line = nextLine;\n\n  // mark paragraphs tight if needed\n  if (tight) {\n    markTightParagraphs(state, listTokIdx);\n  }\n\n  return true;\n};\n"]}