{"version":3,"sources":["node_modules/react-highlight/node_modules/highlight.js/lib/languages/scheme.js"],"names":["module","exports","hljs","SCHEME_IDENT_RE","SCHEME_SIMPLE_NUMBER_RE","SCHEME_COMPLEX_NUMBER_RE","BUILTINS","SHEBANG","className","begin","end","LITERAL","NUMBER","variants","relevance","STRING","QUOTE_STRING_MODE","REGULAR_EXPRESSION","COMMENT_MODES","COMMENT","IDENT","QUOTED_IDENT","BODY","endsWithParent","QUOTED_LIST","contains","NAME","lexemes","keywords","LAMBDA","returnBegin","endsParent","LIST","concat","illegal"],"mappings":"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","file":"scheme.js","sourceRoot":"/Users/liangdong06/work/react-tools","sourcesContent":["module.exports = function(hljs) {\n  var SCHEME_IDENT_RE = '[^\\\\(\\\\)\\\\[\\\\]\\\\{\\\\}\",\\'`;#|\\\\\\\\\\\\s]+';\n  var SCHEME_SIMPLE_NUMBER_RE = '(\\\\-|\\\\+)?\\\\d+([./]\\\\d+)?';\n  var SCHEME_COMPLEX_NUMBER_RE = SCHEME_SIMPLE_NUMBER_RE + '[+\\\\-]' + SCHEME_SIMPLE_NUMBER_RE + 'i';\n  var BUILTINS = {\n    'builtin-name':\n      'case-lambda call/cc class define-class exit-handler field import ' +\n      'inherit init-field interface let*-values let-values let/ec mixin ' +\n      'opt-lambda override protect provide public rename require ' +\n      'require-for-syntax syntax syntax-case syntax-error unit/sig unless ' +\n      'when with-syntax and begin call-with-current-continuation ' +\n      'call-with-input-file call-with-output-file case cond define ' +\n      'define-syntax delay do dynamic-wind else for-each if lambda let let* ' +\n      'let-syntax letrec letrec-syntax map or syntax-rules \\' * + , ,@ - ... / ' +\n      '; < <= = => > >= ` abs acos angle append apply asin assoc assq assv atan ' +\n      'boolean? caar cadr call-with-input-file call-with-output-file ' +\n      'call-with-values car cdddar cddddr cdr ceiling char->integer ' +\n      'char-alphabetic? char-ci<=? char-ci<? char-ci=? char-ci>=? char-ci>? ' +\n      'char-downcase char-lower-case? char-numeric? char-ready? char-upcase ' +\n      'char-upper-case? char-whitespace? char<=? char<? char=? char>=? char>? ' +\n      'char? close-input-port close-output-port complex? cons cos ' +\n      'current-input-port current-output-port denominator display eof-object? ' +\n      'eq? equal? eqv? eval even? exact->inexact exact? exp expt floor ' +\n      'force gcd imag-part inexact->exact inexact? input-port? integer->char ' +\n      'integer? interaction-environment lcm length list list->string ' +\n      'list->vector list-ref list-tail list? load log magnitude make-polar ' +\n      'make-rectangular make-string make-vector max member memq memv min ' +\n      'modulo negative? newline not null-environment null? number->string ' +\n      'number? numerator odd? open-input-file open-output-file output-port? ' +\n      'pair? peek-char port? positive? procedure? quasiquote quote quotient ' +\n      'rational? rationalize read read-char real-part real? remainder reverse ' +\n      'round scheme-report-environment set! set-car! set-cdr! sin sqrt string ' +\n      'string->list string->number string->symbol string-append string-ci<=? ' +\n      'string-ci<? string-ci=? string-ci>=? string-ci>? string-copy ' +\n      'string-fill! string-length string-ref string-set! string<=? string<? ' +\n      'string=? string>=? string>? string? substring symbol->string symbol? ' +\n      'tan transcript-off transcript-on truncate values vector ' +\n      'vector->list vector-fill! vector-length vector-ref vector-set! ' +\n      'with-input-from-file with-output-to-file write write-char zero?'\n  };\n\n  var SHEBANG = {\n    className: 'meta',\n    begin: '^#!',\n    end: '$'\n  };\n\n  var LITERAL = {\n    className: 'literal',\n    begin: '(#t|#f|#\\\\\\\\' + SCHEME_IDENT_RE + '|#\\\\\\\\.)'\n  };\n\n  var NUMBER = {\n    className: 'number',\n    variants: [\n      { begin: SCHEME_SIMPLE_NUMBER_RE, relevance: 0 },\n      { begin: SCHEME_COMPLEX_NUMBER_RE, relevance: 0 },\n      { begin: '#b[0-1]+(/[0-1]+)?' },\n      { begin: '#o[0-7]+(/[0-7]+)?' },\n      { begin: '#x[0-9a-f]+(/[0-9a-f]+)?' }\n    ]\n  };\n\n  var STRING = hljs.QUOTE_STRING_MODE;\n\n  var REGULAR_EXPRESSION = {\n    className: 'regexp',\n    begin: '#[pr]x\"',\n    end: '[^\\\\\\\\]\"'\n  };\n\n  var COMMENT_MODES = [\n    hljs.COMMENT(\n      ';',\n      '$',\n      {\n        relevance: 0\n      }\n    ),\n    hljs.COMMENT('#\\\\|', '\\\\|#')\n  ];\n\n  var IDENT = {\n    begin: SCHEME_IDENT_RE,\n    relevance: 0\n  };\n\n  var QUOTED_IDENT = {\n    className: 'symbol',\n    begin: '\\'' + SCHEME_IDENT_RE\n  };\n\n  var BODY = {\n    endsWithParent: true,\n    relevance: 0\n  };\n\n  var QUOTED_LIST = {\n    begin: /'/,\n    contains: [\n      {\n        begin: '\\\\(', end: '\\\\)',\n        contains: ['self', LITERAL, STRING, NUMBER, IDENT, QUOTED_IDENT]\n      }\n    ]\n  };\n\n  var NAME = {\n    className: 'name',\n    begin: SCHEME_IDENT_RE,\n    lexemes: SCHEME_IDENT_RE,\n    keywords: BUILTINS\n  };\n\n  var LAMBDA = {\n    begin: /lambda/, endsWithParent: true, returnBegin: true,\n    contains: [\n      NAME,\n      {\n        begin: /\\(/, end: /\\)/, endsParent: true,\n        contains: [IDENT],\n      }\n    ]\n  };\n\n  var LIST = {\n    variants: [\n      { begin: '\\\\(', end: '\\\\)' },\n      { begin: '\\\\[', end: '\\\\]' }\n    ],\n    contains: [LAMBDA, NAME, BODY]\n  };\n\n  BODY.contains = [LITERAL, NUMBER, STRING, IDENT, QUOTED_IDENT, QUOTED_LIST, LIST].concat(COMMENT_MODES);\n\n  return {\n    illegal: /\\S/,\n    contains: [SHEBANG, NUMBER, STRING, QUOTED_IDENT, QUOTED_LIST, LIST].concat(COMMENT_MODES)\n  };\n};"]}