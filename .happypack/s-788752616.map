{"version":3,"sources":["node_modules/highlight.js/lib/languages/json.js"],"names":["module","exports","hljs","LITERALS","literal","TYPES","QUOTE_STRING_MODE","C_NUMBER_MODE","VALUE_CONTAINER","end","endsWithParent","excludeEnd","contains","keywords","OBJECT","begin","className","BACKSLASH_ESCAPE","illegal","inherit","ARRAY","splice","length"],"mappings":";;AAAAA,OAAOC,OAAP,GAAiB,UAASC,IAAT,EAAe;AAC9B,MAAIC,WAAW,EAACC,SAAS,iBAAV,EAAf;AACA,MAAIC,QAAQ,CACVH,KAAKI,iBADK,EAEVJ,KAAKK,aAFK,CAAZ;AAIA,MAAIC,kBAAkB;AACpBC,SAAK,GADe,EACVC,gBAAgB,IADN,EACYC,YAAY,IADxB;AAEpBC,cAAUP,KAFU;AAGpBQ,cAAUV;AAHU,GAAtB;AAKA,MAAIW,SAAS;AACXC,WAAO,GADI,EACCN,KAAK,GADN;AAEXG,cAAU,CACR;AACEI,iBAAW,MADb;AAEED,aAAO,GAFT,EAEcN,KAAK,GAFnB;AAGEG,gBAAU,CAACV,KAAKe,gBAAN,CAHZ;AAIEC,eAAS;AAJX,KADQ,EAORhB,KAAKiB,OAAL,CAAaX,eAAb,EAA8B,EAACO,OAAO,GAAR,EAA9B,CAPQ,CAFC;AAWXG,aAAS;AAXE,GAAb;AAaA,MAAIE,QAAQ;AACVL,WAAO,KADG,EACIN,KAAK,KADT;AAEVG,cAAU,CAACV,KAAKiB,OAAL,CAAaX,eAAb,CAAD,CAFA,EAEiC;AAC3CU,aAAS;AAHC,GAAZ;AAKAb,QAAMgB,MAAN,CAAahB,MAAMiB,MAAnB,EAA2B,CAA3B,EAA8BR,MAA9B,EAAsCM,KAAtC;AACA,SAAO;AACLR,cAAUP,KADL;AAELQ,cAAUV,QAFL;AAGLe,aAAS;AAHJ,GAAP;AAKD,CAnCD","file":"json.js","sourceRoot":"/Users/liangdong06/work/react-tools","sourcesContent":["module.exports = function(hljs) {\n  var LITERALS = {literal: 'true false null'};\n  var TYPES = [\n    hljs.QUOTE_STRING_MODE,\n    hljs.C_NUMBER_MODE\n  ];\n  var VALUE_CONTAINER = {\n    end: ',', endsWithParent: true, excludeEnd: true,\n    contains: TYPES,\n    keywords: LITERALS\n  };\n  var OBJECT = {\n    begin: '{', end: '}',\n    contains: [\n      {\n        className: 'attr',\n        begin: /\"/, end: /\"/,\n        contains: [hljs.BACKSLASH_ESCAPE],\n        illegal: '\\\\n',\n      },\n      hljs.inherit(VALUE_CONTAINER, {begin: /:/})\n    ],\n    illegal: '\\\\S'\n  };\n  var ARRAY = {\n    begin: '\\\\[', end: '\\\\]',\n    contains: [hljs.inherit(VALUE_CONTAINER)], // inherit is a workaround for a bug that makes shared modes with endsWithParent compile only the ending of one of the parents\n    illegal: '\\\\S'\n  };\n  TYPES.splice(TYPES.length, 0, OBJECT, ARRAY);\n  return {\n    contains: TYPES,\n    keywords: LITERALS,\n    illegal: '\\\\S'\n  };\n};"]}