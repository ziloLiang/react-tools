{"version":3,"sources":["node_modules/core-js/modules/es6.array.iterator.js"],"names":["addToUnscopables","require","step","Iterators","toIObject","module","exports","Array","iterated","kind","_t","_i","_k","O","index","length","undefined","Arguments"],"mappings":"AAAA;;AACA,IAAIA,mBAAmBC,QAAQ,uBAAR,CAAvB;AAAA,IACIC,OAAmBD,QAAQ,cAAR,CADvB;AAAA,IAEIE,YAAmBF,QAAQ,cAAR,CAFvB;AAAA,IAGIG,YAAmBH,QAAQ,eAAR,CAHvB;;AAKA;AACA;AACA;AACA;AACAI,OAAOC,OAAP,GAAiBL,QAAQ,gBAAR,EAA0BM,KAA1B,EAAiC,OAAjC,EAA0C,UAASC,QAAT,EAAmBC,IAAnB,EAAwB;AACjF,OAAKC,EAAL,GAAUN,UAAUI,QAAV,CAAV,CADiF,CAClD;AAC/B,OAAKG,EAAL,GAAU,CAAV,CAFiF,CAElD;AAC/B,OAAKC,EAAL,GAAUH,IAAV,CAHiF,CAGlD;AACjC;AACC,CALgB,EAKd,YAAU;AACX,MAAII,IAAQ,KAAKH,EAAjB;AAAA,MACID,OAAQ,KAAKG,EADjB;AAAA,MAEIE,QAAQ,KAAKH,EAAL,EAFZ;AAGA,MAAG,CAACE,CAAD,IAAMC,SAASD,EAAEE,MAApB,EAA2B;AACzB,SAAKL,EAAL,GAAUM,SAAV;AACA,WAAOd,KAAK,CAAL,CAAP;AACD;AACD,MAAGO,QAAQ,MAAX,EAAoB,OAAOP,KAAK,CAAL,EAAQY,KAAR,CAAP;AACpB,MAAGL,QAAQ,QAAX,EAAoB,OAAOP,KAAK,CAAL,EAAQW,EAAEC,KAAF,CAAR,CAAP;AACpB,SAAOZ,KAAK,CAAL,EAAQ,CAACY,KAAD,EAAQD,EAAEC,KAAF,CAAR,CAAR,CAAP;AACD,CAhBgB,EAgBd,QAhBc,CAAjB;;AAkBA;AACAX,UAAUc,SAAV,GAAsBd,UAAUI,KAAhC;;AAEAP,iBAAiB,MAAjB;AACAA,iBAAiB,QAAjB;AACAA,iBAAiB,SAAjB","file":"es6.array.iterator.js","sourceRoot":"/Users/liangdong06/work/react-tools","sourcesContent":["'use strict';\nvar addToUnscopables = require('./_add-to-unscopables')\n  , step             = require('./_iter-step')\n  , Iterators        = require('./_iterators')\n  , toIObject        = require('./_to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = require('./_iter-define')(Array, 'Array', function(iterated, kind){\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function(){\n  var O     = this._t\n    , kind  = this._k\n    , index = this._i++;\n  if(!O || index >= O.length){\n    this._t = undefined;\n    return step(1);\n  }\n  if(kind == 'keys'  )return step(0, index);\n  if(kind == 'values')return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');"]}