{"version":3,"sources":["tools/Radio/index.js"],"names":["Text","props","state","checkedIndex","findDefault","nextProps","defaultValue","radioList","idx","i","length","value","item","setState","trigger","map","changeHandle","bind","desc","Component"],"mappings":"AAAA;;;;;;AAMA;;;;;;;;;AAEA;;;;AACA;;;;;;;;;;IAEqBA,I;;;AAEjB,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA,gHACTA,KADS;;AAEf,cAAKC,KAAL,GAAa;AACTC,0BAAc,MAAKC,WAAL,CAAiBH,KAAjB;AADL,SAAb;AAFe;AAKlB;;;;kDACyBI,S,EAAW;AACjC,iBAAKH,KAAL,CAAWC,YAAX,GAA0B,KAAKC,WAAL,CAAiBC,SAAjB,CAA1B;AACH;;;oCACWJ,K,EAAO;AAAA,gBACRK,YADQ,GACmBL,KADnB,CACRK,YADQ;AAAA,gBACMC,SADN,GACmBN,KADnB,CACMM,SADN;;AAEf,gBAAIC,MAAM,CAAC,CAAX;AACA,gBAAIF,YAAJ,EAAkB;AACd,qBAAK,IAAIG,IAAIF,UAAUG,MAAV,GAAmB,CAAhC,EAAmCD,KAAK,CAAxC,EAA2CA,GAA3C,EAAgD;AAC5C,wBAAIF,UAAUE,CAAV,EAAaE,KAAb,KAAuBL,YAA3B,EAAyC;AACrCE,8BAAMC,CAAN;AACA;AACH;AACJ;AACJ;AACD,mBAAOD,GAAP;AACH;;;qCACYI,I,EAAMJ,G,EAAK;AACpB,iBAAKK,QAAL,CAAc;AACVV,8BAAcK;AADJ,aAAd;AAGA,gBAAI,KAAKP,KAAL,CAAWa,OAAf,EAAwB;AACpB,qBAAKb,KAAL,CAAWa,OAAX,CAAmBF,IAAnB,EAAyBJ,GAAzB;AACH;AACJ;;;iCAEQ;AAAA;;AACL;;AAEA,mBACI;AAAA;AAAA,kBAAK,WAAU,gBAAf;AAEQ,qBAAKP,KAAL,CAAWM,SAAX,CAAqBQ,GAArB,CAAyB,UAACH,IAAD,EAAOJ,GAAP,EAAe;AACpC,2BACI;AAAA;AAAA,0BAAO,KAAKI,KAAKD,KAAjB,EAAwB,SAAS,OAAKK,YAAL,CAAkBC,IAAlB,SAA6BL,IAA7B,EAAmCJ,GAAnC,CAAjC;AACI;AAAA;AAAA,8BAAM,WAAU,OAAhB;AAEQ,mCAAKN,KAAL,CAAWC,YAAX,KAA4BK,GAA5B,GACG,wCAAM,WAAU,aAAhB,GADH,GAC6C;AAHrD,yBADJ;AAOI;AAAA;AAAA,8BAAM,WAAU,MAAhB;AAAwBI,iCAAKM;AAA7B;AAPJ,qBADJ;AAWH,iBAZD;AAFR,aADJ;AAmBH;;;;EAvD6B,gBAAMC,S;;kBAAnBnB,I","file":"index.js","sourceRoot":"/Users/liangdong06/work/react-tools","sourcesContent":["/**\n * @file Radio Component\n * @description 类radio组件\n * @author liangdong06\n */\n\n'use strict';\n\nimport React from 'react';\nimport './styles.less';\n\nexport default class Text extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            checkedIndex: this.findDefault(props)\n        };\n    }\n    componentWillReceiveProps(nextProps) {\n        this.state.checkedIndex = this.findDefault(nextProps);\n    }\n    findDefault(props) {\n        const {defaultValue, radioList} = props;\n        let idx = -1;\n        if (defaultValue) {\n            for (let i = radioList.length - 1; i >= 0; i--) {\n                if (radioList[i].value === defaultValue) {\n                    idx = i;\n                    break;\n                }\n            }\n        }\n        return idx;\n    }\n    changeHandle(item, idx) {\n        this.setState({\n            checkedIndex: idx\n        });\n        if (this.props.trigger) {\n            this.props.trigger(item, idx);\n        }\n    }\n\n    render() {\n        // const {desc, } =  this.props;\n\n        return (\n            <div className='erp-radio-wrap'>\n                {\n                    this.props.radioList.map((item, idx) => {\n                        return (\n                            <label key={item.value} onClick={this.changeHandle.bind(this, item, idx)}>\n                                <span className='radio' >\n                                    {\n                                        this.state.checkedIndex === idx\n                                        ? (<span className='radio-inner' ></span>) : null\n                                    }\n                                </span>\n                                <span className='desc'>{item.desc}</span>\n                            </label>\n                        );\n                    })\n                }\n            </div>\n        );\n    }\n}\n"]}