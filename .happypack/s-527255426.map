{"version":3,"sources":["node_modules/react-dom/lib/ChangeEventPlugin.js"],"names":["EventPluginHub","require","EventPropagators","ExecutionEnvironment","ReactDOMComponentTree","ReactUpdates","SyntheticEvent","getEventTarget","isEventSupported","isTextInputElement","eventTypes","change","phasedRegistrationNames","bubbled","captured","dependencies","activeElement","activeElementInst","activeElementValue","activeElementValueProp","shouldUseChangeEvent","elem","nodeName","toLowerCase","type","doesChangeEventBubble","canUseDOM","document","documentMode","manualDispatchChangeEvent","nativeEvent","event","getPooled","accumulateTwoPhaseDispatches","batchedUpdates","runEventInBatch","enqueueEvents","processEventQueue","startWatchingForChangeEventIE8","target","targetInst","attachEvent","stopWatchingForChangeEventIE8","detachEvent","getTargetInstForChangeEvent","topLevelType","handleEventsForChangeEventIE8","isInputEventSupported","newValueProp","get","call","set","val","startWatchingForValueChange","value","Object","getOwnPropertyDescriptor","constructor","prototype","defineProperty","handlePropertyChange","addEventListener","stopWatchingForValueChange","removeEventListener","propertyName","srcElement","getTargetInstForInputEvent","handleEventsForInputEventIE","getTargetInstForInputEventIE","shouldUseClickEvent","getTargetInstForClickEvent","ChangeEventPlugin","extractEvents","nativeEventTarget","targetNode","getNodeFromInstance","window","getTargetInstFunc","handleEventFunc","inst","module","exports"],"mappings":"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","file":"ChangeEventPlugin.js","sourceRoot":"/Users/liangdong06/work/react-tools","sourcesContent":["/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar EventPluginHub = require('./EventPluginHub');\nvar EventPropagators = require('./EventPropagators');\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactUpdates = require('./ReactUpdates');\nvar SyntheticEvent = require('./SyntheticEvent');\n\nvar getEventTarget = require('./getEventTarget');\nvar isEventSupported = require('./isEventSupported');\nvar isTextInputElement = require('./isTextInputElement');\n\nvar eventTypes = {\n  change: {\n    phasedRegistrationNames: {\n      bubbled: 'onChange',\n      captured: 'onChangeCapture'\n    },\n    dependencies: ['topBlur', 'topChange', 'topClick', 'topFocus', 'topInput', 'topKeyDown', 'topKeyUp', 'topSelectionChange']\n  }\n};\n\n/**\n * For IE shims\n */\nvar activeElement = null;\nvar activeElementInst = null;\nvar activeElementValue = null;\nvar activeElementValueProp = null;\n\n/**\n * SECTION: handle `change` event\n */\nfunction shouldUseChangeEvent(elem) {\n  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();\n  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';\n}\n\nvar doesChangeEventBubble = false;\nif (ExecutionEnvironment.canUseDOM) {\n  // See `handleChange` comment below\n  doesChangeEventBubble = isEventSupported('change') && (!document.documentMode || document.documentMode > 8);\n}\n\nfunction manualDispatchChangeEvent(nativeEvent) {\n  var event = SyntheticEvent.getPooled(eventTypes.change, activeElementInst, nativeEvent, getEventTarget(nativeEvent));\n  EventPropagators.accumulateTwoPhaseDispatches(event);\n\n  // If change and propertychange bubbled, we'd just bind to it like all the\n  // other events and have it go through ReactBrowserEventEmitter. Since it\n  // doesn't, we manually listen for the events and so we have to enqueue and\n  // process the abstract event manually.\n  //\n  // Batching is necessary here in order to ensure that all event handlers run\n  // before the next rerender (including event handlers attached to ancestor\n  // elements instead of directly on the input). Without this, controlled\n  // components don't work properly in conjunction with event bubbling because\n  // the component is rerendered and the value reverted before all the event\n  // handlers can run. See https://github.com/facebook/react/issues/708.\n  ReactUpdates.batchedUpdates(runEventInBatch, event);\n}\n\nfunction runEventInBatch(event) {\n  EventPluginHub.enqueueEvents(event);\n  EventPluginHub.processEventQueue(false);\n}\n\nfunction startWatchingForChangeEventIE8(target, targetInst) {\n  activeElement = target;\n  activeElementInst = targetInst;\n  activeElement.attachEvent('onchange', manualDispatchChangeEvent);\n}\n\nfunction stopWatchingForChangeEventIE8() {\n  if (!activeElement) {\n    return;\n  }\n  activeElement.detachEvent('onchange', manualDispatchChangeEvent);\n  activeElement = null;\n  activeElementInst = null;\n}\n\nfunction getTargetInstForChangeEvent(topLevelType, targetInst) {\n  if (topLevelType === 'topChange') {\n    return targetInst;\n  }\n}\nfunction handleEventsForChangeEventIE8(topLevelType, target, targetInst) {\n  if (topLevelType === 'topFocus') {\n    // stopWatching() should be a noop here but we call it just in case we\n    // missed a blur event somehow.\n    stopWatchingForChangeEventIE8();\n    startWatchingForChangeEventIE8(target, targetInst);\n  } else if (topLevelType === 'topBlur') {\n    stopWatchingForChangeEventIE8();\n  }\n}\n\n/**\n * SECTION: handle `input` event\n */\nvar isInputEventSupported = false;\nif (ExecutionEnvironment.canUseDOM) {\n  // IE9 claims to support the input event but fails to trigger it when\n  // deleting text, so we ignore its input events.\n  // IE10+ fire input events to often, such when a placeholder\n  // changes or when an input with a placeholder is focused.\n  isInputEventSupported = isEventSupported('input') && (!document.documentMode || document.documentMode > 11);\n}\n\n/**\n * (For IE <=11) Replacement getter/setter for the `value` property that gets\n * set on the active element.\n */\nvar newValueProp = {\n  get: function () {\n    return activeElementValueProp.get.call(this);\n  },\n  set: function (val) {\n    // Cast to a string so we can do equality checks.\n    activeElementValue = '' + val;\n    activeElementValueProp.set.call(this, val);\n  }\n};\n\n/**\n * (For IE <=11) Starts tracking propertychange events on the passed-in element\n * and override the value property so that we can distinguish user events from\n * value changes in JS.\n */\nfunction startWatchingForValueChange(target, targetInst) {\n  activeElement = target;\n  activeElementInst = targetInst;\n  activeElementValue = target.value;\n  activeElementValueProp = Object.getOwnPropertyDescriptor(target.constructor.prototype, 'value');\n\n  // Not guarded in a canDefineProperty check: IE8 supports defineProperty only\n  // on DOM elements\n  Object.defineProperty(activeElement, 'value', newValueProp);\n  if (activeElement.attachEvent) {\n    activeElement.attachEvent('onpropertychange', handlePropertyChange);\n  } else {\n    activeElement.addEventListener('propertychange', handlePropertyChange, false);\n  }\n}\n\n/**\n * (For IE <=11) Removes the event listeners from the currently-tracked element,\n * if any exists.\n */\nfunction stopWatchingForValueChange() {\n  if (!activeElement) {\n    return;\n  }\n\n  // delete restores the original property definition\n  delete activeElement.value;\n\n  if (activeElement.detachEvent) {\n    activeElement.detachEvent('onpropertychange', handlePropertyChange);\n  } else {\n    activeElement.removeEventListener('propertychange', handlePropertyChange, false);\n  }\n\n  activeElement = null;\n  activeElementInst = null;\n  activeElementValue = null;\n  activeElementValueProp = null;\n}\n\n/**\n * (For IE <=11) Handles a propertychange event, sending a `change` event if\n * the value of the active element has changed.\n */\nfunction handlePropertyChange(nativeEvent) {\n  if (nativeEvent.propertyName !== 'value') {\n    return;\n  }\n  var value = nativeEvent.srcElement.value;\n  if (value === activeElementValue) {\n    return;\n  }\n  activeElementValue = value;\n\n  manualDispatchChangeEvent(nativeEvent);\n}\n\n/**\n * If a `change` event should be fired, returns the target's ID.\n */\nfunction getTargetInstForInputEvent(topLevelType, targetInst) {\n  if (topLevelType === 'topInput') {\n    // In modern browsers (i.e., not IE8 or IE9), the input event is exactly\n    // what we want so fall through here and trigger an abstract event\n    return targetInst;\n  }\n}\n\nfunction handleEventsForInputEventIE(topLevelType, target, targetInst) {\n  if (topLevelType === 'topFocus') {\n    // In IE8, we can capture almost all .value changes by adding a\n    // propertychange handler and looking for events with propertyName\n    // equal to 'value'\n    // In IE9-11, propertychange fires for most input events but is buggy and\n    // doesn't fire when text is deleted, but conveniently, selectionchange\n    // appears to fire in all of the remaining cases so we catch those and\n    // forward the event if the value has changed\n    // In either case, we don't want to call the event handler if the value\n    // is changed from JS so we redefine a setter for `.value` that updates\n    // our activeElementValue variable, allowing us to ignore those changes\n    //\n    // stopWatching() should be a noop here but we call it just in case we\n    // missed a blur event somehow.\n    stopWatchingForValueChange();\n    startWatchingForValueChange(target, targetInst);\n  } else if (topLevelType === 'topBlur') {\n    stopWatchingForValueChange();\n  }\n}\n\n// For IE8 and IE9.\nfunction getTargetInstForInputEventIE(topLevelType, targetInst) {\n  if (topLevelType === 'topSelectionChange' || topLevelType === 'topKeyUp' || topLevelType === 'topKeyDown') {\n    // On the selectionchange event, the target is just document which isn't\n    // helpful for us so just check activeElement instead.\n    //\n    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire\n    // propertychange on the first input event after setting `value` from a\n    // script and fires only keydown, keypress, keyup. Catching keyup usually\n    // gets it and catching keydown lets us fire an event for the first\n    // keystroke if user does a key repeat (it'll be a little delayed: right\n    // before the second keystroke). Other input methods (e.g., paste) seem to\n    // fire selectionchange normally.\n    if (activeElement && activeElement.value !== activeElementValue) {\n      activeElementValue = activeElement.value;\n      return activeElementInst;\n    }\n  }\n}\n\n/**\n * SECTION: handle `click` event\n */\nfunction shouldUseClickEvent(elem) {\n  // Use the `click` event to detect changes to checkbox and radio inputs.\n  // This approach works across all browsers, whereas `change` does not fire\n  // until `blur` in IE8.\n  return elem.nodeName && elem.nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');\n}\n\nfunction getTargetInstForClickEvent(topLevelType, targetInst) {\n  if (topLevelType === 'topClick') {\n    return targetInst;\n  }\n}\n\n/**\n * This plugin creates an `onChange` event that normalizes change events\n * across form elements. This event fires at a time when it's possible to\n * change the element's value without seeing a flicker.\n *\n * Supported elements are:\n * - input (see `isTextInputElement`)\n * - textarea\n * - select\n */\nvar ChangeEventPlugin = {\n\n  eventTypes: eventTypes,\n\n  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;\n\n    var getTargetInstFunc, handleEventFunc;\n    if (shouldUseChangeEvent(targetNode)) {\n      if (doesChangeEventBubble) {\n        getTargetInstFunc = getTargetInstForChangeEvent;\n      } else {\n        handleEventFunc = handleEventsForChangeEventIE8;\n      }\n    } else if (isTextInputElement(targetNode)) {\n      if (isInputEventSupported) {\n        getTargetInstFunc = getTargetInstForInputEvent;\n      } else {\n        getTargetInstFunc = getTargetInstForInputEventIE;\n        handleEventFunc = handleEventsForInputEventIE;\n      }\n    } else if (shouldUseClickEvent(targetNode)) {\n      getTargetInstFunc = getTargetInstForClickEvent;\n    }\n\n    if (getTargetInstFunc) {\n      var inst = getTargetInstFunc(topLevelType, targetInst);\n      if (inst) {\n        var event = SyntheticEvent.getPooled(eventTypes.change, inst, nativeEvent, nativeEventTarget);\n        event.type = 'change';\n        EventPropagators.accumulateTwoPhaseDispatches(event);\n        return event;\n      }\n    }\n\n    if (handleEventFunc) {\n      handleEventFunc(topLevelType, targetNode, targetInst);\n    }\n  }\n\n};\n\nmodule.exports = ChangeEventPlugin;"]}