{"version":3,"sources":["node_modules/remarkable/lib/rules_block/hr.js"],"names":["module","exports","hr","state","startLine","endLine","silent","marker","cnt","ch","pos","bMarks","max","eMarks","tShift","src","charCodeAt","line","tokens","push","type","lines","level"],"mappings":"AAAA;;AAEA;;AAGAA,OAAOC,OAAP,GAAiB,SAASC,EAAT,CAAYC,KAAZ,EAAmBC,SAAnB,EAA8BC,OAA9B,EAAuCC,MAAvC,EAA+C;AAC9D,MAAIC,MAAJ;AAAA,MAAYC,GAAZ;AAAA,MAAiBC,EAAjB;AAAA,MACIC,MAAMP,MAAMQ,MAAN,CAAaP,SAAb,CADV;AAAA,MAEIQ,MAAMT,MAAMU,MAAN,CAAaT,SAAb,CAFV;;AAIAM,SAAOP,MAAMW,MAAN,CAAaV,SAAb,CAAP;;AAEA,MAAIM,MAAME,GAAV,EAAe;AAAE,WAAO,KAAP;AAAe;;AAEhCL,WAASJ,MAAMY,GAAN,CAAUC,UAAV,CAAqBN,KAArB,CAAT;;AAEA;AACA,MAAIH,WAAW,IAAX,CAAe,OAAf,IACAA,WAAW,IADX,CACe,OADf,IAEAA,WAAW,IAFf,CAEmB,OAFnB,EAE4B;AAC1B,aAAO,KAAP;AACD;;AAED;;AAEAC,QAAM,CAAN;AACA,SAAOE,MAAME,GAAb,EAAkB;AAChBH,SAAKN,MAAMY,GAAN,CAAUC,UAAV,CAAqBN,KAArB,CAAL;AACA,QAAID,OAAOF,MAAP,IAAiBE,OAAO,IAA5B,CAAgC,WAAhC,EAA6C;AAAE,eAAO,KAAP;AAAe;AAC9D,QAAIA,OAAOF,MAAX,EAAmB;AAAEC;AAAQ;AAC9B;;AAED,MAAIA,MAAM,CAAV,EAAa;AAAE,WAAO,KAAP;AAAe;;AAE9B,MAAIF,MAAJ,EAAY;AAAE,WAAO,IAAP;AAAc;;AAE5BH,QAAMc,IAAN,GAAab,YAAY,CAAzB;AACAD,QAAMe,MAAN,CAAaC,IAAb,CAAkB;AAChBC,UAAM,IADU;AAEhBC,WAAO,CAAEjB,SAAF,EAAaD,MAAMc,IAAnB,CAFS;AAGhBK,WAAOnB,MAAMmB;AAHG,GAAlB;;AAMA,SAAO,IAAP;AACD,CAvCD","file":"hr.js","sourceRoot":"/Users/liangdong06/work/react-tools","sourcesContent":["// Horizontal rule\n\n'use strict';\n\n\nmodule.exports = function hr(state, startLine, endLine, silent) {\n  var marker, cnt, ch,\n      pos = state.bMarks[startLine],\n      max = state.eMarks[startLine];\n\n  pos += state.tShift[startLine];\n\n  if (pos > max) { return false; }\n\n  marker = state.src.charCodeAt(pos++);\n\n  // Check hr marker\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x5F/* _ */) {\n    return false;\n  }\n\n  // markers can be mixed with spaces, but there should be at least 3 one\n\n  cnt = 1;\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos++);\n    if (ch !== marker && ch !== 0x20/* space */) { return false; }\n    if (ch === marker) { cnt++; }\n  }\n\n  if (cnt < 3) { return false; }\n\n  if (silent) { return true; }\n\n  state.line = startLine + 1;\n  state.tokens.push({\n    type: 'hr',\n    lines: [ startLine, state.line ],\n    level: state.level\n  });\n\n  return true;\n};\n"]}