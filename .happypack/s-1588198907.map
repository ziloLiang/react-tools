{"version":3,"sources":["node_modules/highlight.js/lib/languages/nimrod.js"],"names":["module","exports","hljs","aliases","keywords","keyword","literal","built_in","contains","className","begin","end","relevance","QUOTE_STRING_MODE","variants","HASH_COMMENT_MODE"],"mappings":";;AAAAA,OAAOC,OAAP,GAAiB,UAASC,IAAT,EAAe;AAC9B,SAAO;AACLC,aAAS,CAAC,KAAD,CADJ;AAELC,cAAU;AACRC,eACE,yEACA,mEADA,GAEA,oEAFA,GAGA,qEAHA,GAIA,oEAJA,GAKA,mCAPM;AAQRC,eACE,sDATM;AAURC,gBACE,sEACA,kEADA,GAEA,oEAFA,GAGA,gEAHA,GAIA;AAfM,KAFL;AAmBLC,cAAU,CAAE;AACRC,iBAAW,MADH,EACW;AACnBC,aAAO,KAFC;AAGRC,WAAK,KAHG;AAIRC,iBAAW;AAJH,KAAF,EAKL;AACDH,iBAAW,QADV;AAEDC,aAAO,cAFN;AAGDC,WAAK,GAHJ;AAIDH,gBAAU,CAAC,EAACE,OAAO,IAAR,EAAD;AAJT,KALK,EAUL;AACDD,iBAAW,QADV;AAEDC,aAAO,mBAFN;AAGDC,WAAK;AAHJ,KAVK,EAeRT,KAAKW,iBAfG,EAgBR;AACEJ,iBAAW,MADb;AAEEC,aAAO,cAFT;AAGEE,iBAAW;AAHb,KAhBQ,EAoBL;AACDH,iBAAW,QADV;AAEDG,iBAAW,CAFV;AAGDE,gBAAU,CACR,EAACJ,OAAO,0DAAR,EADQ,EAER,EAACA,OAAO,6CAAR,EAFQ,EAGR,EAACA,OAAO,+CAAR,EAHQ,EAIR,EAACA,OAAO,uCAAR,EAJQ;AAHT,KApBK,EA8BRR,KAAKa,iBA9BG;AAnBL,GAAP;AAoDD,CArDD","file":"nimrod.js","sourceRoot":"/Users/liangdong06/work/react-tools","sourcesContent":["module.exports = function(hljs) {\n  return {\n    aliases: ['nim'],\n    keywords: {\n      keyword:\n        'addr and as asm bind block break case cast const continue converter ' +\n        'discard distinct div do elif else end enum except export finally ' +\n        'for from generic if import in include interface is isnot iterator ' +\n        'let macro method mixin mod nil not notin object of or out proc ptr ' +\n        'raise ref return shl shr static template try tuple type using var ' +\n        'when while with without xor yield',\n      literal:\n        'shared guarded stdin stdout stderr result true false',\n      built_in:\n        'int int8 int16 int32 int64 uint uint8 uint16 uint32 uint64 float ' +\n        'float32 float64 bool char string cstring pointer expr stmt void ' +\n        'auto any range array openarray varargs seq set clong culong cchar ' +\n        'cschar cshort cint csize clonglong cfloat cdouble clongdouble ' +\n        'cuchar cushort cuint culonglong cstringarray semistatic'\n    },\n    contains: [ {\n        className: 'meta', // Actually pragma\n        begin: /{\\./,\n        end: /\\.}/,\n        relevance: 10\n      }, {\n        className: 'string',\n        begin: /[a-zA-Z]\\w*\"/,\n        end: /\"/,\n        contains: [{begin: /\"\"/}]\n      }, {\n        className: 'string',\n        begin: /([a-zA-Z]\\w*)?\"\"\"/,\n        end: /\"\"\"/\n      },\n      hljs.QUOTE_STRING_MODE,\n      {\n        className: 'type',\n        begin: /\\b[A-Z]\\w+\\b/,\n        relevance: 0\n      }, {\n        className: 'number',\n        relevance: 0,\n        variants: [\n          {begin: /\\b(0[xX][0-9a-fA-F][_0-9a-fA-F]*)('?[iIuU](8|16|32|64))?/},\n          {begin: /\\b(0o[0-7][_0-7]*)('?[iIuUfF](8|16|32|64))?/},\n          {begin: /\\b(0(b|B)[01][_01]*)('?[iIuUfF](8|16|32|64))?/},\n          {begin: /\\b(\\d[_\\d]*)('?[iIuUfF](8|16|32|64))?/}\n        ]\n      },\n      hljs.HASH_COMMENT_MODE\n    ]\n  }\n};"]}