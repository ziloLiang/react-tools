{"version":3,"sources":["node_modules/react/lib/ReactCompositeComponent.js"],"names":["_prodInvariant","require","_assign","ReactComponentEnvironment","ReactCurrentOwner","ReactElement","ReactErrorUtils","ReactInstanceMap","ReactInstrumentation","ReactNodeTypes","ReactPropTypeLocations","ReactReconciler","checkReactTypeSpec","emptyObject","invariant","shallowEqual","shouldUpdateReactComponent","warning","CompositeTypes","ImpureClass","PureClass","StatelessFunctional","StatelessComponent","Component","prototype","render","get","_currentElement","type","element","props","context","updater","warnIfInvalidElement","process","env","NODE_ENV","isValidElement","displayName","name","childContextTypes","shouldConstruct","isReactComponent","isPureComponent","isPureReactComponent","measureLifeCyclePerf","fn","debugID","timerType","debugTool","onBeginLifeCycleTimer","onEndLifeCycleTimer","nextMountID","ReactCompositeComponentMixin","construct","_rootNodeID","_compositeType","_instance","_hostParent","_hostContainerInfo","_updateBatchNumber","_pendingElement","_pendingStateQueue","_pendingReplaceState","_pendingForceUpdate","_renderedNodeType","_renderedComponent","_context","_mountOrder","_topLevelWrapper","_pendingCallbacks","_calledComponentWillUnmount","_warnedAboutRefsInRender","mountComponent","transaction","hostParent","hostContainerInfo","_this","publicProps","publicContext","_processContext","updateQueue","getUpdateQueue","doConstruct","inst","_constructComponent","renderedElement","propsMutated","componentName","undefined","refs","set","getInitialState","isReactClassApproved","getName","getDefaultProps","propTypes","contextTypes","componentShouldUpdate","componentDidUnmount","componentWillRecieveProps","initialState","state","Array","isArray","markup","unstable_handleError","performInitialMountWithErrorHandling","performInitialMount","componentDidMount","getReactMountReady","enqueue","_debugID","current","_constructComponentWithoutOwner","checkpoint","e","rollback","_processPendingState","unmountComponent","componentWillMount","_renderValidatedComponent","nodeType","getType","child","_instantiateReactComponent","EMPTY","_processChildContext","childDebugIDs","onSetChildren","getHostNode","safely","componentWillUnmount","invokeGuardedCallback","bind","remove","_maskContext","maskedContext","contextName","_checkContextTypes","currentContext","childContext","getChildContext","onBeginProcessingChildContext","onEndProcessingChildContext","typeSpecs","values","location","receiveComponent","nextElement","nextContext","prevElement","prevContext","updateComponent","performUpdateIfNecessary","prevParentElement","nextParentElement","prevUnmaskedContext","nextUnmaskedContext","willReceive","prevProps","nextProps","componentWillReceiveProps","nextState","shouldUpdate","shouldComponentUpdate","_performComponentUpdate","queue","replace","length","i","partial","call","unmaskedContext","_this2","hasComponentDidUpdate","Boolean","componentDidUpdate","prevState","componentWillUpdate","_updateRenderedComponent","prevComponentInstance","prevRenderedElement","nextRenderedElement","oldHostNode","nextMarkup","_replaceNodeWithMarkup","prevInstance","replaceNodeWithMarkup","_renderValidatedComponentWithoutOwnerOrContext","renderedComponent","_isMockFunction","attachRef","ref","component","getPublicInstance","publicComponentInstance","detachRef","constructor","ReactCompositeComponent","Mixin","module","exports"],"mappings":"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","file":"ReactCompositeComponent.js","sourceRoot":"/Users/liangdong06/work/react-tools","sourcesContent":["/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactCompositeComponent\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant'),\n    _assign = require('object-assign');\n\nvar ReactComponentEnvironment = require('./ReactComponentEnvironment');\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\nvar ReactElement = require('./ReactElement');\nvar ReactErrorUtils = require('./ReactErrorUtils');\nvar ReactInstanceMap = require('./ReactInstanceMap');\nvar ReactInstrumentation = require('./ReactInstrumentation');\nvar ReactNodeTypes = require('./ReactNodeTypes');\nvar ReactPropTypeLocations = require('./ReactPropTypeLocations');\nvar ReactReconciler = require('./ReactReconciler');\n\nvar checkReactTypeSpec = require('./checkReactTypeSpec');\nvar emptyObject = require('fbjs/lib/emptyObject');\nvar invariant = require('fbjs/lib/invariant');\nvar shallowEqual = require('fbjs/lib/shallowEqual');\nvar shouldUpdateReactComponent = require('./shouldUpdateReactComponent');\nvar warning = require('fbjs/lib/warning');\n\nvar CompositeTypes = {\n  ImpureClass: 0,\n  PureClass: 1,\n  StatelessFunctional: 2\n};\n\nfunction StatelessComponent(Component) {}\nStatelessComponent.prototype.render = function () {\n  var Component = ReactInstanceMap.get(this)._currentElement.type;\n  var element = Component(this.props, this.context, this.updater);\n  warnIfInvalidElement(Component, element);\n  return element;\n};\n\nfunction warnIfInvalidElement(Component, element) {\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== 'production' ? warning(element === null || element === false || ReactElement.isValidElement(element), '%s(...): A valid React element (or null) must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : void 0;\n    process.env.NODE_ENV !== 'production' ? warning(!Component.childContextTypes, '%s(...): childContextTypes cannot be defined on a functional component.', Component.displayName || Component.name || 'Component') : void 0;\n  }\n}\n\nfunction shouldConstruct(Component) {\n  return !!(Component.prototype && Component.prototype.isReactComponent);\n}\n\nfunction isPureComponent(Component) {\n  return !!(Component.prototype && Component.prototype.isPureReactComponent);\n}\n\n// Separated into a function to contain deoptimizations caused by try/finally.\nfunction measureLifeCyclePerf(fn, debugID, timerType) {\n  if (debugID === 0) {\n    // Top-level wrappers (see ReactMount) and empty components (see\n    // ReactDOMEmptyComponent) are invisible to hooks and devtools.\n    // Both are implementation details that should go away in the future.\n    return fn();\n  }\n\n  ReactInstrumentation.debugTool.onBeginLifeCycleTimer(debugID, timerType);\n  try {\n    return fn();\n  } finally {\n    ReactInstrumentation.debugTool.onEndLifeCycleTimer(debugID, timerType);\n  }\n}\n\n/**\n * ------------------ The Life-Cycle of a Composite Component ------------------\n *\n * - constructor: Initialization of state. The instance is now retained.\n *   - componentWillMount\n *   - render\n *   - [children's constructors]\n *     - [children's componentWillMount and render]\n *     - [children's componentDidMount]\n *     - componentDidMount\n *\n *       Update Phases:\n *       - componentWillReceiveProps (only called if parent updated)\n *       - shouldComponentUpdate\n *         - componentWillUpdate\n *           - render\n *           - [children's constructors or receive props phases]\n *         - componentDidUpdate\n *\n *     - componentWillUnmount\n *     - [children's componentWillUnmount]\n *   - [children destroyed]\n * - (destroyed): The instance is now blank, released by React and ready for GC.\n *\n * -----------------------------------------------------------------------------\n */\n\n/**\n * An incrementing ID assigned to each component when it is mounted. This is\n * used to enforce the order in which `ReactUpdates` updates dirty components.\n *\n * @private\n */\nvar nextMountID = 1;\n\n/**\n * @lends {ReactCompositeComponent.prototype}\n */\nvar ReactCompositeComponentMixin = {\n\n  /**\n   * Base constructor for all composite component.\n   *\n   * @param {ReactElement} element\n   * @final\n   * @internal\n   */\n  construct: function (element) {\n    this._currentElement = element;\n    this._rootNodeID = 0;\n    this._compositeType = null;\n    this._instance = null;\n    this._hostParent = null;\n    this._hostContainerInfo = null;\n\n    // See ReactUpdateQueue\n    this._updateBatchNumber = null;\n    this._pendingElement = null;\n    this._pendingStateQueue = null;\n    this._pendingReplaceState = false;\n    this._pendingForceUpdate = false;\n\n    this._renderedNodeType = null;\n    this._renderedComponent = null;\n    this._context = null;\n    this._mountOrder = 0;\n    this._topLevelWrapper = null;\n\n    // See ReactUpdates and ReactUpdateQueue.\n    this._pendingCallbacks = null;\n\n    // ComponentWillUnmount shall only be called once\n    this._calledComponentWillUnmount = false;\n\n    if (process.env.NODE_ENV !== 'production') {\n      this._warnedAboutRefsInRender = false;\n    }\n  },\n\n  /**\n   * Initializes the component, renders markup, and registers event listeners.\n   *\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @param {?object} hostParent\n   * @param {?object} hostContainerInfo\n   * @param {?object} context\n   * @return {?string} Rendered markup to be inserted into the DOM.\n   * @final\n   * @internal\n   */\n  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {\n    var _this = this;\n\n    this._context = context;\n    this._mountOrder = nextMountID++;\n    this._hostParent = hostParent;\n    this._hostContainerInfo = hostContainerInfo;\n\n    var publicProps = this._currentElement.props;\n    var publicContext = this._processContext(context);\n\n    var Component = this._currentElement.type;\n\n    var updateQueue = transaction.getUpdateQueue();\n\n    // Initialize the public class\n    var doConstruct = shouldConstruct(Component);\n    var inst = this._constructComponent(doConstruct, publicProps, publicContext, updateQueue);\n    var renderedElement;\n\n    // Support functional components\n    if (!doConstruct && (inst == null || inst.render == null)) {\n      renderedElement = inst;\n      warnIfInvalidElement(Component, renderedElement);\n      !(inst === null || inst === false || ReactElement.isValidElement(inst)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s(...): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : _prodInvariant('105', Component.displayName || Component.name || 'Component') : void 0;\n      inst = new StatelessComponent(Component);\n      this._compositeType = CompositeTypes.StatelessFunctional;\n    } else {\n      if (isPureComponent(Component)) {\n        this._compositeType = CompositeTypes.PureClass;\n      } else {\n        this._compositeType = CompositeTypes.ImpureClass;\n      }\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      // This will throw later in _renderValidatedComponent, but add an early\n      // warning now to help debugging\n      if (inst.render == null) {\n        process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', Component.displayName || Component.name || 'Component') : void 0;\n      }\n\n      var propsMutated = inst.props !== publicProps;\n      var componentName = Component.displayName || Component.name || 'Component';\n\n      process.env.NODE_ENV !== 'production' ? warning(inst.props === undefined || !propsMutated, '%s(...): When calling super() in `%s`, make sure to pass ' + 'up the same props that your component\\'s constructor was passed.', componentName, componentName) : void 0;\n    }\n\n    // These should be set up in the constructor, but as a convenience for\n    // simpler class abstractions, we set them up after the fact.\n    inst.props = publicProps;\n    inst.context = publicContext;\n    inst.refs = emptyObject;\n    inst.updater = updateQueue;\n\n    this._instance = inst;\n\n    // Store a reference from the instance back to the internal representation\n    ReactInstanceMap.set(inst, this);\n\n    if (process.env.NODE_ENV !== 'production') {\n      // Since plain JS classes are defined without any special initialization\n      // logic, we can not catch common errors early. Therefore, we have to\n      // catch them here, at initialization time, instead.\n      process.env.NODE_ENV !== 'production' ? warning(!inst.getInitialState || inst.getInitialState.isReactClassApproved, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', this.getName() || 'a component') : void 0;\n      process.env.NODE_ENV !== 'production' ? warning(!inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', this.getName() || 'a component') : void 0;\n      process.env.NODE_ENV !== 'production' ? warning(!inst.propTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', this.getName() || 'a component') : void 0;\n      process.env.NODE_ENV !== 'production' ? warning(!inst.contextTypes, 'contextTypes was defined as an instance property on %s. Use a ' + 'static property to define contextTypes instead.', this.getName() || 'a component') : void 0;\n      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentShouldUpdate !== 'function', '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', this.getName() || 'A component') : void 0;\n      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentDidUnmount !== 'function', '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', this.getName() || 'A component') : void 0;\n      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentWillRecieveProps !== 'function', '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', this.getName() || 'A component') : void 0;\n    }\n\n    var initialState = inst.state;\n    if (initialState === undefined) {\n      inst.state = initialState = null;\n    }\n    !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.state: must be set to an object or null', this.getName() || 'ReactCompositeComponent') : _prodInvariant('106', this.getName() || 'ReactCompositeComponent') : void 0;\n\n    this._pendingStateQueue = null;\n    this._pendingReplaceState = false;\n    this._pendingForceUpdate = false;\n\n    var markup;\n    if (inst.unstable_handleError) {\n      markup = this.performInitialMountWithErrorHandling(renderedElement, hostParent, hostContainerInfo, transaction, context);\n    } else {\n      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);\n    }\n\n    if (inst.componentDidMount) {\n      if (process.env.NODE_ENV !== 'production') {\n        transaction.getReactMountReady().enqueue(function () {\n          measureLifeCyclePerf(function () {\n            return inst.componentDidMount();\n          }, _this._debugID, 'componentDidMount');\n        });\n      } else {\n        transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);\n      }\n    }\n\n    return markup;\n  },\n\n  _constructComponent: function (doConstruct, publicProps, publicContext, updateQueue) {\n    if (process.env.NODE_ENV !== 'production') {\n      ReactCurrentOwner.current = this;\n      try {\n        return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);\n      } finally {\n        ReactCurrentOwner.current = null;\n      }\n    } else {\n      return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);\n    }\n  },\n\n  _constructComponentWithoutOwner: function (doConstruct, publicProps, publicContext, updateQueue) {\n    var Component = this._currentElement.type;\n\n    if (doConstruct) {\n      if (process.env.NODE_ENV !== 'production') {\n        return measureLifeCyclePerf(function () {\n          return new Component(publicProps, publicContext, updateQueue);\n        }, this._debugID, 'ctor');\n      } else {\n        return new Component(publicProps, publicContext, updateQueue);\n      }\n    }\n\n    // This can still be an instance in case of factory components\n    // but we'll count this as time spent rendering as the more common case.\n    if (process.env.NODE_ENV !== 'production') {\n      return measureLifeCyclePerf(function () {\n        return Component(publicProps, publicContext, updateQueue);\n      }, this._debugID, 'render');\n    } else {\n      return Component(publicProps, publicContext, updateQueue);\n    }\n  },\n\n  performInitialMountWithErrorHandling: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {\n    var markup;\n    var checkpoint = transaction.checkpoint();\n    try {\n      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);\n    } catch (e) {\n      // Roll back to checkpoint, handle error (which may add items to the transaction), and take a new checkpoint\n      transaction.rollback(checkpoint);\n      this._instance.unstable_handleError(e);\n      if (this._pendingStateQueue) {\n        this._instance.state = this._processPendingState(this._instance.props, this._instance.context);\n      }\n      checkpoint = transaction.checkpoint();\n\n      this._renderedComponent.unmountComponent(true);\n      transaction.rollback(checkpoint);\n\n      // Try again - we've informed the component about the error, so they can render an error message this time.\n      // If this throws again, the error will bubble up (and can be caught by a higher error boundary).\n      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);\n    }\n    return markup;\n  },\n\n  performInitialMount: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {\n    var inst = this._instance;\n\n    var debugID = 0;\n    if (process.env.NODE_ENV !== 'production') {\n      debugID = this._debugID;\n    }\n\n    if (inst.componentWillMount) {\n      if (process.env.NODE_ENV !== 'production') {\n        measureLifeCyclePerf(function () {\n          return inst.componentWillMount();\n        }, debugID, 'componentWillMount');\n      } else {\n        inst.componentWillMount();\n      }\n      // When mounting, calls to `setState` by `componentWillMount` will set\n      // `this._pendingStateQueue` without triggering a re-render.\n      if (this._pendingStateQueue) {\n        inst.state = this._processPendingState(inst.props, inst.context);\n      }\n    }\n\n    // If not a stateless component, we now render\n    if (renderedElement === undefined) {\n      renderedElement = this._renderValidatedComponent();\n    }\n\n    var nodeType = ReactNodeTypes.getType(renderedElement);\n    this._renderedNodeType = nodeType;\n    var child = this._instantiateReactComponent(renderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */\n    );\n    this._renderedComponent = child;\n\n    var markup = ReactReconciler.mountComponent(child, transaction, hostParent, hostContainerInfo, this._processChildContext(context), debugID);\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (debugID !== 0) {\n        var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];\n        ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);\n      }\n    }\n\n    return markup;\n  },\n\n  getHostNode: function () {\n    return ReactReconciler.getHostNode(this._renderedComponent);\n  },\n\n  /**\n   * Releases any resources allocated by `mountComponent`.\n   *\n   * @final\n   * @internal\n   */\n  unmountComponent: function (safely) {\n    if (!this._renderedComponent) {\n      return;\n    }\n\n    var inst = this._instance;\n\n    if (inst.componentWillUnmount && !inst._calledComponentWillUnmount) {\n      inst._calledComponentWillUnmount = true;\n\n      if (safely) {\n        var name = this.getName() + '.componentWillUnmount()';\n        ReactErrorUtils.invokeGuardedCallback(name, inst.componentWillUnmount.bind(inst));\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          measureLifeCyclePerf(function () {\n            return inst.componentWillUnmount();\n          }, this._debugID, 'componentWillUnmount');\n        } else {\n          inst.componentWillUnmount();\n        }\n      }\n    }\n\n    if (this._renderedComponent) {\n      ReactReconciler.unmountComponent(this._renderedComponent, safely);\n      this._renderedNodeType = null;\n      this._renderedComponent = null;\n      this._instance = null;\n    }\n\n    // Reset pending fields\n    // Even if this component is scheduled for another update in ReactUpdates,\n    // it would still be ignored because these fields are reset.\n    this._pendingStateQueue = null;\n    this._pendingReplaceState = false;\n    this._pendingForceUpdate = false;\n    this._pendingCallbacks = null;\n    this._pendingElement = null;\n\n    // These fields do not really need to be reset since this object is no\n    // longer accessible.\n    this._context = null;\n    this._rootNodeID = 0;\n    this._topLevelWrapper = null;\n\n    // Delete the reference from the instance to this internal representation\n    // which allow the internals to be properly cleaned up even if the user\n    // leaks a reference to the public instance.\n    ReactInstanceMap.remove(inst);\n\n    // Some existing components rely on inst.props even after they've been\n    // destroyed (in event handlers).\n    // TODO: inst.props = null;\n    // TODO: inst.state = null;\n    // TODO: inst.context = null;\n  },\n\n  /**\n   * Filters the context object to only contain keys specified in\n   * `contextTypes`\n   *\n   * @param {object} context\n   * @return {?object}\n   * @private\n   */\n  _maskContext: function (context) {\n    var Component = this._currentElement.type;\n    var contextTypes = Component.contextTypes;\n    if (!contextTypes) {\n      return emptyObject;\n    }\n    var maskedContext = {};\n    for (var contextName in contextTypes) {\n      maskedContext[contextName] = context[contextName];\n    }\n    return maskedContext;\n  },\n\n  /**\n   * Filters the context object to only contain keys specified in\n   * `contextTypes`, and asserts that they are valid.\n   *\n   * @param {object} context\n   * @return {?object}\n   * @private\n   */\n  _processContext: function (context) {\n    var maskedContext = this._maskContext(context);\n    if (process.env.NODE_ENV !== 'production') {\n      var Component = this._currentElement.type;\n      if (Component.contextTypes) {\n        this._checkContextTypes(Component.contextTypes, maskedContext, ReactPropTypeLocations.context);\n      }\n    }\n    return maskedContext;\n  },\n\n  /**\n   * @param {object} currentContext\n   * @return {object}\n   * @private\n   */\n  _processChildContext: function (currentContext) {\n    var Component = this._currentElement.type;\n    var inst = this._instance;\n    var childContext;\n\n    if (inst.getChildContext) {\n      if (process.env.NODE_ENV !== 'production') {\n        ReactInstrumentation.debugTool.onBeginProcessingChildContext();\n        try {\n          childContext = inst.getChildContext();\n        } finally {\n          ReactInstrumentation.debugTool.onEndProcessingChildContext();\n        }\n      } else {\n        childContext = inst.getChildContext();\n      }\n    }\n\n    if (childContext) {\n      !(typeof Component.childContextTypes === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().', this.getName() || 'ReactCompositeComponent') : _prodInvariant('107', this.getName() || 'ReactCompositeComponent') : void 0;\n      if (process.env.NODE_ENV !== 'production') {\n        this._checkContextTypes(Component.childContextTypes, childContext, ReactPropTypeLocations.childContext);\n      }\n      for (var name in childContext) {\n        !(name in Component.childContextTypes) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): key \"%s\" is not defined in childContextTypes.', this.getName() || 'ReactCompositeComponent', name) : _prodInvariant('108', this.getName() || 'ReactCompositeComponent', name) : void 0;\n      }\n      return _assign({}, currentContext, childContext);\n    }\n    return currentContext;\n  },\n\n  /**\n   * Assert that the context types are valid\n   *\n   * @param {object} typeSpecs Map of context field to a ReactPropType\n   * @param {object} values Runtime values that need to be type-checked\n   * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n   * @private\n   */\n  _checkContextTypes: function (typeSpecs, values, location) {\n    checkReactTypeSpec(typeSpecs, values, location, this.getName(), null, this._debugID);\n  },\n\n  receiveComponent: function (nextElement, transaction, nextContext) {\n    var prevElement = this._currentElement;\n    var prevContext = this._context;\n\n    this._pendingElement = null;\n\n    this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);\n  },\n\n  /**\n   * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`\n   * is set, update the component.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   */\n  performUpdateIfNecessary: function (transaction) {\n    if (this._pendingElement != null) {\n      ReactReconciler.receiveComponent(this, this._pendingElement, transaction, this._context);\n    } else if (this._pendingStateQueue !== null || this._pendingForceUpdate) {\n      this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context);\n    } else {\n      this._updateBatchNumber = null;\n    }\n  },\n\n  /**\n   * Perform an update to a mounted component. The componentWillReceiveProps and\n   * shouldComponentUpdate methods are called, then (assuming the update isn't\n   * skipped) the remaining update lifecycle methods are called and the DOM\n   * representation is updated.\n   *\n   * By default, this implements React's rendering and reconciliation algorithm.\n   * Sophisticated clients may wish to override this.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @param {ReactElement} prevParentElement\n   * @param {ReactElement} nextParentElement\n   * @internal\n   * @overridable\n   */\n  updateComponent: function (transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {\n    var inst = this._instance;\n    !(inst != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Attempted to update component `%s` that has already been unmounted (or failed to mount).', this.getName() || 'ReactCompositeComponent') : _prodInvariant('136', this.getName() || 'ReactCompositeComponent') : void 0;\n\n    var willReceive = false;\n    var nextContext;\n\n    // Determine if the context has changed or not\n    if (this._context === nextUnmaskedContext) {\n      nextContext = inst.context;\n    } else {\n      nextContext = this._processContext(nextUnmaskedContext);\n      willReceive = true;\n    }\n\n    var prevProps = prevParentElement.props;\n    var nextProps = nextParentElement.props;\n\n    // Not a simple state update but a props update\n    if (prevParentElement !== nextParentElement) {\n      willReceive = true;\n    }\n\n    // An update here will schedule an update but immediately set\n    // _pendingStateQueue which will ensure that any state updates gets\n    // immediately reconciled instead of waiting for the next batch.\n    if (willReceive && inst.componentWillReceiveProps) {\n      if (process.env.NODE_ENV !== 'production') {\n        measureLifeCyclePerf(function () {\n          return inst.componentWillReceiveProps(nextProps, nextContext);\n        }, this._debugID, 'componentWillReceiveProps');\n      } else {\n        inst.componentWillReceiveProps(nextProps, nextContext);\n      }\n    }\n\n    var nextState = this._processPendingState(nextProps, nextContext);\n    var shouldUpdate = true;\n\n    if (!this._pendingForceUpdate) {\n      if (inst.shouldComponentUpdate) {\n        if (process.env.NODE_ENV !== 'production') {\n          shouldUpdate = measureLifeCyclePerf(function () {\n            return inst.shouldComponentUpdate(nextProps, nextState, nextContext);\n          }, this._debugID, 'shouldComponentUpdate');\n        } else {\n          shouldUpdate = inst.shouldComponentUpdate(nextProps, nextState, nextContext);\n        }\n      } else {\n        if (this._compositeType === CompositeTypes.PureClass) {\n          shouldUpdate = !shallowEqual(prevProps, nextProps) || !shallowEqual(inst.state, nextState);\n        }\n      }\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(shouldUpdate !== undefined, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', this.getName() || 'ReactCompositeComponent') : void 0;\n    }\n\n    this._updateBatchNumber = null;\n    if (shouldUpdate) {\n      this._pendingForceUpdate = false;\n      // Will set `this.props`, `this.state` and `this.context`.\n      this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext);\n    } else {\n      // If it's determined that a component should not update, we still want\n      // to set props and state but we shortcut the rest of the update.\n      this._currentElement = nextParentElement;\n      this._context = nextUnmaskedContext;\n      inst.props = nextProps;\n      inst.state = nextState;\n      inst.context = nextContext;\n    }\n  },\n\n  _processPendingState: function (props, context) {\n    var inst = this._instance;\n    var queue = this._pendingStateQueue;\n    var replace = this._pendingReplaceState;\n    this._pendingReplaceState = false;\n    this._pendingStateQueue = null;\n\n    if (!queue) {\n      return inst.state;\n    }\n\n    if (replace && queue.length === 1) {\n      return queue[0];\n    }\n\n    var nextState = _assign({}, replace ? queue[0] : inst.state);\n    for (var i = replace ? 1 : 0; i < queue.length; i++) {\n      var partial = queue[i];\n      _assign(nextState, typeof partial === 'function' ? partial.call(inst, nextState, props, context) : partial);\n    }\n\n    return nextState;\n  },\n\n  /**\n   * Merges new props and state, notifies delegate methods of update and\n   * performs update.\n   *\n   * @param {ReactElement} nextElement Next element\n   * @param {object} nextProps Next public object to set as properties.\n   * @param {?object} nextState Next object to set as state.\n   * @param {?object} nextContext Next public object to set as context.\n   * @param {ReactReconcileTransaction} transaction\n   * @param {?object} unmaskedContext\n   * @private\n   */\n  _performComponentUpdate: function (nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {\n    var _this2 = this;\n\n    var inst = this._instance;\n\n    var hasComponentDidUpdate = Boolean(inst.componentDidUpdate);\n    var prevProps;\n    var prevState;\n    var prevContext;\n    if (hasComponentDidUpdate) {\n      prevProps = inst.props;\n      prevState = inst.state;\n      prevContext = inst.context;\n    }\n\n    if (inst.componentWillUpdate) {\n      if (process.env.NODE_ENV !== 'production') {\n        measureLifeCyclePerf(function () {\n          return inst.componentWillUpdate(nextProps, nextState, nextContext);\n        }, this._debugID, 'componentWillUpdate');\n      } else {\n        inst.componentWillUpdate(nextProps, nextState, nextContext);\n      }\n    }\n\n    this._currentElement = nextElement;\n    this._context = unmaskedContext;\n    inst.props = nextProps;\n    inst.state = nextState;\n    inst.context = nextContext;\n\n    this._updateRenderedComponent(transaction, unmaskedContext);\n\n    if (hasComponentDidUpdate) {\n      if (process.env.NODE_ENV !== 'production') {\n        transaction.getReactMountReady().enqueue(function () {\n          measureLifeCyclePerf(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), _this2._debugID, 'componentDidUpdate');\n        });\n      } else {\n        transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), inst);\n      }\n    }\n  },\n\n  /**\n   * Call the component's `render` method and update the DOM accordingly.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   */\n  _updateRenderedComponent: function (transaction, context) {\n    var prevComponentInstance = this._renderedComponent;\n    var prevRenderedElement = prevComponentInstance._currentElement;\n    var nextRenderedElement = this._renderValidatedComponent();\n\n    var debugID = 0;\n    if (process.env.NODE_ENV !== 'production') {\n      debugID = this._debugID;\n    }\n\n    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {\n      ReactReconciler.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));\n    } else {\n      var oldHostNode = ReactReconciler.getHostNode(prevComponentInstance);\n      ReactReconciler.unmountComponent(prevComponentInstance, false);\n\n      var nodeType = ReactNodeTypes.getType(nextRenderedElement);\n      this._renderedNodeType = nodeType;\n      var child = this._instantiateReactComponent(nextRenderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */\n      );\n      this._renderedComponent = child;\n\n      var nextMarkup = ReactReconciler.mountComponent(child, transaction, this._hostParent, this._hostContainerInfo, this._processChildContext(context), debugID);\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (debugID !== 0) {\n          var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];\n          ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);\n        }\n      }\n\n      this._replaceNodeWithMarkup(oldHostNode, nextMarkup, prevComponentInstance);\n    }\n  },\n\n  /**\n   * Overridden in shallow rendering.\n   *\n   * @protected\n   */\n  _replaceNodeWithMarkup: function (oldHostNode, nextMarkup, prevInstance) {\n    ReactComponentEnvironment.replaceNodeWithMarkup(oldHostNode, nextMarkup, prevInstance);\n  },\n\n  /**\n   * @protected\n   */\n  _renderValidatedComponentWithoutOwnerOrContext: function () {\n    var inst = this._instance;\n    var renderedComponent;\n\n    if (process.env.NODE_ENV !== 'production') {\n      renderedComponent = measureLifeCyclePerf(function () {\n        return inst.render();\n      }, this._debugID, 'render');\n    } else {\n      renderedComponent = inst.render();\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      // We allow auto-mocks to proceed as if they're returning null.\n      if (renderedComponent === undefined && inst.render._isMockFunction) {\n        // This is probably bad practice. Consider warning here and\n        // deprecating this convenience.\n        renderedComponent = null;\n      }\n    }\n\n    return renderedComponent;\n  },\n\n  /**\n   * @private\n   */\n  _renderValidatedComponent: function () {\n    var renderedComponent;\n    if (process.env.NODE_ENV !== 'production' || this._compositeType !== CompositeTypes.StatelessFunctional) {\n      ReactCurrentOwner.current = this;\n      try {\n        renderedComponent = this._renderValidatedComponentWithoutOwnerOrContext();\n      } finally {\n        ReactCurrentOwner.current = null;\n      }\n    } else {\n      renderedComponent = this._renderValidatedComponentWithoutOwnerOrContext();\n    }\n    !(\n    // TODO: An `isValidNode` function would probably be more appropriate\n    renderedComponent === null || renderedComponent === false || ReactElement.isValidElement(renderedComponent)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.render(): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', this.getName() || 'ReactCompositeComponent') : _prodInvariant('109', this.getName() || 'ReactCompositeComponent') : void 0;\n\n    return renderedComponent;\n  },\n\n  /**\n   * Lazily allocates the refs object and stores `component` as `ref`.\n   *\n   * @param {string} ref Reference name.\n   * @param {component} component Component to store as `ref`.\n   * @final\n   * @private\n   */\n  attachRef: function (ref, component) {\n    var inst = this.getPublicInstance();\n    !(inst != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Stateless function components cannot have refs.') : _prodInvariant('110') : void 0;\n    var publicComponentInstance = component.getPublicInstance();\n    if (process.env.NODE_ENV !== 'production') {\n      var componentName = component && component.getName ? component.getName() : 'a component';\n      process.env.NODE_ENV !== 'production' ? warning(publicComponentInstance != null || component._compositeType !== CompositeTypes.StatelessFunctional, 'Stateless function components cannot be given refs ' + '(See ref \"%s\" in %s created by %s). ' + 'Attempts to access this ref will fail.', ref, componentName, this.getName()) : void 0;\n    }\n    var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;\n    refs[ref] = publicComponentInstance;\n  },\n\n  /**\n   * Detaches a reference name.\n   *\n   * @param {string} ref Name to dereference.\n   * @final\n   * @private\n   */\n  detachRef: function (ref) {\n    var refs = this.getPublicInstance().refs;\n    delete refs[ref];\n  },\n\n  /**\n   * Get a text description of the component that can be used to identify it\n   * in error messages.\n   * @return {string} The name or null.\n   * @internal\n   */\n  getName: function () {\n    var type = this._currentElement.type;\n    var constructor = this._instance && this._instance.constructor;\n    return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null;\n  },\n\n  /**\n   * Get the publicly accessible representation of this component - i.e. what\n   * is exposed by refs and returned by render. Can be null for stateless\n   * components.\n   *\n   * @return {ReactComponent} the public component instance.\n   * @internal\n   */\n  getPublicInstance: function () {\n    var inst = this._instance;\n    if (this._compositeType === CompositeTypes.StatelessFunctional) {\n      return null;\n    }\n    return inst;\n  },\n\n  // Stub\n  _instantiateReactComponent: null\n\n};\n\nvar ReactCompositeComponent = {\n\n  Mixin: ReactCompositeComponentMixin\n\n};\n\nmodule.exports = ReactCompositeComponent;"]}