{"version":3,"sources":["node_modules/react-highlight/node_modules/highlight.js/lib/languages/delphi.js"],"names":["module","exports","hljs","KEYWORDS","COMMENT_MODES","C_LINE_COMMENT_MODE","COMMENT","relevance","DIRECTIVE","className","variants","begin","end","STRING","contains","CHAR_STRING","CLASS","IDENT_RE","returnBegin","TITLE_MODE","FUNCTION","beginKeywords","keywords","concat","aliases","case_insensitive","illegal","NUMBER_MODE"],"mappings":";;AAAAA,OAAOC,OAAP,GAAiB,UAASC,IAAT,EAAe;AAC9B,MAAIC,WACF,iGACA,6FADA,GAEA,+FAFA,GAGA,+FAHA,GAIA,gGAJA,GAKA,4FALA,GAMA,2FANA,GAOA,oFAPA,GAQA,0FARA,GASA,0FATA,GAUA,sCAXF;AAYA,MAAIC,gBAAgB,CAClBF,KAAKG,mBADa,EAElBH,KAAKI,OAAL,CAAa,IAAb,EAAmB,IAAnB,EAAyB,EAACC,WAAW,CAAZ,EAAzB,CAFkB,EAGlBL,KAAKI,OAAL,CAAa,MAAb,EAAqB,MAArB,EAA6B,EAACC,WAAW,EAAZ,EAA7B,CAHkB,CAApB;AAKA,MAAIC,YAAY;AACdC,eAAW,MADG;AAEdC,cAAU,CACR,EAACC,OAAO,MAAR,EAAgBC,KAAK,IAArB,EADQ,EAER,EAACD,OAAO,QAAR,EAAkBC,KAAK,MAAvB,EAFQ;AAFI,GAAhB;AAOA,MAAIC,SAAS;AACXJ,eAAW,QADA;AAEXE,WAAO,GAFI,EAECC,KAAK,GAFN;AAGXE,cAAU,CAAC,EAACH,OAAO,IAAR,EAAD;AAHC,GAAb;AAKA,MAAII,cAAc;AAChBN,eAAW,QADK,EACKE,OAAO;AADZ,GAAlB;AAGA,MAAIK,QAAQ;AACVL,WAAOT,KAAKe,QAAL,GAAgB,uBADb,EACsCC,aAAa,IADnD;AAEVJ,cAAU,CACRZ,KAAKiB,UADG;AAFA,GAAZ;AAMA,MAAIC,WAAW;AACbX,eAAW,UADE;AAEbY,mBAAe,2CAFF,EAE+CT,KAAK,MAFpD;AAGbU,cAAU,oDAHG;AAIbR,cAAU,CACRZ,KAAKiB,UADG,EAER;AACEV,iBAAW,QADb;AAEEE,aAAO,IAFT,EAEeC,KAAK,IAFpB;AAGEU,gBAAUnB,QAHZ;AAIEW,gBAAU,CAACD,MAAD,EAASE,WAAT,EAAsBP,SAAtB,EAAiCe,MAAjC,CAAwCnB,aAAxC;AAJZ,KAFQ,EAQRI,SARQ,EASRe,MATQ,CASDnB,aATC;AAJG,GAAf;AAeA,SAAO;AACLoB,aAAS,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,QAAtB,EAAgC,YAAhC,EAA8C,SAA9C,EAAyD,KAAzD,EAAgE,KAAhE,CADJ;AAELC,sBAAkB,IAFb;AAGLH,cAAUnB,QAHL;AAILuB,aAAS,0BAJJ;AAKLZ,cAAU,CACRD,MADQ,EACAE,WADA,EAERb,KAAKyB,WAFG,EAGRX,KAHQ,EAIRI,QAJQ,EAKRZ,SALQ,EAMRe,MANQ,CAMDnB,aANC;AALL,GAAP;AAaD,CAnED","file":"delphi.js","sourceRoot":"/Users/liangdong06/work/react-tools","sourcesContent":["module.exports = function(hljs) {\n  var KEYWORDS =\n    'exports register file shl array record property for mod while set ally label uses raise not ' +\n    'stored class safecall var interface or private static exit index inherited to else stdcall ' +\n    'override shr asm far resourcestring finalization packed virtual out and protected library do ' +\n    'xorwrite goto near function end div overload object unit begin string on inline repeat until ' +\n    'destructor write message program with read initialization except default nil if case cdecl in ' +\n    'downto threadvar of try pascal const external constructor type public then implementation ' +\n    'finally published procedure absolute reintroduce operator as is abstract alias assembler ' +\n    'bitpacked break continue cppdecl cvar enumerator experimental platform deprecated ' +\n    'unimplemented dynamic export far16 forward generic helper implements interrupt iochecks ' +\n    'local name nodefault noreturn nostackframe oldfpccall otherwise saveregisters softfloat ' +\n    'specialize strict unaligned varargs ';\n  var COMMENT_MODES = [\n    hljs.C_LINE_COMMENT_MODE,\n    hljs.COMMENT(/\\{/, /\\}/, {relevance: 0}),\n    hljs.COMMENT(/\\(\\*/, /\\*\\)/, {relevance: 10})\n  ];\n  var DIRECTIVE = {\n    className: 'meta',\n    variants: [\n      {begin: /\\{\\$/, end: /\\}/},\n      {begin: /\\(\\*\\$/, end: /\\*\\)/}\n    ]\n  };\n  var STRING = {\n    className: 'string',\n    begin: /'/, end: /'/,\n    contains: [{begin: /''/}]\n  };\n  var CHAR_STRING = {\n    className: 'string', begin: /(#\\d+)+/\n  };\n  var CLASS = {\n    begin: hljs.IDENT_RE + '\\\\s*=\\\\s*class\\\\s*\\\\(', returnBegin: true,\n    contains: [\n      hljs.TITLE_MODE\n    ]\n  };\n  var FUNCTION = {\n    className: 'function',\n    beginKeywords: 'function constructor destructor procedure', end: /[:;]/,\n    keywords: 'function constructor|10 destructor|10 procedure|10',\n    contains: [\n      hljs.TITLE_MODE,\n      {\n        className: 'params',\n        begin: /\\(/, end: /\\)/,\n        keywords: KEYWORDS,\n        contains: [STRING, CHAR_STRING, DIRECTIVE].concat(COMMENT_MODES)\n      },\n      DIRECTIVE\n    ].concat(COMMENT_MODES)\n  };\n  return {\n    aliases: ['dpr', 'dfm', 'pas', 'pascal', 'freepascal', 'lazarus', 'lpr', 'lfm'],\n    case_insensitive: true,\n    keywords: KEYWORDS,\n    illegal: /\"|\\$[G-Zg-z]|\\/\\*|<\\/|\\|/,\n    contains: [\n      STRING, CHAR_STRING,\n      hljs.NUMBER_MODE,\n      CLASS,\n      FUNCTION,\n      DIRECTIVE\n    ].concat(COMMENT_MODES)\n  };\n};"]}