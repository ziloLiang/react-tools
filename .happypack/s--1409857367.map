{"version":3,"sources":["node_modules/highlight.js/lib/languages/asciidoc.js"],"names":["module","exports","hljs","aliases","contains","COMMENT","relevance","className","begin","end","variants","excludeEnd","subLanguage","returnBegin","excludeBegin"],"mappings":"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","file":"asciidoc.js","sourceRoot":"/Users/liangdong06/work/react-tools","sourcesContent":["module.exports = function(hljs) {\n  return {\n    aliases: ['adoc'],\n    contains: [\n      // block comment\n      hljs.COMMENT(\n        '^/{4,}\\\\n',\n        '\\\\n/{4,}$',\n        // can also be done as...\n        //'^/{4,}$',\n        //'^/{4,}$',\n        {\n          relevance: 10\n        }\n      ),\n      // line comment\n      hljs.COMMENT(\n        '^//',\n        '$',\n        {\n          relevance: 0\n        }\n      ),\n      // title\n      {\n        className: 'title',\n        begin: '^\\\\.\\\\w.*$'\n      },\n      // example, admonition & sidebar blocks\n      {\n        begin: '^[=\\\\*]{4,}\\\\n',\n        end: '\\\\n^[=\\\\*]{4,}$',\n        relevance: 10\n      },\n      // headings\n      {\n        className: 'section',\n        relevance: 10,\n        variants: [\n          {begin: '^(={1,5}) .+?( \\\\1)?$'},\n          {begin: '^[^\\\\[\\\\]\\\\n]+?\\\\n[=\\\\-~\\\\^\\\\+]{2,}$'},\n        ]\n      },\n      // document attributes\n      {\n        className: 'meta',\n        begin: '^:.+?:',\n        end: '\\\\s',\n        excludeEnd: true,\n        relevance: 10\n      },\n      // block attributes\n      {\n        className: 'meta',\n        begin: '^\\\\[.+?\\\\]$',\n        relevance: 0\n      },\n      // quoteblocks\n      {\n        className: 'quote',\n        begin: '^_{4,}\\\\n',\n        end: '\\\\n_{4,}$',\n        relevance: 10\n      },\n      // listing and literal blocks\n      {\n        className: 'code',\n        begin: '^[\\\\-\\\\.]{4,}\\\\n',\n        end: '\\\\n[\\\\-\\\\.]{4,}$',\n        relevance: 10\n      },\n      // passthrough blocks\n      {\n        begin: '^\\\\+{4,}\\\\n',\n        end: '\\\\n\\\\+{4,}$',\n        contains: [\n          {\n            begin: '<', end: '>',\n            subLanguage: 'xml',\n            relevance: 0\n          }\n        ],\n        relevance: 10\n      },\n      // lists (can only capture indicators)\n      {\n        className: 'bullet',\n        begin: '^(\\\\*+|\\\\-+|\\\\.+|[^\\\\n]+?::)\\\\s+'\n      },\n      // admonition\n      {\n        className: 'symbol',\n        begin: '^(NOTE|TIP|IMPORTANT|WARNING|CAUTION):\\\\s+',\n        relevance: 10\n      },\n      // inline strong\n      {\n        className: 'strong',\n        // must not follow a word character or be followed by an asterisk or space\n        begin: '\\\\B\\\\*(?![\\\\*\\\\s])',\n        end: '(\\\\n{2}|\\\\*)',\n        // allow escaped asterisk followed by word char\n        contains: [\n          {\n            begin: '\\\\\\\\*\\\\w',\n            relevance: 0\n          }\n        ]\n      },\n      // inline emphasis\n      {\n        className: 'emphasis',\n        // must not follow a word character or be followed by a single quote or space\n        begin: '\\\\B\\'(?![\\'\\\\s])',\n        end: '(\\\\n{2}|\\')',\n        // allow escaped single quote followed by word char\n        contains: [\n          {\n            begin: '\\\\\\\\\\'\\\\w',\n            relevance: 0\n          }\n        ],\n        relevance: 0\n      },\n      // inline emphasis (alt)\n      {\n        className: 'emphasis',\n        // must not follow a word character or be followed by an underline or space\n        begin: '_(?![_\\\\s])',\n        end: '(\\\\n{2}|_)',\n        relevance: 0\n      },\n      // inline smart quotes\n      {\n        className: 'string',\n        variants: [\n          {begin: \"``.+?''\"},\n          {begin: \"`.+?'\"}\n        ]\n      },\n      // inline code snippets (TODO should get same treatment as strong and emphasis)\n      {\n        className: 'code',\n        begin: '(`.+?`|\\\\+.+?\\\\+)',\n        relevance: 0\n      },\n      // indented literal block\n      {\n        className: 'code',\n        begin: '^[ \\\\t]',\n        end: '$',\n        relevance: 0\n      },\n      // horizontal rules\n      {\n        begin: '^\\'{3,}[ \\\\t]*$',\n        relevance: 10\n      },\n      // images and links\n      {\n        begin: '(link:)?(http|https|ftp|file|irc|image:?):\\\\S+\\\\[.*?\\\\]',\n        returnBegin: true,\n        contains: [\n          {\n            begin: '(link|image:?):',\n            relevance: 0\n          },\n          {\n            className: 'link',\n            begin: '\\\\w',\n            end: '[^\\\\[]+',\n            relevance: 0\n          },\n          {\n            className: 'string',\n            begin: '\\\\[',\n            end: '\\\\]',\n            excludeBegin: true,\n            excludeEnd: true,\n            relevance: 0\n          }\n        ],\n        relevance: 10\n      }\n    ]\n  };\n};"]}