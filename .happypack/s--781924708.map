{"version":3,"sources":["node_modules/babel-polyfill/node_modules/core-js/modules/_array-copy-within.js"],"names":["toObject","require","toIndex","toLength","module","exports","copyWithin","target","start","O","len","length","to","from","end","arguments","undefined","count","Math","min","inc"],"mappings":"AAAA;AACA;;AACA,IAAIA,WAAWC,QAAQ,cAAR,CAAf;AAAA,IACIC,UAAWD,QAAQ,aAAR,CADf;AAAA,IAEIE,WAAWF,QAAQ,cAAR,CAFf;;AAIAG,OAAOC,OAAP,GAAiB,GAAGC,UAAH,IAAiB,SAASA,UAAT,CAAoBC,MAApB,CAA0B,OAA1B,EAAmCC,KAAnC,CAAwC,sBAAxC,EAA+D;AAC/F,MAAIC,IAAQT,SAAS,IAAT,CAAZ;AAAA,MACIU,MAAQP,SAASM,EAAEE,MAAX,CADZ;AAAA,MAEIC,KAAQV,QAAQK,MAAR,EAAgBG,GAAhB,CAFZ;AAAA,MAGIG,OAAQX,QAAQM,KAAR,EAAeE,GAAf,CAHZ;AAAA,MAIII,MAAQC,UAAUJ,MAAV,GAAmB,CAAnB,GAAuBI,UAAU,CAAV,CAAvB,GAAsCC,SAJlD;AAAA,MAKIC,QAAQC,KAAKC,GAAL,CAAS,CAACL,QAAQE,SAAR,GAAoBN,GAApB,GAA0BR,QAAQY,GAAR,EAAaJ,GAAb,CAA3B,IAAgDG,IAAzD,EAA+DH,MAAME,EAArE,CALZ;AAAA,MAMIQ,MAAQ,CANZ;AAOA,MAAGP,OAAOD,EAAP,IAAaA,KAAKC,OAAOI,KAA5B,EAAkC;AAChCG,UAAO,CAAC,CAAR;AACAP,YAAQI,QAAQ,CAAhB;AACAL,UAAQK,QAAQ,CAAhB;AACD;AACD,SAAMA,UAAU,CAAhB,EAAkB;AAChB,QAAGJ,QAAQJ,CAAX,EAAaA,EAAEG,EAAF,IAAQH,EAAEI,IAAF,CAAR,CAAb,KACK,OAAOJ,EAAEG,EAAF,CAAP;AACLA,UAAQQ,GAAR;AACAP,YAAQO,GAAR;AACD,GAAC,OAAOX,CAAP;AACH,CAnBD","file":"_array-copy-within.js","sourceRoot":"/Users/liangdong06/work/react-tools","sourcesContent":["// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)\n'use strict';\nvar toObject = require('./_to-object')\n  , toIndex  = require('./_to-index')\n  , toLength = require('./_to-length');\n\nmodule.exports = [].copyWithin || function copyWithin(target/*= 0*/, start/*= 0, end = @length*/){\n  var O     = toObject(this)\n    , len   = toLength(O.length)\n    , to    = toIndex(target, len)\n    , from  = toIndex(start, len)\n    , end   = arguments.length > 2 ? arguments[2] : undefined\n    , count = Math.min((end === undefined ? len : toIndex(end, len)) - from, len - to)\n    , inc   = 1;\n  if(from < to && to < from + count){\n    inc  = -1;\n    from += count - 1;\n    to   += count - 1;\n  }\n  while(count-- > 0){\n    if(from in O)O[to] = O[from];\n    else delete O[to];\n    to   += inc;\n    from += inc;\n  } return O;\n};"]}