{"version":3,"sources":["node_modules/react/lib/DOMChildrenOperations.js"],"names":["DOMLazyTree","require","Danger","ReactMultiChildUpdateTypes","ReactDOMComponentTree","ReactInstrumentation","createMicrosoftUnsafeLocalFunction","setInnerHTML","setTextContent","getNodeAfter","parentNode","node","Array","isArray","nextSibling","firstChild","insertChildAt","childNode","referenceNode","insertBefore","insertLazyTreeChildAt","childTree","insertTreeBefore","moveChild","moveDelimitedText","removeChild","closingComment","removeDelimitedText","openingComment","nextNode","startNode","replaceDelimitedText","stringText","nodeAfterComment","document","createTextNode","process","env","NODE_ENV","debugTool","onHostOperation","getInstanceFromNode","_debugID","dangerouslyReplaceNodeWithMarkup","oldChild","markup","prevInstance","toString","nextInstance","DOMChildrenOperations","processUpdates","updates","parentNodeDebugID","k","length","update","type","INSERT_MARKUP","content","afterNode","toIndex","MOVE_EXISTING","fromNode","fromIndex","SET_MARKUP","TEXT_CONTENT","REMOVE_NODE","module","exports"],"mappings":"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","file":"DOMChildrenOperations.js","sourceRoot":"/Users/liangdong06/work/react-tools","sourcesContent":["/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DOMChildrenOperations\n */\n\n'use strict';\n\nvar DOMLazyTree = require('./DOMLazyTree');\nvar Danger = require('./Danger');\nvar ReactMultiChildUpdateTypes = require('./ReactMultiChildUpdateTypes');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactInstrumentation = require('./ReactInstrumentation');\n\nvar createMicrosoftUnsafeLocalFunction = require('./createMicrosoftUnsafeLocalFunction');\nvar setInnerHTML = require('./setInnerHTML');\nvar setTextContent = require('./setTextContent');\n\nfunction getNodeAfter(parentNode, node) {\n  // Special case for text components, which return [open, close] comments\n  // from getHostNode.\n  if (Array.isArray(node)) {\n    node = node[1];\n  }\n  return node ? node.nextSibling : parentNode.firstChild;\n}\n\n/**\n * Inserts `childNode` as a child of `parentNode` at the `index`.\n *\n * @param {DOMElement} parentNode Parent node in which to insert.\n * @param {DOMElement} childNode Child node to insert.\n * @param {number} index Index at which to insert the child.\n * @internal\n */\nvar insertChildAt = createMicrosoftUnsafeLocalFunction(function (parentNode, childNode, referenceNode) {\n  // We rely exclusively on `insertBefore(node, null)` instead of also using\n  // `appendChild(node)`. (Using `undefined` is not allowed by all browsers so\n  // we are careful to use `null`.)\n  parentNode.insertBefore(childNode, referenceNode);\n});\n\nfunction insertLazyTreeChildAt(parentNode, childTree, referenceNode) {\n  DOMLazyTree.insertTreeBefore(parentNode, childTree, referenceNode);\n}\n\nfunction moveChild(parentNode, childNode, referenceNode) {\n  if (Array.isArray(childNode)) {\n    moveDelimitedText(parentNode, childNode[0], childNode[1], referenceNode);\n  } else {\n    insertChildAt(parentNode, childNode, referenceNode);\n  }\n}\n\nfunction removeChild(parentNode, childNode) {\n  if (Array.isArray(childNode)) {\n    var closingComment = childNode[1];\n    childNode = childNode[0];\n    removeDelimitedText(parentNode, childNode, closingComment);\n    parentNode.removeChild(closingComment);\n  }\n  parentNode.removeChild(childNode);\n}\n\nfunction moveDelimitedText(parentNode, openingComment, closingComment, referenceNode) {\n  var node = openingComment;\n  while (true) {\n    var nextNode = node.nextSibling;\n    insertChildAt(parentNode, node, referenceNode);\n    if (node === closingComment) {\n      break;\n    }\n    node = nextNode;\n  }\n}\n\nfunction removeDelimitedText(parentNode, startNode, closingComment) {\n  while (true) {\n    var node = startNode.nextSibling;\n    if (node === closingComment) {\n      // The closing comment is removed by ReactMultiChild.\n      break;\n    } else {\n      parentNode.removeChild(node);\n    }\n  }\n}\n\nfunction replaceDelimitedText(openingComment, closingComment, stringText) {\n  var parentNode = openingComment.parentNode;\n  var nodeAfterComment = openingComment.nextSibling;\n  if (nodeAfterComment === closingComment) {\n    // There are no text nodes between the opening and closing comments; insert\n    // a new one if stringText isn't empty.\n    if (stringText) {\n      insertChildAt(parentNode, document.createTextNode(stringText), nodeAfterComment);\n    }\n  } else {\n    if (stringText) {\n      // Set the text content of the first node after the opening comment, and\n      // remove all following nodes up until the closing comment.\n      setTextContent(nodeAfterComment, stringText);\n      removeDelimitedText(parentNode, nodeAfterComment, closingComment);\n    } else {\n      removeDelimitedText(parentNode, openingComment, closingComment);\n    }\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(openingComment)._debugID, 'replace text', stringText);\n  }\n}\n\nvar dangerouslyReplaceNodeWithMarkup = Danger.dangerouslyReplaceNodeWithMarkup;\nif (process.env.NODE_ENV !== 'production') {\n  dangerouslyReplaceNodeWithMarkup = function (oldChild, markup, prevInstance) {\n    Danger.dangerouslyReplaceNodeWithMarkup(oldChild, markup);\n    if (prevInstance._debugID !== 0) {\n      ReactInstrumentation.debugTool.onHostOperation(prevInstance._debugID, 'replace with', markup.toString());\n    } else {\n      var nextInstance = ReactDOMComponentTree.getInstanceFromNode(markup.node);\n      if (nextInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onHostOperation(nextInstance._debugID, 'mount', markup.toString());\n      }\n    }\n  };\n}\n\n/**\n * Operations for updating with DOM children.\n */\nvar DOMChildrenOperations = {\n\n  dangerouslyReplaceNodeWithMarkup: dangerouslyReplaceNodeWithMarkup,\n\n  replaceDelimitedText: replaceDelimitedText,\n\n  /**\n   * Updates a component's children by processing a series of updates. The\n   * update configurations are each expected to have a `parentNode` property.\n   *\n   * @param {array<object>} updates List of update configurations.\n   * @internal\n   */\n  processUpdates: function (parentNode, updates) {\n    if (process.env.NODE_ENV !== 'production') {\n      var parentNodeDebugID = ReactDOMComponentTree.getInstanceFromNode(parentNode)._debugID;\n    }\n\n    for (var k = 0; k < updates.length; k++) {\n      var update = updates[k];\n      switch (update.type) {\n        case ReactMultiChildUpdateTypes.INSERT_MARKUP:\n          insertLazyTreeChildAt(parentNode, update.content, getNodeAfter(parentNode, update.afterNode));\n          if (process.env.NODE_ENV !== 'production') {\n            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'insert child', { toIndex: update.toIndex, content: update.content.toString() });\n          }\n          break;\n        case ReactMultiChildUpdateTypes.MOVE_EXISTING:\n          moveChild(parentNode, update.fromNode, getNodeAfter(parentNode, update.afterNode));\n          if (process.env.NODE_ENV !== 'production') {\n            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'move child', { fromIndex: update.fromIndex, toIndex: update.toIndex });\n          }\n          break;\n        case ReactMultiChildUpdateTypes.SET_MARKUP:\n          setInnerHTML(parentNode, update.content);\n          if (process.env.NODE_ENV !== 'production') {\n            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'replace children', update.content.toString());\n          }\n          break;\n        case ReactMultiChildUpdateTypes.TEXT_CONTENT:\n          setTextContent(parentNode, update.content);\n          if (process.env.NODE_ENV !== 'production') {\n            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'replace text', update.content.toString());\n          }\n          break;\n        case ReactMultiChildUpdateTypes.REMOVE_NODE:\n          removeChild(parentNode, update.fromNode);\n          if (process.env.NODE_ENV !== 'production') {\n            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'remove child', { fromIndex: update.fromIndex });\n          }\n          break;\n      }\n    }\n  }\n\n};\n\nmodule.exports = DOMChildrenOperations;"]}