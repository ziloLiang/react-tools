{"version":3,"sources":["node_modules/highlight.js/lib/languages/haxe.js"],"names":["module","exports","hljs","IDENT_RE","IDENT_FUNC_RETURN_TYPE_RE","HAXE_BASIC_TYPES","aliases","keywords","keyword","built_in","literal","contains","className","begin","end","BACKSLASH_ESCAPE","QUOTE_STRING_MODE","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","C_NUMBER_MODE","excludeBegin","excludeEnd","relevance","beginKeywords","TITLE_MODE","illegal"],"mappings":"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","file":"haxe.js","sourceRoot":"/Users/liangdong06/work/react-tools","sourcesContent":["module.exports = function(hljs) {\n  var IDENT_RE = '[a-zA-Z_$][a-zA-Z0-9_$]*';\n  var IDENT_FUNC_RETURN_TYPE_RE = '([*]|[a-zA-Z_$][a-zA-Z0-9_$]*)';\n\n  var HAXE_BASIC_TYPES = 'Int Float String Bool Dynamic Void Array ';\n\n  return {\n    aliases: ['hx'],\n    keywords: {\n      keyword: 'break callback case cast catch continue default do dynamic else enum extern ' +\n               'for function here if import in inline never new override package private get set ' +\n               'public return static super switch this throw trace try typedef untyped using var while ' +\n               HAXE_BASIC_TYPES,\n      built_in:\n        'trace this',\n      literal:\n        'true false null _'\n    },\n    contains: [\n      { className: 'string', // interpolate-able strings\n        begin: '\\'', end: '\\'',\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          { className: 'subst', // interpolation\n            begin: '\\\\$\\\\{', end: '\\\\}'\n          },\n          { className: 'subst', // interpolation\n            begin: '\\\\$', end: '\\\\W}'\n          }\n        ]\n      },\n      hljs.QUOTE_STRING_MODE,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.C_NUMBER_MODE,\n      { className: 'meta', // compiler meta\n        begin: '@:', end: '$'\n      },\n      { className: 'meta', // compiler conditionals\n        begin: '#', end: '$',\n        keywords: {'meta-keyword': 'if else elseif end error'}\n      },\n      { className: 'type', // function types\n        begin: ':[ \\t]*', end: '[^A-Za-z0-9_ \\t\\\\->]',\n        excludeBegin: true, excludeEnd: true,\n        relevance: 0\n      },\n      { className: 'type', // types\n        begin: ':[ \\t]*', end: '\\\\W',\n        excludeBegin: true, excludeEnd: true\n      },\n      { className: 'type', // instantiation\n        begin: 'new *', end: '\\\\W',\n        excludeBegin: true, excludeEnd: true\n      },\n      { className: 'class', // enums\n        beginKeywords: 'enum', end: '\\\\{',\n        contains: [\n          hljs.TITLE_MODE\n        ]\n      },\n      { className: 'class', // abstracts\n        beginKeywords: 'abstract', end: '[\\\\{$]',\n        contains: [\n          { className: 'type',\n            begin: '\\\\(', end: '\\\\)',\n            excludeBegin: true, excludeEnd: true\n          },\n          { className: 'type',\n            begin: 'from +', end: '\\\\W',\n            excludeBegin: true, excludeEnd: true\n          },\n          { className: 'type',\n            begin: 'to +', end: '\\\\W',\n            excludeBegin: true, excludeEnd: true\n          },\n          hljs.TITLE_MODE\n        ],\n        keywords: {\n          keyword: 'abstract from to'\n        }\n      },\n      { className: 'class', // classes\n        begin: '\\\\b(class|interface) +', end: '[\\\\{$]',  excludeEnd: true,\n        keywords: 'class interface',\n        contains: [\n          { className: 'keyword',\n            begin: '\\\\b(extends|implements) +',\n            keywords: 'extends implements',\n            contains: [\n              {\n                className: 'type',\n                begin: hljs.IDENT_RE,\n                relevance: 0\n              }\n            ]\n          },\n          hljs.TITLE_MODE\n        ]\n      },\n      { className: 'function',\n        beginKeywords: 'function', end: '\\\\(', excludeEnd: true,\n        illegal: '\\\\S',\n        contains: [\n          hljs.TITLE_MODE\n        ]\n      }\n    ],\n    illegal: /<\\//\n  };\n};"]}