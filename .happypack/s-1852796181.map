{"version":3,"sources":["node_modules/react-highlight/node_modules/highlight.js/lib/languages/smalltalk.js"],"names":["module","exports","hljs","VAR_IDENT_RE","CHAR","className","begin","SYMBOL","UNDERSCORE_IDENT_RE","aliases","keywords","contains","COMMENT","APOS_STRING_MODE","relevance","C_NUMBER_MODE","returnBegin","end","illegal"],"mappings":";;AAAAA,OAAOC,OAAP,GAAiB,UAASC,IAAT,EAAe;AAC9B,MAAIC,eAAe,oBAAnB;AACA,MAAIC,OAAO;AACTC,eAAW,QADF;AAETC,WAAO;AAFE,GAAX;AAIA,MAAIC,SAAS;AACXF,eAAW,QADA;AAEXC,WAAO,MAAMJ,KAAKM;AAFP,GAAb;AAIA,SAAO;AACLC,aAAS,CAAC,IAAD,CADJ;AAELC,cAAU,uCAFL,EAE8C;AACnDC,cAAU,CACRT,KAAKU,OAAL,CAAa,GAAb,EAAkB,GAAlB,CADQ,EAERV,KAAKW,gBAFG,EAGR;AACER,iBAAW,MADb;AAEEC,aAAO,uBAFT;AAGEQ,iBAAW;AAHb,KAHQ,EAQR;AACER,aAAOH,eAAe,GADxB;AAEEW,iBAAW;AAFb,KARQ,EAYRZ,KAAKa,aAZG,EAaRR,MAbQ,EAcRH,IAdQ,EAeR;AACE;AACA;AACA;AACAE,aAAO,YAAYH,YAAZ,GAA2B,OAA3B,GAAqCA,YAArC,GAAoD,WAJ7D;AAKEa,mBAAa,IALf,EAKqBC,KAAK,IAL1B;AAMEC,eAAS,IANX;AAOEP,gBAAU,CAAC,EAACL,OAAO,eAAeH,YAAvB,EAAD;AAPZ,KAfQ,EAwBR;AACEG,aAAO,QADT,EACmBW,KAAK,KADxB;AAEEN,gBAAU,CACRT,KAAKW,gBADG,EAERT,IAFQ,EAGRF,KAAKa,aAHG,EAIRR,MAJQ;AAFZ,KAxBQ;AAHL,GAAP;AAsCD,CAhDD","file":"smalltalk.js","sourceRoot":"/Users/liangdong06/work/react-tools","sourcesContent":["module.exports = function(hljs) {\n  var VAR_IDENT_RE = '[a-z][a-zA-Z0-9_]*';\n  var CHAR = {\n    className: 'string',\n    begin: '\\\\$.{1}'\n  };\n  var SYMBOL = {\n    className: 'symbol',\n    begin: '#' + hljs.UNDERSCORE_IDENT_RE\n  };\n  return {\n    aliases: ['st'],\n    keywords: 'self super nil true false thisContext', // only 6\n    contains: [\n      hljs.COMMENT('\"', '\"'),\n      hljs.APOS_STRING_MODE,\n      {\n        className: 'type',\n        begin: '\\\\b[A-Z][A-Za-z0-9_]*',\n        relevance: 0\n      },\n      {\n        begin: VAR_IDENT_RE + ':',\n        relevance: 0\n      },\n      hljs.C_NUMBER_MODE,\n      SYMBOL,\n      CHAR,\n      {\n        // This looks more complicated than needed to avoid combinatorial\n        // explosion under V8. It effectively means `| var1 var2 ... |` with\n        // whitespace adjacent to `|` being optional.\n        begin: '\\\\|[ ]*' + VAR_IDENT_RE + '([ ]+' + VAR_IDENT_RE + ')*[ ]*\\\\|',\n        returnBegin: true, end: /\\|/,\n        illegal: /\\S/,\n        contains: [{begin: '(\\\\|[ ]*)?' + VAR_IDENT_RE}]\n      },\n      {\n        begin: '\\\\#\\\\(', end: '\\\\)',\n        contains: [\n          hljs.APOS_STRING_MODE,\n          CHAR,\n          hljs.C_NUMBER_MODE,\n          SYMBOL\n        ]\n      }\n    ]\n  };\n};"]}