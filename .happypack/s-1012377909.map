{"version":3,"sources":["node_modules/remarkable/lib/rules_inline/newline.js"],"names":["module","exports","newline","state","silent","pmax","max","pos","src","charCodeAt","pending","length","posMax","i","substring","push","type","level","slice"],"mappings":"AAAA;;AAEA;;AAEAA,OAAOC,OAAP,GAAiB,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC/C,MAAIC,IAAJ;AAAA,MAAUC,GAAV;AAAA,MAAeC,MAAMJ,MAAMI,GAA3B;;AAEA,MAAIJ,MAAMK,GAAN,CAAUC,UAAV,CAAqBF,GAArB,MAA8B,IAAlC,CAAsC,QAAtC,EAAgD;AAAE,aAAO,KAAP;AAAe;;AAEjEF,SAAOF,MAAMO,OAAN,CAAcC,MAAd,GAAuB,CAA9B;AACAL,QAAMH,MAAMS,MAAZ;;AAEA;AACA;AACA;AACA;AACA,MAAI,CAACR,MAAL,EAAa;AACX,QAAIC,QAAQ,CAAR,IAAaF,MAAMO,OAAN,CAAcD,UAAd,CAAyBJ,IAAzB,MAAmC,IAApD,EAA0D;AACxD,UAAIA,QAAQ,CAAR,IAAaF,MAAMO,OAAN,CAAcD,UAAd,CAAyBJ,OAAO,CAAhC,MAAuC,IAAxD,EAA8D;AAC5D;AACA,aAAK,IAAIQ,IAAIR,OAAO,CAApB,EAAuBQ,KAAK,CAA5B,EAA+BA,GAA/B,EAAoC;AAClC,cAAIV,MAAMO,OAAN,CAAcD,UAAd,CAAyBI,CAAzB,MAAgC,IAApC,EAA0C;AACxCV,kBAAMO,OAAN,GAAgBP,MAAMO,OAAN,CAAcI,SAAd,CAAwB,CAAxB,EAA2BD,IAAI,CAA/B,CAAhB;AACA;AACD;AACF;AACDV,cAAMY,IAAN,CAAW;AACTC,gBAAM,WADG;AAETC,iBAAOd,MAAMc;AAFJ,SAAX;AAID,OAZD,MAYO;AACLd,cAAMO,OAAN,GAAgBP,MAAMO,OAAN,CAAcQ,KAAd,CAAoB,CAApB,EAAuB,CAAC,CAAxB,CAAhB;AACAf,cAAMY,IAAN,CAAW;AACTC,gBAAM,WADG;AAETC,iBAAOd,MAAMc;AAFJ,SAAX;AAID;AAEF,KArBD,MAqBO;AACLd,YAAMY,IAAN,CAAW;AACTC,cAAM,WADG;AAETC,eAAOd,MAAMc;AAFJ,OAAX;AAID;AACF;;AAEDV;;AAEA;AACA,SAAOA,MAAMD,GAAN,IAAaH,MAAMK,GAAN,CAAUC,UAAV,CAAqBF,GAArB,MAA8B,IAAlD,EAAwD;AAAEA;AAAQ;;AAElEJ,QAAMI,GAAN,GAAYA,GAAZ;AACA,SAAO,IAAP;AACD,CAjDD","file":"newline.js","sourceRoot":"/Users/liangdong06/work/react-tools","sourcesContent":["// Proceess '\\n'\n\n'use strict';\n\nmodule.exports = function newline(state, silent) {\n  var pmax, max, pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x0A/* \\n */) { return false; }\n\n  pmax = state.pending.length - 1;\n  max = state.posMax;\n\n  // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        // Strip out all trailing spaces on this line.\n        for (var i = pmax - 2; i >= 0; i--) {\n          if (state.pending.charCodeAt(i) !== 0x20) {\n            state.pending = state.pending.substring(0, i + 1);\n            break;\n          }\n        }\n        state.push({\n          type: 'hardbreak',\n          level: state.level\n        });\n      } else {\n        state.pending = state.pending.slice(0, -1);\n        state.push({\n          type: 'softbreak',\n          level: state.level\n        });\n      }\n\n    } else {\n      state.push({\n        type: 'softbreak',\n        level: state.level\n      });\n    }\n  }\n\n  pos++;\n\n  // skip heading spaces for next line\n  while (pos < max && state.src.charCodeAt(pos) === 0x20) { pos++; }\n\n  state.pos = pos;\n  return true;\n};\n"]}