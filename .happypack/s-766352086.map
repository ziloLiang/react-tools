{"version":3,"sources":["node_modules/react-dom/node_modules/fbjs/lib/EventListener.js"],"names":["emptyFunction","require","EventListener","listen","target","eventType","callback","addEventListener","remove","removeEventListener","attachEvent","detachEvent","capture","process","env","NODE_ENV","console","error","registerDefault","module","exports"],"mappings":"AAAA;;AAEA;;;;;;;;;;;;;;;;;;AAkBA,IAAIA,gBAAgBC,QAAQ,iBAAR,CAApB;;AAEA;;;;AAIA,IAAIC,gBAAgB;AAClB;;;;;;;;AAQAC,UAAQ,SAASA,MAAT,CAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,QAAnC,EAA6C;AACnD,QAAIF,OAAOG,gBAAX,EAA6B;AAC3BH,aAAOG,gBAAP,CAAwBF,SAAxB,EAAmCC,QAAnC,EAA6C,KAA7C;AACA,aAAO;AACLE,gBAAQ,SAASA,MAAT,GAAkB;AACxBJ,iBAAOK,mBAAP,CAA2BJ,SAA3B,EAAsCC,QAAtC,EAAgD,KAAhD;AACD;AAHI,OAAP;AAKD,KAPD,MAOO,IAAIF,OAAOM,WAAX,EAAwB;AAC7BN,aAAOM,WAAP,CAAmB,OAAOL,SAA1B,EAAqCC,QAArC;AACA,aAAO;AACLE,gBAAQ,SAASA,MAAT,GAAkB;AACxBJ,iBAAOO,WAAP,CAAmB,OAAON,SAA1B,EAAqCC,QAArC;AACD;AAHI,OAAP;AAKD;AACF,GAzBiB;;AA2BlB;;;;;;;;AAQAM,WAAS,SAASA,OAAT,CAAiBR,MAAjB,EAAyBC,SAAzB,EAAoCC,QAApC,EAA8C;AACrD,QAAIF,OAAOG,gBAAX,EAA6B;AAC3BH,aAAOG,gBAAP,CAAwBF,SAAxB,EAAmCC,QAAnC,EAA6C,IAA7C;AACA,aAAO;AACLE,gBAAQ,SAASA,MAAT,GAAkB;AACxBJ,iBAAOK,mBAAP,CAA2BJ,SAA3B,EAAsCC,QAAtC,EAAgD,IAAhD;AACD;AAHI,OAAP;AAKD,KAPD,MAOO;AACL,UAAIO,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCC,gBAAQC,KAAR,CAAc,iEAAiE,oEAAjE,GAAwI,+BAAtJ;AACD;AACD,aAAO;AACLT,gBAAQR;AADH,OAAP;AAGD;AACF,GAnDiB;;AAqDlBkB,mBAAiB,SAASA,eAAT,GAA2B,CAAE;AArD5B,CAApB;;AAwDAC,OAAOC,OAAP,GAAiBlB,aAAjB","file":"EventListener.js","sourceRoot":"/Users/liangdong06/work/react-tools","sourcesContent":["'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @typechecks\n */\n\nvar emptyFunction = require('./emptyFunction');\n\n/**\n * Upstream version of event listener. Does not take into account specific\n * nature of platform.\n */\nvar EventListener = {\n  /**\n   * Listen to DOM events during the bubble phase.\n   *\n   * @param {DOMEventTarget} target DOM element to register listener on.\n   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.\n   * @param {function} callback Callback function.\n   * @return {object} Object with a `remove` method.\n   */\n  listen: function listen(target, eventType, callback) {\n    if (target.addEventListener) {\n      target.addEventListener(eventType, callback, false);\n      return {\n        remove: function remove() {\n          target.removeEventListener(eventType, callback, false);\n        }\n      };\n    } else if (target.attachEvent) {\n      target.attachEvent('on' + eventType, callback);\n      return {\n        remove: function remove() {\n          target.detachEvent('on' + eventType, callback);\n        }\n      };\n    }\n  },\n\n  /**\n   * Listen to DOM events during the capture phase.\n   *\n   * @param {DOMEventTarget} target DOM element to register listener on.\n   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.\n   * @param {function} callback Callback function.\n   * @return {object} Object with a `remove` method.\n   */\n  capture: function capture(target, eventType, callback) {\n    if (target.addEventListener) {\n      target.addEventListener(eventType, callback, true);\n      return {\n        remove: function remove() {\n          target.removeEventListener(eventType, callback, true);\n        }\n      };\n    } else {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');\n      }\n      return {\n        remove: emptyFunction\n      };\n    }\n  },\n\n  registerDefault: function registerDefault() {}\n};\n\nmodule.exports = EventListener;"]}