{"version":3,"sources":["node_modules/react/lib/CallbackQueue.js"],"names":["_prodInvariant","require","_assign","PooledClass","invariant","CallbackQueue","_callbacks","_contexts","prototype","enqueue","callback","context","push","notifyAll","callbacks","contexts","length","process","env","NODE_ENV","i","call","checkpoint","rollback","len","reset","destructor","addPoolingTo","module","exports"],"mappings":"AAAA;;;;;;;;;;;AAWA;;AAEA,IAAIA,iBAAiBC,QAAQ,sBAAR,CAArB;AAAA,IACIC,UAAUD,QAAQ,eAAR,CADd;;AAGA,IAAIE,cAAcF,QAAQ,eAAR,CAAlB;;AAEA,IAAIG,YAAYH,QAAQ,oBAAR,CAAhB;;AAEA;;;;;;;;;;;AAWA,SAASI,aAAT,GAAyB;AACvB,OAAKC,UAAL,GAAkB,IAAlB;AACA,OAAKC,SAAL,GAAiB,IAAjB;AACD;;AAEDL,QAAQG,cAAcG,SAAtB,EAAiC;;AAE/B;;;;;;;AAOAC,WAAS,iBAAUC,QAAV,EAAoBC,OAApB,EAA6B;AACpC,SAAKL,UAAL,GAAkB,KAAKA,UAAL,IAAmB,EAArC;AACA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,IAAkB,EAAnC;AACA,SAAKD,UAAL,CAAgBM,IAAhB,CAAqBF,QAArB;AACA,SAAKH,SAAL,CAAeK,IAAf,CAAoBD,OAApB;AACD,GAd8B;;AAgB/B;;;;;;AAMAE,aAAW,qBAAY;AACrB,QAAIC,YAAY,KAAKR,UAArB;AACA,QAAIS,WAAW,KAAKR,SAApB;AACA,QAAIO,SAAJ,EAAe;AACb,QAAEA,UAAUE,MAAV,KAAqBD,SAASC,MAAhC,IAA0CC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCf,UAAU,KAAV,EAAiB,+CAAjB,CAAxC,GAA4GJ,eAAe,IAAf,CAAtJ,GAA6K,KAAK,CAAlL;AACA,WAAKM,UAAL,GAAkB,IAAlB;AACA,WAAKC,SAAL,GAAiB,IAAjB;AACA,WAAK,IAAIa,IAAI,CAAb,EAAgBA,IAAIN,UAAUE,MAA9B,EAAsCI,GAAtC,EAA2C;AACzCN,kBAAUM,CAAV,EAAaC,IAAb,CAAkBN,SAASK,CAAT,CAAlB;AACD;AACDN,gBAAUE,MAAV,GAAmB,CAAnB;AACAD,eAASC,MAAT,GAAkB,CAAlB;AACD;AACF,GAnC8B;;AAqC/BM,cAAY,sBAAY;AACtB,WAAO,KAAKhB,UAAL,GAAkB,KAAKA,UAAL,CAAgBU,MAAlC,GAA2C,CAAlD;AACD,GAvC8B;;AAyC/BO,YAAU,kBAAUC,GAAV,EAAe;AACvB,QAAI,KAAKlB,UAAT,EAAqB;AACnB,WAAKA,UAAL,CAAgBU,MAAhB,GAAyBQ,GAAzB;AACA,WAAKjB,SAAL,CAAeS,MAAf,GAAwBQ,GAAxB;AACD;AACF,GA9C8B;;AAgD/B;;;;;AAKAC,SAAO,iBAAY;AACjB,SAAKnB,UAAL,GAAkB,IAAlB;AACA,SAAKC,SAAL,GAAiB,IAAjB;AACD,GAxD8B;;AA0D/B;;;AAGAmB,cAAY,sBAAY;AACtB,SAAKD,KAAL;AACD;;AA/D8B,CAAjC;;AAmEAtB,YAAYwB,YAAZ,CAAyBtB,aAAzB;;AAEAuB,OAAOC,OAAP,GAAiBxB,aAAjB","file":"CallbackQueue.js","sourceRoot":"/Users/liangdong06/work/react-tools","sourcesContent":["/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule CallbackQueue\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant'),\n    _assign = require('object-assign');\n\nvar PooledClass = require('./PooledClass');\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * A specialized pseudo-event module to help keep track of components waiting to\n * be notified when their DOM representations are available for use.\n *\n * This implements `PooledClass`, so you should never need to instantiate this.\n * Instead, use `CallbackQueue.getPooled()`.\n *\n * @class ReactMountReady\n * @implements PooledClass\n * @internal\n */\nfunction CallbackQueue() {\n  this._callbacks = null;\n  this._contexts = null;\n}\n\n_assign(CallbackQueue.prototype, {\n\n  /**\n   * Enqueues a callback to be invoked when `notifyAll` is invoked.\n   *\n   * @param {function} callback Invoked when `notifyAll` is invoked.\n   * @param {?object} context Context to call `callback` with.\n   * @internal\n   */\n  enqueue: function (callback, context) {\n    this._callbacks = this._callbacks || [];\n    this._contexts = this._contexts || [];\n    this._callbacks.push(callback);\n    this._contexts.push(context);\n  },\n\n  /**\n   * Invokes all enqueued callbacks and clears the queue. This is invoked after\n   * the DOM representation of a component has been created or updated.\n   *\n   * @internal\n   */\n  notifyAll: function () {\n    var callbacks = this._callbacks;\n    var contexts = this._contexts;\n    if (callbacks) {\n      !(callbacks.length === contexts.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Mismatched list of contexts in callback queue') : _prodInvariant('24') : void 0;\n      this._callbacks = null;\n      this._contexts = null;\n      for (var i = 0; i < callbacks.length; i++) {\n        callbacks[i].call(contexts[i]);\n      }\n      callbacks.length = 0;\n      contexts.length = 0;\n    }\n  },\n\n  checkpoint: function () {\n    return this._callbacks ? this._callbacks.length : 0;\n  },\n\n  rollback: function (len) {\n    if (this._callbacks) {\n      this._callbacks.length = len;\n      this._contexts.length = len;\n    }\n  },\n\n  /**\n   * Resets the internal queue.\n   *\n   * @internal\n   */\n  reset: function () {\n    this._callbacks = null;\n    this._contexts = null;\n  },\n\n  /**\n   * `PooledClass` looks for this.\n   */\n  destructor: function () {\n    this.reset();\n  }\n\n});\n\nPooledClass.addPoolingTo(CallbackQueue);\n\nmodule.exports = CallbackQueue;"]}