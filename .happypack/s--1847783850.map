{"version":3,"sources":["node_modules/react-highlight/node_modules/highlight.js/lib/languages/sml.js"],"names":["module","exports","hljs","aliases","keywords","keyword","built_in","literal","illegal","lexemes","contains","className","begin","relevance","COMMENT","inherit","APOS_STRING_MODE","QUOTE_STRING_MODE"],"mappings":";;AAAAA,OAAOC,OAAP,GAAiB,UAASC,IAAT,EAAe;AAC9B,SAAO;AACLC,aAAS,CAAC,IAAD,CADJ;AAELC,cAAU;AACRC;AACE;AACA,mEACA,6DADA,GAEA,2DAFA,GAGA,oEANM;AAORC;AACE;AACA,4FATM;AAURC,eACE;AAXM,KAFL;AAeLC,aAAS,SAfJ;AAgBLC,aAAS,cAhBJ;AAiBLC,cAAU,CACR;AACEC,iBAAW,SADb;AAEEC,aAAO,kBAFT;AAGEC,iBAAW;AAHb,KADQ,EAMRX,KAAKY,OAAL,CACE,QADF,EAEE,QAFF,EAGE;AACEJ,gBAAU,CAAC,MAAD;AADZ,KAHF,CANQ,EAaR,EAAE;AACAC,iBAAW,QADb;AAEEC,aAAO;AACP;AAHF,KAbQ,EAkBR,EAAE;AACAD,iBAAW,MADb;AAEEC,aAAO;AAFT,KAlBQ,EAsBR,EAAE;AACAD,iBAAW,MADb;AAEEC,aAAO,kBAFT;AAGEC,iBAAW;AAHb,KAtBQ,EA2BR,EAAE;AACAD,aAAO;AADT,KA3BQ,EA8BRV,KAAKa,OAAL,CAAab,KAAKc,gBAAlB,EAAoC,EAACL,WAAW,QAAZ,EAAsBE,WAAW,CAAjC,EAApC,CA9BQ,EA+BRX,KAAKa,OAAL,CAAab,KAAKe,iBAAlB,EAAqC,EAACT,SAAS,IAAV,EAArC,CA/BQ,EAgCR;AACEG,iBAAW,QADb;AAEEC,aACE,kCACA,qBADA,GAEA,oBAFA,GAGA,wDANJ;AAOEC,iBAAW;AAPb,KAhCQ,EAyCR;AACED,aAAO,OADT,CACiB;AADjB,KAzCQ;AAjBL,GAAP;AA+DD,CAhED","file":"sml.js","sourceRoot":"/Users/liangdong06/work/react-tools","sourcesContent":["module.exports = function(hljs) {\n  return {\n    aliases: ['ml'],\n    keywords: {\n      keyword:\n        /* according to Definition of Standard ML 97  */\n        'abstype and andalso as case datatype do else end eqtype ' +\n        'exception fn fun functor handle if in include infix infixr ' +\n        'let local nonfix of op open orelse raise rec sharing sig ' +\n        'signature struct structure then type val with withtype where while',\n      built_in:\n        /* built-in types according to basis library */\n        'array bool char exn int list option order real ref string substring vector unit word',\n      literal:\n        'true false NONE SOME LESS EQUAL GREATER nil'\n    },\n    illegal: /\\/\\/|>>/,\n    lexemes: '[a-z_]\\\\w*!?',\n    contains: [\n      {\n        className: 'literal',\n        begin: /\\[(\\|\\|)?\\]|\\(\\)/,\n        relevance: 0\n      },\n      hljs.COMMENT(\n        '\\\\(\\\\*',\n        '\\\\*\\\\)',\n        {\n          contains: ['self']\n        }\n      ),\n      { /* type variable */\n        className: 'symbol',\n        begin: '\\'[A-Za-z_](?!\\')[\\\\w\\']*'\n        /* the grammar is ambiguous on how 'a'b should be interpreted but not the compiler */\n      },\n      { /* polymorphic variant */\n        className: 'type',\n        begin: '`[A-Z][\\\\w\\']*'\n      },\n      { /* module or constructor */\n        className: 'type',\n        begin: '\\\\b[A-Z][\\\\w\\']*',\n        relevance: 0\n      },\n      { /* don't color identifiers, but safely catch all identifiers with '*/\n        begin: '[a-z_]\\\\w*\\'[\\\\w\\']*'\n      },\n      hljs.inherit(hljs.APOS_STRING_MODE, {className: 'string', relevance: 0}),\n      hljs.inherit(hljs.QUOTE_STRING_MODE, {illegal: null}),\n      {\n        className: 'number',\n        begin:\n          '\\\\b(0[xX][a-fA-F0-9_]+[Lln]?|' +\n          '0[oO][0-7_]+[Lln]?|' +\n          '0[bB][01_]+[Lln]?|' +\n          '[0-9][0-9_]*([Lln]|(\\\\.[0-9_]*)?([eE][-+]?[0-9_]+)?)?)',\n        relevance: 0\n      },\n      {\n        begin: /[-=]>/ // relevance booster\n      }\n    ]\n  };\n};"]}