{"version":3,"sources":["node_modules/react-highlight/node_modules/highlight.js/lib/languages/lisp.js"],"names":["module","exports","hljs","LISP_IDENT_RE","MEC_RE","LISP_SIMPLE_NUMBER_RE","SHEBANG","className","begin","end","LITERAL","NUMBER","variants","relevance","STRING","inherit","QUOTE_STRING_MODE","illegal","COMMENT","VARIABLE","KEYWORD","IDENT","MEC","QUOTED_LIST","contains","QUOTED","keywords","name","QUOTED_ATOM","LIST","BODY","endsWithParent"],"mappings":";;AAAAA,OAAOC,OAAP,GAAiB,UAASC,IAAT,EAAe;AAC9B,MAAIC,gBAAgB,+EAApB;AACA,MAAIC,SAAS,aAAb;AACA,MAAIC,wBAAwB,wEAA5B;AACA,MAAIC,UAAU;AACZC,eAAW,MADC;AAEZC,WAAO,KAFK,EAEEC,KAAK;AAFP,GAAd;AAIA,MAAIC,UAAU;AACZH,eAAW,SADC;AAEZC,WAAO;AAFK,GAAd;AAIA,MAAIG,SAAS;AACXJ,eAAW,QADA;AAEXK,cAAU,CACR,EAACJ,OAAOH,qBAAR,EAA+BQ,WAAW,CAA1C,EADQ,EAER,EAACL,OAAO,wBAAR,EAFQ,EAGR,EAACA,OAAO,wBAAR,EAHQ,EAIR,EAACA,OAAO,oCAAR,EAJQ,EAKR,EAACA,OAAO,cAAcH,qBAAd,GAAsC,IAAtC,GAA6CA,qBAArD,EAA4EI,KAAK,KAAjF,EALQ;AAFC,GAAb;AAUA,MAAIK,SAASZ,KAAKa,OAAL,CAAab,KAAKc,iBAAlB,EAAqC,EAACC,SAAS,IAAV,EAArC,CAAb;AACA,MAAIC,UAAUhB,KAAKgB,OAAL,CACZ,GADY,EACP,GADO,EAEZ;AACEL,eAAW;AADb,GAFY,CAAd;AAMA,MAAIM,WAAW;AACbX,WAAO,KADM,EACCC,KAAK;AADN,GAAf;AAGA,MAAIW,UAAU;AACZb,eAAW,QADC;AAEZC,WAAO,SAASL;AAFJ,GAAd;AAIA,MAAIkB,QAAQ;AACVb,WAAOL,aADG;AAEVU,eAAW;AAFD,GAAZ;AAIA,MAAIS,MAAM;AACRd,WAAOJ;AADC,GAAV;AAGA,MAAImB,cAAc;AAChBf,WAAO,KADS,EACFC,KAAK,KADH;AAEhBe,cAAU,CAAC,MAAD,EAASd,OAAT,EAAkBI,MAAlB,EAA0BH,MAA1B,EAAkCU,KAAlC;AAFM,GAAlB;AAIA,MAAII,SAAS;AACXD,cAAU,CAACb,MAAD,EAASG,MAAT,EAAiBK,QAAjB,EAA2BC,OAA3B,EAAoCG,WAApC,EAAiDF,KAAjD,CADC;AAEXT,cAAU,CACR;AACEJ,aAAO,UADT,EACqBC,KAAK;AAD1B,KADQ,EAIR;AACED,aAAO,WADT,EACsBC,KAAK,KAD3B;AAEEiB,gBAAU,EAACC,MAAM,OAAP;AAFZ,KAJQ,EAQR;AACEnB,aAAO,OAAOJ;AADhB,KARQ;AAFC,GAAb;AAeA,MAAIwB,cAAc;AAChBhB,cAAU,CACR,EAACJ,OAAO,OAAOL,aAAf,EADQ,EAER,EAACK,OAAO,QAAQL,aAAR,GAAwB,KAAxB,GAAgCA,aAAhC,GAAgD,IAAxD,EAFQ;AADM,GAAlB;AAMA,MAAI0B,OAAO;AACTrB,WAAO,SADE,EACSC,KAAK;AADd,GAAX;AAGA,MAAIqB,OAAO;AACTC,oBAAgB,IADP;AAETlB,eAAW;AAFF,GAAX;AAIAgB,OAAKL,QAAL,GAAgB,CACd;AACEjB,eAAW,MADb;AAEEK,cAAU,CACR,EAACJ,OAAOL,aAAR,EADQ,EAER,EAACK,OAAOJ,MAAR,EAFQ;AAFZ,GADc,EAQd0B,IARc,CAAhB;AAUAA,OAAKN,QAAL,GAAgB,CAACC,MAAD,EAASG,WAAT,EAAsBC,IAAtB,EAA4BnB,OAA5B,EAAqCC,MAArC,EAA6CG,MAA7C,EAAqDI,OAArD,EAA8DC,QAA9D,EAAwEC,OAAxE,EAAiFE,GAAjF,EAAsFD,KAAtF,CAAhB;;AAEA,SAAO;AACLJ,aAAS,IADJ;AAELO,cAAU,CACRb,MADQ,EAERL,OAFQ,EAGRI,OAHQ,EAIRI,MAJQ,EAKRI,OALQ,EAMRO,MANQ,EAORG,WAPQ,EAQRC,IARQ,EASRR,KATQ;AAFL,GAAP;AAcD,CArGD","file":"lisp.js","sourceRoot":"/Users/liangdong06/work/react-tools","sourcesContent":["module.exports = function(hljs) {\n  var LISP_IDENT_RE = '[a-zA-Z_\\\\-\\\\+\\\\*\\\\/\\\\<\\\\=\\\\>\\\\&\\\\#][a-zA-Z0-9_\\\\-\\\\+\\\\*\\\\/\\\\<\\\\=\\\\>\\\\&\\\\#!]*';\n  var MEC_RE = '\\\\|[^]*?\\\\|';\n  var LISP_SIMPLE_NUMBER_RE = '(\\\\-|\\\\+)?\\\\d+(\\\\.\\\\d+|\\\\/\\\\d+)?((d|e|f|l|s|D|E|F|L|S)(\\\\+|\\\\-)?\\\\d+)?';\n  var SHEBANG = {\n    className: 'meta',\n    begin: '^#!', end: '$'\n  };\n  var LITERAL = {\n    className: 'literal',\n    begin: '\\\\b(t{1}|nil)\\\\b'\n  };\n  var NUMBER = {\n    className: 'number',\n    variants: [\n      {begin: LISP_SIMPLE_NUMBER_RE, relevance: 0},\n      {begin: '#(b|B)[0-1]+(/[0-1]+)?'},\n      {begin: '#(o|O)[0-7]+(/[0-7]+)?'},\n      {begin: '#(x|X)[0-9a-fA-F]+(/[0-9a-fA-F]+)?'},\n      {begin: '#(c|C)\\\\(' + LISP_SIMPLE_NUMBER_RE + ' +' + LISP_SIMPLE_NUMBER_RE, end: '\\\\)'}\n    ]\n  };\n  var STRING = hljs.inherit(hljs.QUOTE_STRING_MODE, {illegal: null});\n  var COMMENT = hljs.COMMENT(\n    ';', '$',\n    {\n      relevance: 0\n    }\n  );\n  var VARIABLE = {\n    begin: '\\\\*', end: '\\\\*'\n  };\n  var KEYWORD = {\n    className: 'symbol',\n    begin: '[:&]' + LISP_IDENT_RE\n  };\n  var IDENT = {\n    begin: LISP_IDENT_RE,\n    relevance: 0\n  };\n  var MEC = {\n    begin: MEC_RE\n  };\n  var QUOTED_LIST = {\n    begin: '\\\\(', end: '\\\\)',\n    contains: ['self', LITERAL, STRING, NUMBER, IDENT]\n  };\n  var QUOTED = {\n    contains: [NUMBER, STRING, VARIABLE, KEYWORD, QUOTED_LIST, IDENT],\n    variants: [\n      {\n        begin: '[\\'`]\\\\(', end: '\\\\)'\n      },\n      {\n        begin: '\\\\(quote ', end: '\\\\)',\n        keywords: {name: 'quote'}\n      },\n      {\n        begin: '\\'' + MEC_RE\n      }\n    ]\n  };\n  var QUOTED_ATOM = {\n    variants: [\n      {begin: '\\'' + LISP_IDENT_RE},\n      {begin: '#\\'' + LISP_IDENT_RE + '(::' + LISP_IDENT_RE + ')*'}\n    ]\n  };\n  var LIST = {\n    begin: '\\\\(\\\\s*', end: '\\\\)'\n  };\n  var BODY = {\n    endsWithParent: true,\n    relevance: 0\n  };\n  LIST.contains = [\n    {\n      className: 'name',\n      variants: [\n        {begin: LISP_IDENT_RE},\n        {begin: MEC_RE}\n      ]\n    },\n    BODY\n  ];\n  BODY.contains = [QUOTED, QUOTED_ATOM, LIST, LITERAL, NUMBER, STRING, COMMENT, VARIABLE, KEYWORD, MEC, IDENT];\n\n  return {\n    illegal: /\\S/,\n    contains: [\n      NUMBER,\n      SHEBANG,\n      LITERAL,\n      STRING,\n      COMMENT,\n      QUOTED,\n      QUOTED_ATOM,\n      LIST,\n      IDENT\n    ]\n  };\n};"]}