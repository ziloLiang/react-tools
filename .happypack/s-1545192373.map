{"version":3,"sources":["node_modules/babel-polyfill/node_modules/core-js/modules/_redefine.js"],"names":["global","require","hide","has","SRC","TO_STRING","$toString","Function","TPL","split","inspectSource","it","call","module","exports","O","key","val","safe","isFunction","join","String","prototype","toString"],"mappings":";;AAAA,IAAIA,SAAYC,QAAQ,WAAR,CAAhB;AAAA,IACIC,OAAYD,QAAQ,SAAR,CADhB;AAAA,IAEIE,MAAYF,QAAQ,QAAR,CAFhB;AAAA,IAGIG,MAAYH,QAAQ,QAAR,EAAkB,KAAlB,CAHhB;AAAA,IAIII,YAAY,UAJhB;AAAA,IAKIC,YAAYC,SAASF,SAAT,CALhB;AAAA,IAMIG,MAAY,CAAC,KAAKF,SAAN,EAAiBG,KAAjB,CAAuBJ,SAAvB,CANhB;;AAQAJ,QAAQ,SAAR,EAAmBS,aAAnB,GAAmC,UAASC,EAAT,EAAY;AAC7C,SAAOL,UAAUM,IAAV,CAAeD,EAAf,CAAP;AACD,CAFD;;AAIA,CAACE,OAAOC,OAAP,GAAiB,UAASC,CAAT,EAAYC,GAAZ,EAAiBC,GAAjB,EAAsBC,IAAtB,EAA2B;AAC3C,MAAIC,aAAa,OAAOF,GAAP,IAAc,UAA/B;AACA,MAAGE,UAAH,EAAchB,IAAIc,GAAJ,EAAS,MAAT,KAAoBf,KAAKe,GAAL,EAAU,MAAV,EAAkBD,GAAlB,CAApB;AACd,MAAGD,EAAEC,GAAF,MAAWC,GAAd,EAAkB;AAClB,MAAGE,UAAH,EAAchB,IAAIc,GAAJ,EAASb,GAAT,KAAiBF,KAAKe,GAAL,EAAUb,GAAV,EAAeW,EAAEC,GAAF,IAAS,KAAKD,EAAEC,GAAF,CAAd,GAAuBR,IAAIY,IAAJ,CAASC,OAAOL,GAAP,CAAT,CAAtC,CAAjB;AACd,MAAGD,MAAMf,MAAT,EAAgB;AACde,MAAEC,GAAF,IAASC,GAAT;AACD,GAFD,MAEO;AACL,QAAG,CAACC,IAAJ,EAAS;AACP,aAAOH,EAAEC,GAAF,CAAP;AACAd,WAAKa,CAAL,EAAQC,GAAR,EAAaC,GAAb;AACD,KAHD,MAGO;AACL,UAAGF,EAAEC,GAAF,CAAH,EAAUD,EAAEC,GAAF,IAASC,GAAT,CAAV,KACKf,KAAKa,CAAL,EAAQC,GAAR,EAAaC,GAAb;AACN;AACF;AACH;AACC,CAjBD,EAiBGV,SAASe,SAjBZ,EAiBuBjB,SAjBvB,EAiBkC,SAASkB,QAAT,GAAmB;AACnD,SAAO,OAAO,IAAP,IAAe,UAAf,IAA6B,KAAKnB,GAAL,CAA7B,IAA0CE,UAAUM,IAAV,CAAe,IAAf,CAAjD;AACD,CAnBD","file":"_redefine.js","sourceRoot":"/Users/liangdong06/work/react-tools","sourcesContent":["var global    = require('./_global')\n  , hide      = require('./_hide')\n  , has       = require('./_has')\n  , SRC       = require('./_uid')('src')\n  , TO_STRING = 'toString'\n  , $toString = Function[TO_STRING]\n  , TPL       = ('' + $toString).split(TO_STRING);\n\nrequire('./_core').inspectSource = function(it){\n  return $toString.call(it);\n};\n\n(module.exports = function(O, key, val, safe){\n  var isFunction = typeof val == 'function';\n  if(isFunction)has(val, 'name') || hide(val, 'name', key);\n  if(O[key] === val)return;\n  if(isFunction)has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n  if(O === global){\n    O[key] = val;\n  } else {\n    if(!safe){\n      delete O[key];\n      hide(O, key, val);\n    } else {\n      if(O[key])O[key] = val;\n      else hide(O, key, val);\n    }\n  }\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, TO_STRING, function toString(){\n  return typeof this == 'function' && this[SRC] || $toString.call(this);\n});"]}