{"version":3,"sources":["node_modules/remarkable/lib/rules_inline/footnote_ref.js"],"names":["module","exports","footnote_ref","state","silent","label","pos","footnoteId","footnoteSubId","max","posMax","start","env","footnotes","refs","src","charCodeAt","level","options","maxNesting","slice","list","length","count","push","type","id","subId"],"mappings":"AAAA;;AAEA;;AAGAA,OAAOC,OAAP,GAAiB,SAASC,YAAT,CAAsBC,KAAtB,EAA6BC,MAA7B,EAAqC;AACpD,MAAIC,KAAJ;AAAA,MACIC,GADJ;AAAA,MAEIC,UAFJ;AAAA,MAGIC,aAHJ;AAAA,MAIIC,MAAMN,MAAMO,MAJhB;AAAA,MAKIC,QAAQR,MAAMG,GALlB;;AAOA;AACA,MAAIK,QAAQ,CAAR,GAAYF,GAAhB,EAAqB;AAAE,WAAO,KAAP;AAAe;;AAEtC,MAAI,CAACN,MAAMS,GAAN,CAAUC,SAAX,IAAwB,CAACV,MAAMS,GAAN,CAAUC,SAAV,CAAoBC,IAAjD,EAAuD;AAAE,WAAO,KAAP;AAAe;AACxE,MAAIX,MAAMY,GAAN,CAAUC,UAAV,CAAqBL,KAArB,MAAgC,IAApC,CAAwC,OAAxC,EAAiD;AAAE,aAAO,KAAP;AAAe;AAClE,MAAIR,MAAMY,GAAN,CAAUC,UAAV,CAAqBL,QAAQ,CAA7B,MAAoC,IAAxC,CAA4C,OAA5C,EAAqD;AAAE,aAAO,KAAP;AAAe;AACtE,MAAIR,MAAMc,KAAN,IAAed,MAAMe,OAAN,CAAcC,UAAjC,EAA6C;AAAE,WAAO,KAAP;AAAe;;AAE9D,OAAKb,MAAMK,QAAQ,CAAnB,EAAsBL,MAAMG,GAA5B,EAAiCH,KAAjC,EAAwC;AACtC,QAAIH,MAAMY,GAAN,CAAUC,UAAV,CAAqBV,GAArB,MAA8B,IAAlC,EAAwC;AAAE,aAAO,KAAP;AAAe;AACzD,QAAIH,MAAMY,GAAN,CAAUC,UAAV,CAAqBV,GAArB,MAA8B,IAAlC,EAAwC;AAAE,aAAO,KAAP;AAAe;AACzD,QAAIH,MAAMY,GAAN,CAAUC,UAAV,CAAqBV,GAArB,MAA8B,IAAlC,CAAuC,OAAvC,EAAgD;AAC9C;AACD;AACF;;AAED,MAAIA,QAAQK,QAAQ,CAApB,EAAuB;AAAE,WAAO,KAAP;AAAe,GAxBY,CAwBX;AACzC,MAAIL,OAAOG,GAAX,EAAgB;AAAE,WAAO,KAAP;AAAe;AACjCH;;AAEAD,UAAQF,MAAMY,GAAN,CAAUK,KAAV,CAAgBT,QAAQ,CAAxB,EAA2BL,MAAM,CAAjC,CAAR;AACA,MAAI,OAAOH,MAAMS,GAAN,CAAUC,SAAV,CAAoBC,IAApB,CAAyB,MAAMT,KAA/B,CAAP,KAAiD,WAArD,EAAkE;AAAE,WAAO,KAAP;AAAe;;AAEnF,MAAI,CAACD,MAAL,EAAa;AACX,QAAI,CAACD,MAAMS,GAAN,CAAUC,SAAV,CAAoBQ,IAAzB,EAA+B;AAAElB,YAAMS,GAAN,CAAUC,SAAV,CAAoBQ,IAApB,GAA2B,EAA3B;AAAgC;;AAEjE,QAAIlB,MAAMS,GAAN,CAAUC,SAAV,CAAoBC,IAApB,CAAyB,MAAMT,KAA/B,IAAwC,CAA5C,EAA+C;AAC7CE,mBAAaJ,MAAMS,GAAN,CAAUC,SAAV,CAAoBQ,IAApB,CAAyBC,MAAtC;AACAnB,YAAMS,GAAN,CAAUC,SAAV,CAAoBQ,IAApB,CAAyBd,UAAzB,IAAuC,EAAEF,OAAOA,KAAT,EAAgBkB,OAAO,CAAvB,EAAvC;AACApB,YAAMS,GAAN,CAAUC,SAAV,CAAoBC,IAApB,CAAyB,MAAMT,KAA/B,IAAwCE,UAAxC;AACD,KAJD,MAIO;AACLA,mBAAaJ,MAAMS,GAAN,CAAUC,SAAV,CAAoBC,IAApB,CAAyB,MAAMT,KAA/B,CAAb;AACD;;AAEDG,oBAAgBL,MAAMS,GAAN,CAAUC,SAAV,CAAoBQ,IAApB,CAAyBd,UAAzB,EAAqCgB,KAArD;AACApB,UAAMS,GAAN,CAAUC,SAAV,CAAoBQ,IAApB,CAAyBd,UAAzB,EAAqCgB,KAArC;;AAEApB,UAAMqB,IAAN,CAAW;AACTC,YAAM,cADG;AAETC,UAAInB,UAFK;AAGToB,aAAOnB,aAHE;AAITS,aAAOd,MAAMc;AAJJ,KAAX;AAMD;;AAEDd,QAAMG,GAAN,GAAYA,GAAZ;AACAH,QAAMO,MAAN,GAAeD,GAAf;AACA,SAAO,IAAP;AACD,CAxDD","file":"footnote_ref.js","sourceRoot":"/Users/liangdong06/work/react-tools","sourcesContent":["// Process footnote references ([^...])\n\n'use strict';\n\n\nmodule.exports = function footnote_ref(state, silent) {\n  var label,\n      pos,\n      footnoteId,\n      footnoteSubId,\n      max = state.posMax,\n      start = state.pos;\n\n  // should be at least 4 chars - \"[^x]\"\n  if (start + 3 > max) { return false; }\n\n  if (!state.env.footnotes || !state.env.footnotes.refs) { return false; }\n  if (state.src.charCodeAt(start) !== 0x5B/* [ */) { return false; }\n  if (state.src.charCodeAt(start + 1) !== 0x5E/* ^ */) { return false; }\n  if (state.level >= state.options.maxNesting) { return false; }\n\n  for (pos = start + 2; pos < max; pos++) {\n    if (state.src.charCodeAt(pos) === 0x20) { return false; }\n    if (state.src.charCodeAt(pos) === 0x0A) { return false; }\n    if (state.src.charCodeAt(pos) === 0x5D /* ] */) {\n      break;\n    }\n  }\n\n  if (pos === start + 2) { return false; } // no empty footnote labels\n  if (pos >= max) { return false; }\n  pos++;\n\n  label = state.src.slice(start + 2, pos - 1);\n  if (typeof state.env.footnotes.refs[':' + label] === 'undefined') { return false; }\n\n  if (!silent) {\n    if (!state.env.footnotes.list) { state.env.footnotes.list = []; }\n\n    if (state.env.footnotes.refs[':' + label] < 0) {\n      footnoteId = state.env.footnotes.list.length;\n      state.env.footnotes.list[footnoteId] = { label: label, count: 0 };\n      state.env.footnotes.refs[':' + label] = footnoteId;\n    } else {\n      footnoteId = state.env.footnotes.refs[':' + label];\n    }\n\n    footnoteSubId = state.env.footnotes.list[footnoteId].count;\n    state.env.footnotes.list[footnoteId].count++;\n\n    state.push({\n      type: 'footnote_ref',\n      id: footnoteId,\n      subId: footnoteSubId,\n      level: state.level\n    });\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n"]}