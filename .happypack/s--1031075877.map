{"version":3,"sources":["node_modules/remarkable/lib/rules_block/heading.js"],"names":["module","exports","heading","state","startLine","endLine","silent","ch","level","tmp","pos","bMarks","tShift","max","eMarks","src","charCodeAt","skipCharsBack","line","tokens","push","type","hLevel","lines","content","slice","trim","children"],"mappings":"AAAA;;AAEA;;AAGAA,OAAOC,OAAP,GAAiB,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,SAAxB,EAAmCC,OAAnC,EAA4CC,MAA5C,EAAoD;AACnE,MAAIC,EAAJ;AAAA,MAAQC,KAAR;AAAA,MAAeC,GAAf;AAAA,MACIC,MAAMP,MAAMQ,MAAN,CAAaP,SAAb,IAA0BD,MAAMS,MAAN,CAAaR,SAAb,CADpC;AAAA,MAEIS,MAAMV,MAAMW,MAAN,CAAaV,SAAb,CAFV;;AAIA,MAAIM,OAAOG,GAAX,EAAgB;AAAE,WAAO,KAAP;AAAe;;AAEjCN,OAAMJ,MAAMY,GAAN,CAAUC,UAAV,CAAqBN,GAArB,CAAN;;AAEA,MAAIH,OAAO,IAAP,CAAW,OAAX,IAAsBG,OAAOG,GAAjC,EAAsC;AAAE,WAAO,KAAP;AAAe;;AAEvD;AACAL,UAAQ,CAAR;AACAD,OAAKJ,MAAMY,GAAN,CAAUC,UAAV,CAAqB,EAAEN,GAAvB,CAAL;AACA,SAAOH,OAAO,IAAP,CAAW,OAAX,IAAsBG,MAAMG,GAA5B,IAAmCL,SAAS,CAAnD,EAAsD;AACpDA;AACAD,SAAKJ,MAAMY,GAAN,CAAUC,UAAV,CAAqB,EAAEN,GAAvB,CAAL;AACD;;AAED,MAAIF,QAAQ,CAAR,IAAcE,MAAMG,GAAN,IAAaN,OAAO,IAAlC,CAAsC,WAA1C,EAAwD;AAAE,WAAO,KAAP;AAAe;;AAEzE,MAAID,MAAJ,EAAY;AAAE,WAAO,IAAP;AAAc;;AAE5B;;AAEAO,QAAMV,MAAMc,aAAN,CAAoBJ,GAApB,EAAyB,IAAzB,EAA+BH,GAA/B,CAAN,CAzBmE,CAyBxB;AAC3CD,QAAMN,MAAMc,aAAN,CAAoBJ,GAApB,EAAyB,IAAzB,EAA+BH,GAA/B,CAAN,CA1BmE,CA0BxB;AAC3C,MAAID,MAAMC,GAAN,IAAaP,MAAMY,GAAN,CAAUC,UAAV,CAAqBP,MAAM,CAA3B,MAAkC,IAAnD,CAAuD,WAAvD,EAAoE;AAClEI,YAAMJ,GAAN;AACD;;AAEDN,QAAMe,IAAN,GAAad,YAAY,CAAzB;;AAEAD,QAAMgB,MAAN,CAAaC,IAAb,CAAkB,EAAEC,MAAM,cAAR;AAChBC,YAAQd,KADQ;AAEhBe,WAAO,CAAEnB,SAAF,EAAaD,MAAMe,IAAnB,CAFS;AAGhBV,WAAOL,MAAMK;AAHG,GAAlB;;AAMA;AACA,MAAIE,MAAMG,GAAV,EAAe;AACbV,UAAMgB,MAAN,CAAaC,IAAb,CAAkB;AAChBC,YAAM,QADU;AAEhBG,eAASrB,MAAMY,GAAN,CAAUU,KAAV,CAAgBf,GAAhB,EAAqBG,GAArB,EAA0Ba,IAA1B,EAFO;AAGhBlB,aAAOL,MAAMK,KAAN,GAAc,CAHL;AAIhBe,aAAO,CAAEnB,SAAF,EAAaD,MAAMe,IAAnB,CAJS;AAKhBS,gBAAU;AALM,KAAlB;AAOD;AACDxB,QAAMgB,MAAN,CAAaC,IAAb,CAAkB,EAAEC,MAAM,eAAR,EAAyBC,QAAQd,KAAjC,EAAwCA,OAAOL,MAAMK,KAArD,EAAlB;;AAEA,SAAO,IAAP;AACD,CApDD","file":"heading.js","sourceRoot":"/Users/liangdong06/work/react-tools","sourcesContent":["// heading (#, ##, ...)\n\n'use strict';\n\n\nmodule.exports = function heading(state, startLine, endLine, silent) {\n  var ch, level, tmp,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  if (pos >= max) { return false; }\n\n  ch  = state.src.charCodeAt(pos);\n\n  if (ch !== 0x23/* # */ || pos >= max) { return false; }\n\n  // count heading level\n  level = 1;\n  ch = state.src.charCodeAt(++pos);\n  while (ch === 0x23/* # */ && pos < max && level <= 6) {\n    level++;\n    ch = state.src.charCodeAt(++pos);\n  }\n\n  if (level > 6 || (pos < max && ch !== 0x20/* space */)) { return false; }\n\n  if (silent) { return true; }\n\n  // Let's cut tails like '    ###  ' from the end of string\n\n  max = state.skipCharsBack(max, 0x20, pos); // space\n  tmp = state.skipCharsBack(max, 0x23, pos); // #\n  if (tmp > pos && state.src.charCodeAt(tmp - 1) === 0x20/* space */) {\n    max = tmp;\n  }\n\n  state.line = startLine + 1;\n\n  state.tokens.push({ type: 'heading_open',\n    hLevel: level,\n    lines: [ startLine, state.line ],\n    level: state.level\n  });\n\n  // only if header is not empty\n  if (pos < max) {\n    state.tokens.push({\n      type: 'inline',\n      content: state.src.slice(pos, max).trim(),\n      level: state.level + 1,\n      lines: [ startLine, state.line ],\n      children: []\n    });\n  }\n  state.tokens.push({ type: 'heading_close', hLevel: level, level: state.level });\n\n  return true;\n};\n"]}