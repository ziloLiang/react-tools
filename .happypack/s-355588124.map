{"version":3,"sources":["node_modules/remarkable/lib/rules_inline/autolink.js"],"names":["url_schemas","require","normalizeLink","EMAIL_RE","AUTOLINK_RE","module","exports","autolink","state","silent","tail","linkMatch","emailMatch","url","fullUrl","pos","src","charCodeAt","slice","indexOf","match","toLowerCase","parser","validateLink","push","type","href","level","content","length"],"mappings":"AAAA;;AAEA;;AAEA,IAAIA,cAAgBC,QAAQ,uBAAR,CAApB;AACA,IAAIC,gBAAgBD,QAAQ,2BAAR,CAApB;;AAGA;AACA,IAAIE,WAAc,0IAAlB;AACA,IAAIC,cAAc,0CAAlB;;AAGAC,OAAOC,OAAP,GAAiB,SAASC,QAAT,CAAkBC,KAAlB,EAAyBC,MAAzB,EAAiC;AAChD,MAAIC,IAAJ;AAAA,MAAUC,SAAV;AAAA,MAAqBC,UAArB;AAAA,MAAiCC,GAAjC;AAAA,MAAsCC,OAAtC;AAAA,MAA+CC,MAAMP,MAAMO,GAA3D;;AAEA,MAAIP,MAAMQ,GAAN,CAAUC,UAAV,CAAqBF,GAArB,MAA8B,IAAlC,CAAsC,OAAtC,EAA+C;AAAE,aAAO,KAAP;AAAe;;AAEhEL,SAAOF,MAAMQ,GAAN,CAAUE,KAAV,CAAgBH,GAAhB,CAAP;;AAEA,MAAIL,KAAKS,OAAL,CAAa,GAAb,IAAoB,CAAxB,EAA2B;AAAE,WAAO,KAAP;AAAe;;AAE5CR,cAAYD,KAAKU,KAAL,CAAWhB,WAAX,CAAZ;;AAEA,MAAIO,SAAJ,EAAe;AACb,QAAIX,YAAYmB,OAAZ,CAAoBR,UAAU,CAAV,EAAaU,WAAb,EAApB,IAAkD,CAAtD,EAAyD;AAAE,aAAO,KAAP;AAAe;;AAE1ER,UAAMF,UAAU,CAAV,EAAaO,KAAb,CAAmB,CAAnB,EAAsB,CAAC,CAAvB,CAAN;AACAJ,cAAUZ,cAAcW,GAAd,CAAV;AACA,QAAI,CAACL,MAAMc,MAAN,CAAaC,YAAb,CAA0BV,GAA1B,CAAL,EAAqC;AAAE,aAAO,KAAP;AAAe;;AAEtD,QAAI,CAACJ,MAAL,EAAa;AACXD,YAAMgB,IAAN,CAAW;AACTC,cAAM,WADG;AAETC,cAAMZ,OAFG;AAGTa,eAAOnB,MAAMmB;AAHJ,OAAX;AAKAnB,YAAMgB,IAAN,CAAW;AACTC,cAAM,MADG;AAETG,iBAASf,GAFA;AAGTc,eAAOnB,MAAMmB,KAAN,GAAc;AAHZ,OAAX;AAKAnB,YAAMgB,IAAN,CAAW,EAAEC,MAAM,YAAR,EAAsBE,OAAOnB,MAAMmB,KAAnC,EAAX;AACD;;AAEDnB,UAAMO,GAAN,IAAaJ,UAAU,CAAV,EAAakB,MAA1B;AACA,WAAO,IAAP;AACD;;AAEDjB,eAAaF,KAAKU,KAAL,CAAWjB,QAAX,CAAb;;AAEA,MAAIS,UAAJ,EAAgB;;AAEdC,UAAMD,WAAW,CAAX,EAAcM,KAAd,CAAoB,CAApB,EAAuB,CAAC,CAAxB,CAAN;;AAEAJ,cAAUZ,cAAc,YAAYW,GAA1B,CAAV;AACA,QAAI,CAACL,MAAMc,MAAN,CAAaC,YAAb,CAA0BT,OAA1B,CAAL,EAAyC;AAAE,aAAO,KAAP;AAAe;;AAE1D,QAAI,CAACL,MAAL,EAAa;AACXD,YAAMgB,IAAN,CAAW;AACTC,cAAM,WADG;AAETC,cAAMZ,OAFG;AAGTa,eAAOnB,MAAMmB;AAHJ,OAAX;AAKAnB,YAAMgB,IAAN,CAAW;AACTC,cAAM,MADG;AAETG,iBAASf,GAFA;AAGTc,eAAOnB,MAAMmB,KAAN,GAAc;AAHZ,OAAX;AAKAnB,YAAMgB,IAAN,CAAW,EAAEC,MAAM,YAAR,EAAsBE,OAAOnB,MAAMmB,KAAnC,EAAX;AACD;;AAEDnB,UAAMO,GAAN,IAAaH,WAAW,CAAX,EAAciB,MAA3B;AACA,WAAO,IAAP;AACD;;AAED,SAAO,KAAP;AACD,CAhED","file":"autolink.js","sourceRoot":"/Users/liangdong06/work/react-tools","sourcesContent":["// Process autolinks '<protocol:...>'\n\n'use strict';\n\nvar url_schemas   = require('../common/url_schemas');\nvar normalizeLink = require('../helpers/normalize_link');\n\n\n/*eslint max-len:0*/\nvar EMAIL_RE    = /^<([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)>/;\nvar AUTOLINK_RE = /^<([a-zA-Z.\\-]{1,25}):([^<>\\x00-\\x20]*)>/;\n\n\nmodule.exports = function autolink(state, silent) {\n  var tail, linkMatch, emailMatch, url, fullUrl, pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  tail = state.src.slice(pos);\n\n  if (tail.indexOf('>') < 0) { return false; }\n\n  linkMatch = tail.match(AUTOLINK_RE);\n\n  if (linkMatch) {\n    if (url_schemas.indexOf(linkMatch[1].toLowerCase()) < 0) { return false; }\n\n    url = linkMatch[0].slice(1, -1);\n    fullUrl = normalizeLink(url);\n    if (!state.parser.validateLink(url)) { return false; }\n\n    if (!silent) {\n      state.push({\n        type: 'link_open',\n        href: fullUrl,\n        level: state.level\n      });\n      state.push({\n        type: 'text',\n        content: url,\n        level: state.level + 1\n      });\n      state.push({ type: 'link_close', level: state.level });\n    }\n\n    state.pos += linkMatch[0].length;\n    return true;\n  }\n\n  emailMatch = tail.match(EMAIL_RE);\n\n  if (emailMatch) {\n\n    url = emailMatch[0].slice(1, -1);\n\n    fullUrl = normalizeLink('mailto:' + url);\n    if (!state.parser.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      state.push({\n        type: 'link_open',\n        href: fullUrl,\n        level: state.level\n      });\n      state.push({\n        type: 'text',\n        content: url,\n        level: state.level + 1\n      });\n      state.push({ type: 'link_close', level: state.level });\n    }\n\n    state.pos += emailMatch[0].length;\n    return true;\n  }\n\n  return false;\n};\n"]}