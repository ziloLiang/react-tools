{"version":3,"sources":["node_modules/babel-polyfill/node_modules/core-js/modules/es6.array.last-index-of.js"],"names":["$export","require","toIObject","toInteger","toLength","$native","lastIndexOf","NEGATIVE_ZERO","P","F","searchElement","apply","arguments","O","length","index","Math","min"],"mappings":"AAAA;;AACA,IAAIA,UAAgBC,QAAQ,WAAR,CAApB;AAAA,IACIC,YAAgBD,QAAQ,eAAR,CADpB;AAAA,IAEIE,YAAgBF,QAAQ,eAAR,CAFpB;AAAA,IAGIG,WAAgBH,QAAQ,cAAR,CAHpB;AAAA,IAIII,UAAgB,GAAGC,WAJvB;AAAA,IAKIC,gBAAgB,CAAC,CAACF,OAAF,IAAa,IAAI,CAAC,CAAD,EAAIC,WAAJ,CAAgB,CAAhB,EAAmB,CAAC,CAApB,CAAJ,GAA6B,CAL9D;;AAOAN,QAAQA,QAAQQ,CAAR,GAAYR,QAAQS,CAAR,IAAaF,iBAAiB,CAACN,QAAQ,kBAAR,EAA4BI,OAA5B,CAA/B,CAApB,EAA0F,OAA1F,EAAmG;AACjG;AACAC,eAAa,SAASA,WAAT,CAAqBI,aAArB,CAAmC,yBAAnC,EAA6D;AACxE;AACA,QAAGH,aAAH,EAAiB,OAAOF,QAAQM,KAAR,CAAc,IAAd,EAAoBC,SAApB,KAAkC,CAAzC;AACjB,QAAIC,IAASX,UAAU,IAAV,CAAb;AAAA,QACIY,SAASV,SAASS,EAAEC,MAAX,CADb;AAAA,QAEIC,QAASD,SAAS,CAFtB;AAGA,QAAGF,UAAUE,MAAV,GAAmB,CAAtB,EAAwBC,QAAQC,KAAKC,GAAL,CAASF,KAAT,EAAgBZ,UAAUS,UAAU,CAAV,CAAV,CAAhB,CAAR;AACxB,QAAGG,QAAQ,CAAX,EAAaA,QAAQD,SAASC,KAAjB;AACb,WAAKA,SAAS,CAAd,EAAiBA,OAAjB;AAAyB,UAAGA,SAASF,CAAZ,EAAc,IAAGA,EAAEE,KAAF,MAAaL,aAAhB,EAA8B,OAAOK,SAAS,CAAhB;AAArE,KACA,OAAO,CAAC,CAAR;AACD;AAZgG,CAAnG","file":"es6.array.last-index-of.js","sourceRoot":"/Users/liangdong06/work/react-tools","sourcesContent":["'use strict';\nvar $export       = require('./_export')\n  , toIObject     = require('./_to-iobject')\n  , toInteger     = require('./_to-integer')\n  , toLength      = require('./_to-length')\n  , $native       = [].lastIndexOf\n  , NEGATIVE_ZERO = !!$native && 1 / [1].lastIndexOf(1, -0) < 0;\n\n$export($export.P + $export.F * (NEGATIVE_ZERO || !require('./_strict-method')($native)), 'Array', {\n  // 22.1.3.14 / 15.4.4.15 Array.prototype.lastIndexOf(searchElement [, fromIndex])\n  lastIndexOf: function lastIndexOf(searchElement /*, fromIndex = @[*-1] */){\n    // convert -0 to +0\n    if(NEGATIVE_ZERO)return $native.apply(this, arguments) || 0;\n    var O      = toIObject(this)\n      , length = toLength(O.length)\n      , index  = length - 1;\n    if(arguments.length > 1)index = Math.min(index, toInteger(arguments[1]));\n    if(index < 0)index = length + index;\n    for(;index >= 0; index--)if(index in O)if(O[index] === searchElement)return index || 0;\n    return -1;\n  }\n});"]}