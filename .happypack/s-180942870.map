{"version":3,"sources":["node_modules/react-highlight/node_modules/highlight.js/lib/languages/xquery.js"],"names":["module","exports","hljs","KEYWORDS","LITERAL","VAR","begin","NUMBER","className","relevance","STRING","variants","end","contains","ANNOTATION","COMMENT","METHOD","CONTAINS","aliases","case_insensitive","lexemes","illegal","keywords","keyword","literal"],"mappings":";;AAAAA,OAAOC,OAAP,GAAiB,UAASC,IAAT,EAAe;AAC9B,MAAIC,WAAW,6EACb,oFADa,GAEb,yFAFa,GAGb,2FAHa,GAIb,2FAJa,GAKb,uFALa,GAMb,yCANF;AAOA,MAAIC,UAAU,0JAAd;AACA,MAAIC,MAAM;AACRC,WAAO;AADC,GAAV;;AAIA,MAAIC,SAAS;AACXC,eAAW,QADA;AAEXF,WAAO,2EAFI;AAGXG,eAAW;AAHA,GAAb;;AAMA,MAAIC,SAAS;AACXF,eAAW,QADA;AAEXG,cAAU,CACR,EAACL,OAAO,GAAR,EAAaM,KAAK,GAAlB,EAAuBC,UAAU,CAAC,EAACP,OAAO,IAAR,EAAcG,WAAW,CAAzB,EAAD,CAAjC,EADQ,EAER,EAACH,OAAO,GAAR,EAAaM,KAAK,GAAlB,EAAuBC,UAAU,CAAC,EAACP,OAAO,IAAR,EAAcG,WAAW,CAAzB,EAAD,CAAjC,EAFQ;AAFC,GAAb;;AAQA,MAAIK,aAAa;AACfN,eAAW,MADI;AAEfF,WAAO;AAFQ,GAAjB;;AAKA,MAAIS,UAAU;AACZP,eAAW,SADC;AAEZF,WAAO,MAFK,EAEGM,KAAK,MAFR;AAGZH,eAAW,EAHC;AAIZI,cAAU,CACR;AACEL,iBAAW,QADb,EACuBF,OAAO;AAD9B,KADQ;AAJE,GAAd;;AAWA,MAAIU,SAAS;AACXV,WAAO,GADI,EACCM,KAAK;AADN,GAAb;;AAIA,MAAIK,WAAW,CACbZ,GADa,EAEbK,MAFa,EAGbH,MAHa,EAIbQ,OAJa,EAKbD,UALa,EAMbE,MANa,CAAf;AAQAA,SAAOH,QAAP,GAAkBI,QAAlB;;AAGA,SAAO;AACLC,aAAS,CAAC,OAAD,EAAU,IAAV,CADJ;AAELC,sBAAkB,KAFb;AAGLC,aAAS,4BAHJ;AAILC,aAAS,yCAJJ;AAKLC,cAAU;AACRC,eAASpB,QADD;AAERqB,eAASpB;AAFD,KALL;AASLS,cAAUI;AATL,GAAP;AAWD,CArED","file":"xquery.js","sourceRoot":"/Users/liangdong06/work/react-tools","sourcesContent":["module.exports = function(hljs) {\n  var KEYWORDS = 'for let if while then else return where group by xquery encoding version' +\n    'module namespace boundary-space preserve strip default collation base-uri ordering' +\n    'copy-namespaces order declare import schema namespace function option in allowing empty' +\n    'at tumbling window sliding window start when only end when previous next stable ascending' +\n    'descending empty greatest least some every satisfies switch case typeswitch try catch and' +\n    'or to union intersect instance of treat as castable cast map array delete insert into' +\n    'replace value rename copy modify update';\n  var LITERAL = 'false true xs:string xs:integer element item xs:date xs:datetime xs:float xs:double xs:decimal QName xs:anyURI xs:long xs:int xs:short xs:byte attribute';\n  var VAR = {\n    begin: /\\$[a-zA-Z0-9\\-]+/\n  };\n\n  var NUMBER = {\n    className: 'number',\n    begin: '(\\\\b0[0-7_]+)|(\\\\b0x[0-9a-fA-F_]+)|(\\\\b[1-9][0-9_]*(\\\\.[0-9_]+)?)|[0_]\\\\b',\n    relevance: 0\n  };\n\n  var STRING = {\n    className: 'string',\n    variants: [\n      {begin: /\"/, end: /\"/, contains: [{begin: /\"\"/, relevance: 0}]},\n      {begin: /'/, end: /'/, contains: [{begin: /''/, relevance: 0}]}\n    ]\n  };\n\n  var ANNOTATION = {\n    className: 'meta',\n    begin: '%\\\\w+'\n  };\n\n  var COMMENT = {\n    className: 'comment',\n    begin: '\\\\(:', end: ':\\\\)',\n    relevance: 10,\n    contains: [\n      {\n        className: 'doctag', begin: '@\\\\w+'\n      }\n    ]\n  };\n\n  var METHOD = {\n    begin: '{', end: '}'\n  };\n\n  var CONTAINS = [\n    VAR,\n    STRING,\n    NUMBER,\n    COMMENT,\n    ANNOTATION,\n    METHOD\n  ];\n  METHOD.contains = CONTAINS;\n\n\n  return {\n    aliases: ['xpath', 'xq'],\n    case_insensitive: false,\n    lexemes: /[a-zA-Z\\$][a-zA-Z0-9_:\\-]*/,\n    illegal: /(proc)|(abstract)|(extends)|(until)|(#)/,\n    keywords: {\n      keyword: KEYWORDS,\n      literal: LITERAL\n    },\n    contains: CONTAINS\n  };\n};"]}