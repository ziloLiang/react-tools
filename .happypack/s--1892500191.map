{"version":3,"sources":["node_modules/react/lib/ReactClass.js"],"names":["_prodInvariant","require","_assign","ReactComponent","ReactElement","ReactPropTypeLocationNames","ReactNoopUpdateQueue","emptyObject","invariant","warning","MIXINS_KEY","identity","fn","injectedMixins","ReactClassInterface","mixins","statics","propTypes","contextTypes","childContextTypes","getDefaultProps","getInitialState","getChildContext","render","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","componentWillUpdate","componentDidUpdate","componentWillUnmount","updateComponent","RESERVED_SPEC_KEYS","displayName","Constructor","i","length","mixSpecIntoComponent","process","env","NODE_ENV","validateTypeDef","createMergedResultFunction","mixStaticSpecIntoComponent","autobind","typeDef","location","propName","hasOwnProperty","validateMethodOverride","isAlreadyDefined","name","specPolicy","ReactClassMixin","spec","typeofSpec","isMixinValid","isValidElement","proto","prototype","autoBindPairs","__reactAutoBindPairs","property","isReactClassMethod","isFunction","shouldAutoBind","push","createChainedFunction","isReserved","isInherited","mergeIntoWithNoDuplicateKeys","one","two","key","undefined","mergedResult","a","apply","arguments","b","c","chainedFunction","bindAutoBindMethod","component","method","boundMethod","bind","__reactBoundContext","__reactBoundMethod","__reactBoundArguments","componentName","constructor","_bind","newThis","_len","args","Array","_key","reboundMethod","bindAutoBindMethods","pairs","autoBindKey","replaceState","newState","callback","updater","enqueueReplaceState","enqueueCallback","isMounted","ReactClassComponent","ReactClass","createClass","props","context","refs","state","initialState","_isMockFunction","isArray","forEach","defaultProps","isReactClassApproved","componentShouldUpdate","componentWillRecieveProps","methodName","injection","injectMixin","mixin","module","exports"],"mappings":"AAAA;;;;;;;;;;AAUA;;;;AAEA,IAAIA,iBAAiBC,QAAQ,sBAAR,CAArB;AAAA,IACIC,UAAUD,QAAQ,eAAR,CADd;;AAGA,IAAIE,iBAAiBF,QAAQ,kBAAR,CAArB;AACA,IAAIG,eAAeH,QAAQ,gBAAR,CAAnB;AACA,IAAII,6BAA6BJ,QAAQ,8BAAR,CAAjC;AACA,IAAIK,uBAAuBL,QAAQ,wBAAR,CAA3B;;AAEA,IAAIM,cAAcN,QAAQ,sBAAR,CAAlB;AACA,IAAIO,YAAYP,QAAQ,oBAAR,CAAhB;AACA,IAAIQ,UAAUR,QAAQ,kBAAR,CAAd;;AAEA,IAAIS,aAAa,QAAjB;;AAEA;AACA;AACA,SAASC,QAAT,CAAkBC,EAAlB,EAAsB;AACpB,SAAOA,EAAP;AACD;;AAED;;;;AAKA,IAAIC,iBAAiB,EAArB;;AAEA;;;;;;;;;;;;;;;;;;;;;;AAsBA,IAAIC,sBAAsB;;AAExB;;;;;;AAMAC,UAAQ,aARgB;;AAUxB;;;;;;;AAOAC,WAAS,aAjBe;;AAmBxB;;;;;;AAMAC,aAAW,aAzBa;;AA2BxB;;;;;;AAMAC,gBAAc,aAjCU;;AAmCxB;;;;;;AAMAC,qBAAmB,aAzCK;;AA2CxB;;AAEA;;;;;;;;;;AAUAC,mBAAiB,oBAvDO;;AAyDxB;;;;;;;;;;;;;;AAcAC,mBAAiB,oBAvEO;;AAyExB;;;;AAIAC,mBAAiB,oBA7EO;;AA+ExB;;;;;;;;;;;;;;;;AAgBAC,UAAQ,aA/FgB;;AAiGxB;;AAEA;;;;;;;AAOAC,sBAAoB,aA1GI;;AA4GxB;;;;;;;;;;AAUAC,qBAAmB,aAtHK;;AAwHxB;;;;;;;;;;;;;;;;;;;AAmBAC,6BAA2B,aA3IH;;AA6IxB;;;;;;;;;;;;;;;;;;;;AAoBAC,yBAAuB,aAjKC;;AAmKxB;;;;;;;;;;;;;;;AAeAC,uBAAqB,aAlLG;;AAoLxB;;;;;;;;;;;;AAYAC,sBAAoB,aAhMI;;AAkMxB;;;;;;;;;;;AAWAC,wBAAsB,aA7ME;;AA+MxB;;AAEA;;;;;;;;;;AAUAC,mBAAiB;;AA3NO,CAA1B;;AA+NA;;;;;;;;;AASA,IAAIC,qBAAqB;AACvBC,eAAa,qBAAUC,WAAV,EAAuBD,YAAvB,EAAoC;AAC/CC,gBAAYD,WAAZ,GAA0BA,YAA1B;AACD,GAHsB;AAIvBlB,UAAQ,gBAAUmB,WAAV,EAAuBnB,OAAvB,EAA+B;AACrC,QAAIA,OAAJ,EAAY;AACV,WAAK,IAAIoB,IAAI,CAAb,EAAgBA,IAAIpB,QAAOqB,MAA3B,EAAmCD,GAAnC,EAAwC;AACtCE,6BAAqBH,WAArB,EAAkCnB,QAAOoB,CAAP,CAAlC;AACD;AACF;AACF,GAVsB;AAWvBhB,qBAAmB,2BAAUe,WAAV,EAAuBf,kBAAvB,EAA0C;AAC3D,QAAImB,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCC,sBAAgBP,WAAhB,EAA6Bf,kBAA7B,EAAgD,cAAhD;AACD;AACDe,gBAAYf,iBAAZ,GAAgCjB,QAAQ,EAAR,EAAYgC,YAAYf,iBAAxB,EAA2CA,kBAA3C,CAAhC;AACD,GAhBsB;AAiBvBD,gBAAc,sBAAUgB,WAAV,EAAuBhB,aAAvB,EAAqC;AACjD,QAAIoB,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCC,sBAAgBP,WAAhB,EAA6BhB,aAA7B,EAA2C,SAA3C;AACD;AACDgB,gBAAYhB,YAAZ,GAA2BhB,QAAQ,EAAR,EAAYgC,YAAYhB,YAAxB,EAAsCA,aAAtC,CAA3B;AACD,GAtBsB;AAuBvB;;;;AAIAE,mBAAiB,yBAAUc,WAAV,EAAuBd,gBAAvB,EAAwC;AACvD,QAAIc,YAAYd,eAAhB,EAAiC;AAC/Bc,kBAAYd,eAAZ,GAA8BsB,2BAA2BR,YAAYd,eAAvC,EAAwDA,gBAAxD,CAA9B;AACD,KAFD,MAEO;AACLc,kBAAYd,eAAZ,GAA8BA,gBAA9B;AACD;AACF,GAjCsB;AAkCvBH,aAAW,mBAAUiB,WAAV,EAAuBjB,UAAvB,EAAkC;AAC3C,QAAIqB,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCC,sBAAgBP,WAAhB,EAA6BjB,UAA7B,EAAwC,MAAxC;AACD;AACDiB,gBAAYjB,SAAZ,GAAwBf,QAAQ,EAAR,EAAYgC,YAAYjB,SAAxB,EAAmCA,UAAnC,CAAxB;AACD,GAvCsB;AAwCvBD,WAAS,iBAAUkB,WAAV,EAAuBlB,QAAvB,EAAgC;AACvC2B,+BAA2BT,WAA3B,EAAwClB,QAAxC;AACD,GA1CsB;AA2CvB4B,YAAU,oBAAY,CAAE,CA3CD,EAAzB;;AA6CA,SAASH,eAAT,CAAyBP,WAAzB,EAAsCW,OAAtC,EAA+CC,QAA/C,EAAyD;AACvD,OAAK,IAAIC,QAAT,IAAqBF,OAArB,EAA8B;AAC5B,QAAIA,QAAQG,cAAR,CAAuBD,QAAvB,CAAJ,EAAsC;AACpC;AACA;AACAT,cAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC/B,QAAQ,OAAOoC,QAAQE,QAAR,CAAP,KAA6B,UAArC,EAAiD,sEAAsE,kBAAvH,EAA2Ib,YAAYD,WAAZ,IAA2B,YAAtK,EAAoL5B,2BAA2ByC,QAA3B,CAApL,EAA0NC,QAA1N,CAAxC,GAA8Q,KAAK,CAAnR;AACD;AACF;AACF;;AAED,SAASE,sBAAT,CAAgCC,gBAAhC,EAAkDC,IAAlD,EAAwD;AACtD,MAAIC,aAAatC,oBAAoBkC,cAApB,CAAmCG,IAAnC,IAA2CrC,oBAAoBqC,IAApB,CAA3C,GAAuE,IAAxF;;AAEA;AACA,MAAIE,gBAAgBL,cAAhB,CAA+BG,IAA/B,CAAJ,EAA0C;AACxC,MAAEC,eAAe,eAAjB,IAAoCd,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwChC,UAAU,KAAV,EAAiB,0JAAjB,EAA6K2C,IAA7K,CAAxC,GAA6NnD,eAAe,IAAf,EAAqBmD,IAArB,CAAjQ,GAA8R,KAAK,CAAnS;AACD;;AAED;AACA,MAAID,gBAAJ,EAAsB;AACpB,MAAEE,eAAe,aAAf,IAAgCA,eAAe,oBAAjD,IAAyEd,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwChC,UAAU,KAAV,EAAiB,+HAAjB,EAAkJ2C,IAAlJ,CAAxC,GAAkMnD,eAAe,IAAf,EAAqBmD,IAArB,CAA3Q,GAAwS,KAAK,CAA7S;AACD;AACF;;AAED;;;;AAIA,SAASd,oBAAT,CAA8BH,WAA9B,EAA2CoB,IAA3C,EAAiD;AAC/C,MAAI,CAACA,IAAL,EAAW;AACT,QAAIhB,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,UAAIe,oBAAoBD,IAApB,yCAAoBA,IAApB,CAAJ;AACA,UAAIE,eAAeD,eAAe,QAAf,IAA2BD,SAAS,IAAvD;;AAEAhB,cAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC/B,QAAQ+C,YAAR,EAAsB,mEAAmE,gEAAnE,GAAsI,iDAAtI,GAA0L,6BAAhN,EAA+OtB,YAAYD,WAAZ,IAA2B,YAA1Q,EAAwRqB,SAAS,IAAT,GAAgB,IAAhB,GAAuBC,UAA/S,CAAxC,GAAqW,KAAK,CAA1W;AACD;;AAED;AACD;;AAED,IAAE,OAAOD,IAAP,KAAgB,UAAlB,IAAgChB,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwChC,UAAU,KAAV,EAAiB,qHAAjB,CAAxC,GAAkLR,eAAe,IAAf,CAAlN,GAAyO,KAAK,CAA9O;AACA,GAAC,CAACI,aAAaqD,cAAb,CAA4BH,IAA5B,CAAF,GAAsChB,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwChC,UAAU,KAAV,EAAiB,mGAAjB,CAAxC,GAAgKR,eAAe,IAAf,CAAtM,GAA6N,KAAK,CAAlO;;AAEA,MAAI0D,QAAQxB,YAAYyB,SAAxB;AACA,MAAIC,gBAAgBF,MAAMG,oBAA1B;;AAEA;AACA;AACA;AACA,MAAIP,KAAKN,cAAL,CAAoBtC,UAApB,CAAJ,EAAqC;AACnCsB,uBAAmBjB,MAAnB,CAA0BmB,WAA1B,EAAuCoB,KAAKvC,MAA5C;AACD;;AAED,OAAK,IAAIoC,IAAT,IAAiBG,IAAjB,EAAuB;AACrB,QAAI,CAACA,KAAKN,cAAL,CAAoBG,IAApB,CAAL,EAAgC;AAC9B;AACD;;AAED,QAAIA,SAASzC,UAAb,EAAyB;AACvB;AACA;AACD;;AAED,QAAIoD,WAAWR,KAAKH,IAAL,CAAf;AACA,QAAID,mBAAmBQ,MAAMV,cAAN,CAAqBG,IAArB,CAAvB;AACAF,2BAAuBC,gBAAvB,EAAyCC,IAAzC;;AAEA,QAAInB,mBAAmBgB,cAAnB,CAAkCG,IAAlC,CAAJ,EAA6C;AAC3CnB,yBAAmBmB,IAAnB,EAAyBjB,WAAzB,EAAsC4B,QAAtC;AACD,KAFD,MAEO;AACL;AACA;AACA;AACA;AACA,UAAIC,qBAAqBjD,oBAAoBkC,cAApB,CAAmCG,IAAnC,CAAzB;AACA,UAAIa,aAAa,OAAOF,QAAP,KAAoB,UAArC;AACA,UAAIG,iBAAiBD,cAAc,CAACD,kBAAf,IAAqC,CAACb,gBAAtC,IAA0DI,KAAKV,QAAL,KAAkB,KAAjG;;AAEA,UAAIqB,cAAJ,EAAoB;AAClBL,sBAAcM,IAAd,CAAmBf,IAAnB,EAAyBW,QAAzB;AACAJ,cAAMP,IAAN,IAAcW,QAAd;AACD,OAHD,MAGO;AACL,YAAIZ,gBAAJ,EAAsB;AACpB,cAAIE,aAAatC,oBAAoBqC,IAApB,CAAjB;;AAEA;AACA,YAAEY,uBAAuBX,eAAe,oBAAf,IAAuCA,eAAe,aAA7E,CAAF,IAAiGd,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwChC,UAAU,KAAV,EAAiB,kFAAjB,EAAqG4C,UAArG,EAAiHD,IAAjH,CAAxC,GAAiKnD,eAAe,IAAf,EAAqBoD,UAArB,EAAiCD,IAAjC,CAAlQ,GAA2S,KAAK,CAAhT;;AAEA;AACA;AACA,cAAIC,eAAe,oBAAnB,EAAyC;AACvCM,kBAAMP,IAAN,IAAcT,2BAA2BgB,MAAMP,IAAN,CAA3B,EAAwCW,QAAxC,CAAd;AACD,WAFD,MAEO,IAAIV,eAAe,aAAnB,EAAkC;AACvCM,kBAAMP,IAAN,IAAcgB,sBAAsBT,MAAMP,IAAN,CAAtB,EAAmCW,QAAnC,CAAd;AACD;AACF,SAbD,MAaO;AACLJ,gBAAMP,IAAN,IAAcW,QAAd;AACA,cAAIxB,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC;AACA;AACA,gBAAI,OAAOsB,QAAP,KAAoB,UAApB,IAAkCR,KAAKrB,WAA3C,EAAwD;AACtDyB,oBAAMP,IAAN,EAAYlB,WAAZ,GAA0BqB,KAAKrB,WAAL,GAAmB,GAAnB,GAAyBkB,IAAnD;AACD;AACF;AACF;AACF;AACF;AACF;AACF;;AAED,SAASR,0BAAT,CAAoCT,WAApC,EAAiDlB,OAAjD,EAA0D;AACxD,MAAI,CAACA,OAAL,EAAc;AACZ;AACD;AACD,OAAK,IAAImC,IAAT,IAAiBnC,OAAjB,EAA0B;AACxB,QAAI8C,WAAW9C,QAAQmC,IAAR,CAAf;AACA,QAAI,CAACnC,QAAQgC,cAAR,CAAuBG,IAAvB,CAAL,EAAmC;AACjC;AACD;;AAED,QAAIiB,aAAajB,QAAQnB,kBAAzB;AACA,KAAC,CAACoC,UAAF,GAAe9B,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwChC,UAAU,KAAV,EAAiB,yMAAjB,EAA4N2C,IAA5N,CAAxC,GAA4QnD,eAAe,IAAf,EAAqBmD,IAArB,CAA3R,GAAwT,KAAK,CAA7T;;AAEA,QAAIkB,cAAclB,QAAQjB,WAA1B;AACA,KAAC,CAACmC,WAAF,GAAgB/B,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwChC,UAAU,KAAV,EAAiB,sHAAjB,EAAyI2C,IAAzI,CAAxC,GAAyLnD,eAAe,IAAf,EAAqBmD,IAArB,CAAzM,GAAsO,KAAK,CAA3O;AACAjB,gBAAYiB,IAAZ,IAAoBW,QAApB;AACD;AACF;;AAED;;;;;;;AAOA,SAASQ,4BAAT,CAAsCC,GAAtC,EAA2CC,GAA3C,EAAgD;AAC9C,IAAED,OAAOC,GAAP,IAAc,QAAOD,GAAP,yCAAOA,GAAP,OAAe,QAA7B,IAAyC,QAAOC,GAAP,yCAAOA,GAAP,OAAe,QAA1D,IAAsElC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwChC,UAAU,KAAV,EAAiB,2DAAjB,CAAxC,GAAwHR,eAAe,IAAf,CAA9L,GAAqN,KAAK,CAA1N;;AAEA,OAAK,IAAIyE,GAAT,IAAgBD,GAAhB,EAAqB;AACnB,QAAIA,IAAIxB,cAAJ,CAAmByB,GAAnB,CAAJ,EAA6B;AAC3B,QAAEF,IAAIE,GAAJ,MAAaC,SAAf,IAA4BpC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwChC,UAAU,KAAV,EAAiB,wPAAjB,EAA2QiE,GAA3Q,CAAxC,GAA0TzE,eAAe,IAAf,EAAqByE,GAArB,CAAtV,GAAkX,KAAK,CAAvX;AACAF,UAAIE,GAAJ,IAAWD,IAAIC,GAAJ,CAAX;AACD;AACF;AACD,SAAOF,GAAP;AACD;;AAED;;;;;;;;AAQA,SAAS7B,0BAAT,CAAoC6B,GAApC,EAAyCC,GAAzC,EAA8C;AAC5C,SAAO,SAASG,YAAT,GAAwB;AAC7B,QAAIC,IAAIL,IAAIM,KAAJ,CAAU,IAAV,EAAgBC,SAAhB,CAAR;AACA,QAAIC,IAAIP,IAAIK,KAAJ,CAAU,IAAV,EAAgBC,SAAhB,CAAR;AACA,QAAIF,KAAK,IAAT,EAAe;AACb,aAAOG,CAAP;AACD,KAFD,MAEO,IAAIA,KAAK,IAAT,EAAe;AACpB,aAAOH,CAAP;AACD;AACD,QAAII,IAAI,EAAR;AACAV,iCAA6BU,CAA7B,EAAgCJ,CAAhC;AACAN,iCAA6BU,CAA7B,EAAgCD,CAAhC;AACA,WAAOC,CAAP;AACD,GAZD;AAaD;;AAED;;;;;;;;AAQA,SAASb,qBAAT,CAA+BI,GAA/B,EAAoCC,GAApC,EAAyC;AACvC,SAAO,SAASS,eAAT,GAA2B;AAChCV,QAAIM,KAAJ,CAAU,IAAV,EAAgBC,SAAhB;AACAN,QAAIK,KAAJ,CAAU,IAAV,EAAgBC,SAAhB;AACD,GAHD;AAID;;AAED;;;;;;;AAOA,SAASI,kBAAT,CAA4BC,SAA5B,EAAuCC,MAAvC,EAA+C;AAC7C,MAAIC,cAAcD,OAAOE,IAAP,CAAYH,SAAZ,CAAlB;AACA,MAAI7C,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC6C,gBAAYE,mBAAZ,GAAkCJ,SAAlC;AACAE,gBAAYG,kBAAZ,GAAiCJ,MAAjC;AACAC,gBAAYI,qBAAZ,GAAoC,IAApC;AACA,QAAIC,gBAAgBP,UAAUQ,WAAV,CAAsB1D,WAA1C;AACA,QAAI2D,QAAQP,YAAYC,IAAxB;AACAD,gBAAYC,IAAZ,GAAmB,UAAUO,OAAV,EAAmB;AACpC,WAAK,IAAIC,OAAOhB,UAAU1C,MAArB,EAA6B2D,OAAOC,MAAMF,OAAO,CAAP,GAAWA,OAAO,CAAlB,GAAsB,CAA5B,CAApC,EAAoEG,OAAO,CAAhF,EAAmFA,OAAOH,IAA1F,EAAgGG,MAAhG,EAAwG;AACtGF,aAAKE,OAAO,CAAZ,IAAiBnB,UAAUmB,IAAV,CAAjB;AACD;;AAED;AACA;AACA;AACA,UAAIJ,YAAYV,SAAZ,IAAyBU,YAAY,IAAzC,EAA+C;AAC7CvD,gBAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC/B,QAAQ,KAAR,EAAe,8DAA8D,4BAA7E,EAA2GiF,aAA3G,CAAxC,GAAoK,KAAK,CAAzK;AACD,OAFD,MAEO,IAAI,CAACK,KAAK3D,MAAV,EAAkB;AACvBE,gBAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC/B,QAAQ,KAAR,EAAe,kEAAkE,8DAAlE,GAAmI,iDAAlJ,EAAqMiF,aAArM,CAAxC,GAA8P,KAAK,CAAnQ;AACA,eAAOL,WAAP;AACD;AACD,UAAIa,gBAAgBN,MAAMf,KAAN,CAAYQ,WAAZ,EAAyBP,SAAzB,CAApB;AACAoB,oBAAcX,mBAAd,GAAoCJ,SAApC;AACAe,oBAAcV,kBAAd,GAAmCJ,MAAnC;AACAc,oBAAcT,qBAAd,GAAsCM,IAAtC;AACA,aAAOG,aAAP;AACD,KAnBD;AAoBD;AACD,SAAOb,WAAP;AACD;;AAED;;;;;AAKA,SAASc,mBAAT,CAA6BhB,SAA7B,EAAwC;AACtC,MAAIiB,QAAQjB,UAAUtB,oBAAtB;AACA,OAAK,IAAI1B,IAAI,CAAb,EAAgBA,IAAIiE,MAAMhE,MAA1B,EAAkCD,KAAK,CAAvC,EAA0C;AACxC,QAAIkE,cAAcD,MAAMjE,CAAN,CAAlB;AACA,QAAIiD,SAASgB,MAAMjE,IAAI,CAAV,CAAb;AACAgD,cAAUkB,WAAV,IAAyBnB,mBAAmBC,SAAnB,EAA8BC,MAA9B,CAAzB;AACD;AACF;;AAED;;;;AAIA,IAAI/B,kBAAkB;;AAEpB;;;;AAIAiD,gBAAc,sBAAUC,QAAV,EAAoBC,QAApB,EAA8B;AAC1C,SAAKC,OAAL,CAAaC,mBAAb,CAAiC,IAAjC,EAAuCH,QAAvC;AACA,QAAIC,QAAJ,EAAc;AACZ,WAAKC,OAAL,CAAaE,eAAb,CAA6B,IAA7B,EAAmCH,QAAnC,EAA6C,cAA7C;AACD;AACF,GAXmB;;AAapB;;;;;;AAMAI,aAAW,qBAAY;AACrB,WAAO,KAAKH,OAAL,CAAaG,SAAb,CAAuB,IAAvB,CAAP;AACD;AArBmB,CAAtB;;AAwBA,IAAIC,sBAAsB,SAAtBA,mBAAsB,GAAY,CAAE,CAAxC;AACA3G,QAAQ2G,oBAAoBlD,SAA5B,EAAuCxD,eAAewD,SAAtD,EAAiEN,eAAjE;;AAEA;;;;;AAKA,IAAIyD,aAAa;;AAEf;;;;;;;;AAQAC,eAAa,qBAAUzD,IAAV,EAAgB;AAC3B;AACA;AACA;AACA,QAAIpB,cAAcvB,SAAS,UAAUqG,KAAV,EAAiBC,OAAjB,EAA0BR,OAA1B,EAAmC;AAC5D;AACA;;AAEA,UAAInE,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCF,gBAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC/B,QAAQ,gBAAgByB,WAAxB,EAAqC,uEAAuE,qDAA5G,CAAxC,GAA6M,KAAK,CAAlN;AACD;;AAED;AACA,UAAI,KAAK2B,oBAAL,CAA0BzB,MAA9B,EAAsC;AACpC+D,4BAAoB,IAApB;AACD;;AAED,WAAKa,KAAL,GAAaA,KAAb;AACA,WAAKC,OAAL,GAAeA,OAAf;AACA,WAAKC,IAAL,GAAY3G,WAAZ;AACA,WAAKkG,OAAL,GAAeA,WAAWnG,oBAA1B;;AAEA,WAAK6G,KAAL,GAAa,IAAb;;AAEA;AACA;;AAEA,UAAIC,eAAe,KAAK/F,eAAL,GAAuB,KAAKA,eAAL,EAAvB,GAAgD,IAAnE;AACA,UAAIiB,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC;AACA,YAAI4E,iBAAiB1C,SAAjB,IAA8B,KAAKrD,eAAL,CAAqBgG,eAAvD,EAAwE;AACtE;AACA;AACAD,yBAAe,IAAf;AACD;AACF;AACD,QAAE,QAAOA,YAAP,yCAAOA,YAAP,OAAwB,QAAxB,IAAoC,CAACpB,MAAMsB,OAAN,CAAcF,YAAd,CAAvC,IAAsE9E,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwChC,UAAU,KAAV,EAAiB,qDAAjB,EAAwE0B,YAAYD,WAAZ,IAA2B,yBAAnG,CAAxC,GAAwKjC,eAAe,IAAf,EAAqBkC,YAAYD,WAAZ,IAA2B,yBAAhD,CAA9O,GAA2T,KAAK,CAAhU;;AAEA,WAAKkF,KAAL,GAAaC,YAAb;AACD,KAnCiB,CAAlB;AAoCAlF,gBAAYyB,SAAZ,GAAwB,IAAIkD,mBAAJ,EAAxB;AACA3E,gBAAYyB,SAAZ,CAAsBgC,WAAtB,GAAoCzD,WAApC;AACAA,gBAAYyB,SAAZ,CAAsBE,oBAAtB,GAA6C,EAA7C;;AAEAhD,mBAAe0G,OAAf,CAAuBlF,qBAAqBiD,IAArB,CAA0B,IAA1B,EAAgCpD,WAAhC,CAAvB;;AAEAG,yBAAqBH,WAArB,EAAkCoB,IAAlC;;AAEA;AACA,QAAIpB,YAAYd,eAAhB,EAAiC;AAC/Bc,kBAAYsF,YAAZ,GAA2BtF,YAAYd,eAAZ,EAA3B;AACD;;AAED,QAAIkB,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC;AACA;AACA;AACA;AACA,UAAIN,YAAYd,eAAhB,EAAiC;AAC/Bc,oBAAYd,eAAZ,CAA4BqG,oBAA5B,GAAmD,EAAnD;AACD;AACD,UAAIvF,YAAYyB,SAAZ,CAAsBtC,eAA1B,EAA2C;AACzCa,oBAAYyB,SAAZ,CAAsBtC,eAAtB,CAAsCoG,oBAAtC,GAA6D,EAA7D;AACD;AACF;;AAED,KAACvF,YAAYyB,SAAZ,CAAsBpC,MAAvB,GAAgCe,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwChC,UAAU,KAAV,EAAiB,yEAAjB,CAAxC,GAAsIR,eAAe,IAAf,CAAtK,GAA6L,KAAK,CAAlM;;AAEA,QAAIsC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCF,cAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC/B,QAAQ,CAACyB,YAAYyB,SAAZ,CAAsB+D,qBAA/B,EAAsD,4BAA4B,iEAA5B,GAAgG,4DAAhG,GAA+J,6BAArN,EAAoPpE,KAAKrB,WAAL,IAAoB,aAAxQ,CAAxC,GAAiU,KAAK,CAAtU;AACAK,cAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC/B,QAAQ,CAACyB,YAAYyB,SAAZ,CAAsBgE,yBAA/B,EAA0D,4BAA4B,wEAAtF,EAAgKrE,KAAKrB,WAAL,IAAoB,aAApL,CAAxC,GAA6O,KAAK,CAAlP;AACD;;AAED;AACA,SAAK,IAAI2F,UAAT,IAAuB9G,mBAAvB,EAA4C;AAC1C,UAAI,CAACoB,YAAYyB,SAAZ,CAAsBiE,UAAtB,CAAL,EAAwC;AACtC1F,oBAAYyB,SAAZ,CAAsBiE,UAAtB,IAAoC,IAApC;AACD;AACF;;AAED,WAAO1F,WAAP;AACD,GA3Fc;;AA6Ff2F,aAAW;AACTC,iBAAa,qBAAUC,KAAV,EAAiB;AAC5BlH,qBAAeqD,IAAf,CAAoB6D,KAApB;AACD;AAHQ;;AA7FI,CAAjB;;AAqGAC,OAAOC,OAAP,GAAiBnB,UAAjB","file":"ReactClass.js","sourceRoot":"/Users/liangdong06/work/react-tools","sourcesContent":["/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant'),\n    _assign = require('object-assign');\n\nvar ReactComponent = require('./ReactComponent');\nvar ReactElement = require('./ReactElement');\nvar ReactPropTypeLocationNames = require('./ReactPropTypeLocationNames');\nvar ReactNoopUpdateQueue = require('./ReactNoopUpdateQueue');\n\nvar emptyObject = require('fbjs/lib/emptyObject');\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\nvar MIXINS_KEY = 'mixins';\n\n// Helper function to allow the creation of anonymous functions which do not\n// have .name set to the name of the variable being assigned to.\nfunction identity(fn) {\n  return fn;\n}\n\n/**\n * Policies that describe methods in `ReactClassInterface`.\n */\n\n\nvar injectedMixins = [];\n\n/**\n * Composite components are higher-level components that compose other composite\n * or host components.\n *\n * To create a new type of `ReactClass`, pass a specification of\n * your new class to `React.createClass`. The only requirement of your class\n * specification is that you implement a `render` method.\n *\n *   var MyComponent = React.createClass({\n *     render: function() {\n *       return <div>Hello World</div>;\n *     }\n *   });\n *\n * The class specification supports a specific protocol of methods that have\n * special meaning (e.g. `render`). See `ReactClassInterface` for\n * more the comprehensive protocol. Any other properties and methods in the\n * class specification will be available on the prototype.\n *\n * @interface ReactClassInterface\n * @internal\n */\nvar ReactClassInterface = {\n\n  /**\n   * An array of Mixin objects to include when defining your component.\n   *\n   * @type {array}\n   * @optional\n   */\n  mixins: 'DEFINE_MANY',\n\n  /**\n   * An object containing properties and methods that should be defined on\n   * the component's constructor instead of its prototype (static methods).\n   *\n   * @type {object}\n   * @optional\n   */\n  statics: 'DEFINE_MANY',\n\n  /**\n   * Definition of prop types for this component.\n   *\n   * @type {object}\n   * @optional\n   */\n  propTypes: 'DEFINE_MANY',\n\n  /**\n   * Definition of context types for this component.\n   *\n   * @type {object}\n   * @optional\n   */\n  contextTypes: 'DEFINE_MANY',\n\n  /**\n   * Definition of context types this component sets for its children.\n   *\n   * @type {object}\n   * @optional\n   */\n  childContextTypes: 'DEFINE_MANY',\n\n  // ==== Definition methods ====\n\n  /**\n   * Invoked when the component is mounted. Values in the mapping will be set on\n   * `this.props` if that prop is not specified (i.e. using an `in` check).\n   *\n   * This method is invoked before `getInitialState` and therefore cannot rely\n   * on `this.state` or use `this.setState`.\n   *\n   * @return {object}\n   * @optional\n   */\n  getDefaultProps: 'DEFINE_MANY_MERGED',\n\n  /**\n   * Invoked once before the component is mounted. The return value will be used\n   * as the initial value of `this.state`.\n   *\n   *   getInitialState: function() {\n   *     return {\n   *       isOn: false,\n   *       fooBaz: new BazFoo()\n   *     }\n   *   }\n   *\n   * @return {object}\n   * @optional\n   */\n  getInitialState: 'DEFINE_MANY_MERGED',\n\n  /**\n   * @return {object}\n   * @optional\n   */\n  getChildContext: 'DEFINE_MANY_MERGED',\n\n  /**\n   * Uses props from `this.props` and state from `this.state` to render the\n   * structure of the component.\n   *\n   * No guarantees are made about when or how often this method is invoked, so\n   * it must not have side effects.\n   *\n   *   render: function() {\n   *     var name = this.props.name;\n   *     return <div>Hello, {name}!</div>;\n   *   }\n   *\n   * @return {ReactComponent}\n   * @nosideeffects\n   * @required\n   */\n  render: 'DEFINE_ONCE',\n\n  // ==== Delegate methods ====\n\n  /**\n   * Invoked when the component is initially created and about to be mounted.\n   * This may have side effects, but any external subscriptions or data created\n   * by this method must be cleaned up in `componentWillUnmount`.\n   *\n   * @optional\n   */\n  componentWillMount: 'DEFINE_MANY',\n\n  /**\n   * Invoked when the component has been mounted and has a DOM representation.\n   * However, there is no guarantee that the DOM node is in the document.\n   *\n   * Use this as an opportunity to operate on the DOM when the component has\n   * been mounted (initialized and rendered) for the first time.\n   *\n   * @param {DOMElement} rootNode DOM element representing the component.\n   * @optional\n   */\n  componentDidMount: 'DEFINE_MANY',\n\n  /**\n   * Invoked before the component receives new props.\n   *\n   * Use this as an opportunity to react to a prop transition by updating the\n   * state using `this.setState`. Current props are accessed via `this.props`.\n   *\n   *   componentWillReceiveProps: function(nextProps, nextContext) {\n   *     this.setState({\n   *       likesIncreasing: nextProps.likeCount > this.props.likeCount\n   *     });\n   *   }\n   *\n   * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop\n   * transition may cause a state change, but the opposite is not true. If you\n   * need it, you are probably looking for `componentWillUpdate`.\n   *\n   * @param {object} nextProps\n   * @optional\n   */\n  componentWillReceiveProps: 'DEFINE_MANY',\n\n  /**\n   * Invoked while deciding if the component should be updated as a result of\n   * receiving new props, state and/or context.\n   *\n   * Use this as an opportunity to `return false` when you're certain that the\n   * transition to the new props/state/context will not require a component\n   * update.\n   *\n   *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {\n   *     return !equal(nextProps, this.props) ||\n   *       !equal(nextState, this.state) ||\n   *       !equal(nextContext, this.context);\n   *   }\n   *\n   * @param {object} nextProps\n   * @param {?object} nextState\n   * @param {?object} nextContext\n   * @return {boolean} True if the component should update.\n   * @optional\n   */\n  shouldComponentUpdate: 'DEFINE_ONCE',\n\n  /**\n   * Invoked when the component is about to update due to a transition from\n   * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`\n   * and `nextContext`.\n   *\n   * Use this as an opportunity to perform preparation before an update occurs.\n   *\n   * NOTE: You **cannot** use `this.setState()` in this method.\n   *\n   * @param {object} nextProps\n   * @param {?object} nextState\n   * @param {?object} nextContext\n   * @param {ReactReconcileTransaction} transaction\n   * @optional\n   */\n  componentWillUpdate: 'DEFINE_MANY',\n\n  /**\n   * Invoked when the component's DOM representation has been updated.\n   *\n   * Use this as an opportunity to operate on the DOM when the component has\n   * been updated.\n   *\n   * @param {object} prevProps\n   * @param {?object} prevState\n   * @param {?object} prevContext\n   * @param {DOMElement} rootNode DOM element representing the component.\n   * @optional\n   */\n  componentDidUpdate: 'DEFINE_MANY',\n\n  /**\n   * Invoked when the component is about to be removed from its parent and have\n   * its DOM representation destroyed.\n   *\n   * Use this as an opportunity to deallocate any external resources.\n   *\n   * NOTE: There is no `componentDidUnmount` since your component will have been\n   * destroyed by that point.\n   *\n   * @optional\n   */\n  componentWillUnmount: 'DEFINE_MANY',\n\n  // ==== Advanced methods ====\n\n  /**\n   * Updates the component's currently mounted DOM representation.\n   *\n   * By default, this implements React's rendering and reconciliation algorithm.\n   * Sophisticated clients may wish to override this.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   * @overridable\n   */\n  updateComponent: 'OVERRIDE_BASE'\n\n};\n\n/**\n * Mapping from class specification keys to special processing functions.\n *\n * Although these are declared like instance properties in the specification\n * when defining classes using `React.createClass`, they are actually static\n * and are accessible on the constructor instead of the prototype. Despite\n * being static, they must be defined outside of the \"statics\" key under\n * which all other static methods are defined.\n */\nvar RESERVED_SPEC_KEYS = {\n  displayName: function (Constructor, displayName) {\n    Constructor.displayName = displayName;\n  },\n  mixins: function (Constructor, mixins) {\n    if (mixins) {\n      for (var i = 0; i < mixins.length; i++) {\n        mixSpecIntoComponent(Constructor, mixins[i]);\n      }\n    }\n  },\n  childContextTypes: function (Constructor, childContextTypes) {\n    if (process.env.NODE_ENV !== 'production') {\n      validateTypeDef(Constructor, childContextTypes, 'childContext');\n    }\n    Constructor.childContextTypes = _assign({}, Constructor.childContextTypes, childContextTypes);\n  },\n  contextTypes: function (Constructor, contextTypes) {\n    if (process.env.NODE_ENV !== 'production') {\n      validateTypeDef(Constructor, contextTypes, 'context');\n    }\n    Constructor.contextTypes = _assign({}, Constructor.contextTypes, contextTypes);\n  },\n  /**\n   * Special case getDefaultProps which should move into statics but requires\n   * automatic merging.\n   */\n  getDefaultProps: function (Constructor, getDefaultProps) {\n    if (Constructor.getDefaultProps) {\n      Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, getDefaultProps);\n    } else {\n      Constructor.getDefaultProps = getDefaultProps;\n    }\n  },\n  propTypes: function (Constructor, propTypes) {\n    if (process.env.NODE_ENV !== 'production') {\n      validateTypeDef(Constructor, propTypes, 'prop');\n    }\n    Constructor.propTypes = _assign({}, Constructor.propTypes, propTypes);\n  },\n  statics: function (Constructor, statics) {\n    mixStaticSpecIntoComponent(Constructor, statics);\n  },\n  autobind: function () {} };\n\nfunction validateTypeDef(Constructor, typeDef, location) {\n  for (var propName in typeDef) {\n    if (typeDef.hasOwnProperty(propName)) {\n      // use a warning instead of an invariant so components\n      // don't show up in prod but only in __DEV__\n      process.env.NODE_ENV !== 'production' ? warning(typeof typeDef[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', Constructor.displayName || 'ReactClass', ReactPropTypeLocationNames[location], propName) : void 0;\n    }\n  }\n}\n\nfunction validateMethodOverride(isAlreadyDefined, name) {\n  var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;\n\n  // Disallow overriding of base class methods unless explicitly allowed.\n  if (ReactClassMixin.hasOwnProperty(name)) {\n    !(specPolicy === 'OVERRIDE_BASE') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to override `%s` from your class specification. Ensure that your method names do not overlap with React methods.', name) : _prodInvariant('73', name) : void 0;\n  }\n\n  // Disallow defining methods more than once unless explicitly allowed.\n  if (isAlreadyDefined) {\n    !(specPolicy === 'DEFINE_MANY' || specPolicy === 'DEFINE_MANY_MERGED') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('74', name) : void 0;\n  }\n}\n\n/**\n * Mixin helper which handles policy validation and reserved\n * specification keys when building React classes.\n */\nfunction mixSpecIntoComponent(Constructor, spec) {\n  if (!spec) {\n    if (process.env.NODE_ENV !== 'production') {\n      var typeofSpec = typeof spec;\n      var isMixinValid = typeofSpec === 'object' && spec !== null;\n\n      process.env.NODE_ENV !== 'production' ? warning(isMixinValid, '%s: You\\'re attempting to include a mixin that is either null ' + 'or not an object. Check the mixins included by the component, ' + 'as well as any mixins they include themselves. ' + 'Expected object but got %s.', Constructor.displayName || 'ReactClass', spec === null ? null : typeofSpec) : void 0;\n    }\n\n    return;\n  }\n\n  !(typeof spec !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\\'re attempting to use a component class or function as a mixin. Instead, just use a regular object.') : _prodInvariant('75') : void 0;\n  !!ReactElement.isValidElement(spec) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\\'re attempting to use a component as a mixin. Instead, just use a regular object.') : _prodInvariant('76') : void 0;\n\n  var proto = Constructor.prototype;\n  var autoBindPairs = proto.__reactAutoBindPairs;\n\n  // By handling mixins before any other properties, we ensure the same\n  // chaining order is applied to methods with DEFINE_MANY policy, whether\n  // mixins are listed before or after these methods in the spec.\n  if (spec.hasOwnProperty(MIXINS_KEY)) {\n    RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);\n  }\n\n  for (var name in spec) {\n    if (!spec.hasOwnProperty(name)) {\n      continue;\n    }\n\n    if (name === MIXINS_KEY) {\n      // We have already handled mixins in a special case above.\n      continue;\n    }\n\n    var property = spec[name];\n    var isAlreadyDefined = proto.hasOwnProperty(name);\n    validateMethodOverride(isAlreadyDefined, name);\n\n    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {\n      RESERVED_SPEC_KEYS[name](Constructor, property);\n    } else {\n      // Setup methods on prototype:\n      // The following member methods should not be automatically bound:\n      // 1. Expected ReactClass methods (in the \"interface\").\n      // 2. Overridden methods (that were mixed in).\n      var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);\n      var isFunction = typeof property === 'function';\n      var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;\n\n      if (shouldAutoBind) {\n        autoBindPairs.push(name, property);\n        proto[name] = property;\n      } else {\n        if (isAlreadyDefined) {\n          var specPolicy = ReactClassInterface[name];\n\n          // These cases should already be caught by validateMethodOverride.\n          !(isReactClassMethod && (specPolicy === 'DEFINE_MANY_MERGED' || specPolicy === 'DEFINE_MANY')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: Unexpected spec policy %s for key %s when mixing in component specs.', specPolicy, name) : _prodInvariant('77', specPolicy, name) : void 0;\n\n          // For methods which are defined more than once, call the existing\n          // methods before calling the new property, merging if appropriate.\n          if (specPolicy === 'DEFINE_MANY_MERGED') {\n            proto[name] = createMergedResultFunction(proto[name], property);\n          } else if (specPolicy === 'DEFINE_MANY') {\n            proto[name] = createChainedFunction(proto[name], property);\n          }\n        } else {\n          proto[name] = property;\n          if (process.env.NODE_ENV !== 'production') {\n            // Add verbose displayName to the function, which helps when looking\n            // at profiling tools.\n            if (typeof property === 'function' && spec.displayName) {\n              proto[name].displayName = spec.displayName + '_' + name;\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction mixStaticSpecIntoComponent(Constructor, statics) {\n  if (!statics) {\n    return;\n  }\n  for (var name in statics) {\n    var property = statics[name];\n    if (!statics.hasOwnProperty(name)) {\n      continue;\n    }\n\n    var isReserved = name in RESERVED_SPEC_KEYS;\n    !!isReserved ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define a reserved property, `%s`, that shouldn\\'t be on the \"statics\" key. Define it as an instance property instead; it will still be accessible on the constructor.', name) : _prodInvariant('78', name) : void 0;\n\n    var isInherited = name in Constructor;\n    !!isInherited ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('79', name) : void 0;\n    Constructor[name] = property;\n  }\n}\n\n/**\n * Merge two objects, but throw if both contain the same key.\n *\n * @param {object} one The first object, which is mutated.\n * @param {object} two The second object\n * @return {object} one after it has been mutated to contain everything in two.\n */\nfunction mergeIntoWithNoDuplicateKeys(one, two) {\n  !(one && two && typeof one === 'object' && typeof two === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.') : _prodInvariant('80') : void 0;\n\n  for (var key in two) {\n    if (two.hasOwnProperty(key)) {\n      !(one[key] === undefined) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Tried to merge two objects with the same key: `%s`. This conflict may be due to a mixin; in particular, this may be caused by two getInitialState() or getDefaultProps() methods returning objects with clashing keys.', key) : _prodInvariant('81', key) : void 0;\n      one[key] = two[key];\n    }\n  }\n  return one;\n}\n\n/**\n * Creates a function that invokes two functions and merges their return values.\n *\n * @param {function} one Function to invoke first.\n * @param {function} two Function to invoke second.\n * @return {function} Function that invokes the two argument functions.\n * @private\n */\nfunction createMergedResultFunction(one, two) {\n  return function mergedResult() {\n    var a = one.apply(this, arguments);\n    var b = two.apply(this, arguments);\n    if (a == null) {\n      return b;\n    } else if (b == null) {\n      return a;\n    }\n    var c = {};\n    mergeIntoWithNoDuplicateKeys(c, a);\n    mergeIntoWithNoDuplicateKeys(c, b);\n    return c;\n  };\n}\n\n/**\n * Creates a function that invokes two functions and ignores their return vales.\n *\n * @param {function} one Function to invoke first.\n * @param {function} two Function to invoke second.\n * @return {function} Function that invokes the two argument functions.\n * @private\n */\nfunction createChainedFunction(one, two) {\n  return function chainedFunction() {\n    one.apply(this, arguments);\n    two.apply(this, arguments);\n  };\n}\n\n/**\n * Binds a method to the component.\n *\n * @param {object} component Component whose method is going to be bound.\n * @param {function} method Method to be bound.\n * @return {function} The bound method.\n */\nfunction bindAutoBindMethod(component, method) {\n  var boundMethod = method.bind(component);\n  if (process.env.NODE_ENV !== 'production') {\n    boundMethod.__reactBoundContext = component;\n    boundMethod.__reactBoundMethod = method;\n    boundMethod.__reactBoundArguments = null;\n    var componentName = component.constructor.displayName;\n    var _bind = boundMethod.bind;\n    boundMethod.bind = function (newThis) {\n      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      // User is trying to bind() an autobound method; we effectively will\n      // ignore the value of \"this\" that the user is trying to use, so\n      // let's warn.\n      if (newThis !== component && newThis !== null) {\n        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): React component methods may only be bound to the ' + 'component instance. See %s', componentName) : void 0;\n      } else if (!args.length) {\n        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): You are binding a component method to the component. ' + 'React does this for you automatically in a high-performance ' + 'way, so you can safely remove this call. See %s', componentName) : void 0;\n        return boundMethod;\n      }\n      var reboundMethod = _bind.apply(boundMethod, arguments);\n      reboundMethod.__reactBoundContext = component;\n      reboundMethod.__reactBoundMethod = method;\n      reboundMethod.__reactBoundArguments = args;\n      return reboundMethod;\n    };\n  }\n  return boundMethod;\n}\n\n/**\n * Binds all auto-bound methods in a component.\n *\n * @param {object} component Component whose method is going to be bound.\n */\nfunction bindAutoBindMethods(component) {\n  var pairs = component.__reactAutoBindPairs;\n  for (var i = 0; i < pairs.length; i += 2) {\n    var autoBindKey = pairs[i];\n    var method = pairs[i + 1];\n    component[autoBindKey] = bindAutoBindMethod(component, method);\n  }\n}\n\n/**\n * Add more to the ReactClass base class. These are all legacy features and\n * therefore not already part of the modern ReactComponent.\n */\nvar ReactClassMixin = {\n\n  /**\n   * TODO: This will be deprecated because state should always keep a consistent\n   * type signature and the only use case for this, is to avoid that.\n   */\n  replaceState: function (newState, callback) {\n    this.updater.enqueueReplaceState(this, newState);\n    if (callback) {\n      this.updater.enqueueCallback(this, callback, 'replaceState');\n    }\n  },\n\n  /**\n   * Checks whether or not this composite component is mounted.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */\n  isMounted: function () {\n    return this.updater.isMounted(this);\n  }\n};\n\nvar ReactClassComponent = function () {};\n_assign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);\n\n/**\n * Module for creating composite components.\n *\n * @class ReactClass\n */\nvar ReactClass = {\n\n  /**\n   * Creates a composite component class given a class specification.\n   * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass\n   *\n   * @param {object} spec Class specification (which must define `render`).\n   * @return {function} Component constructor function.\n   * @public\n   */\n  createClass: function (spec) {\n    // To keep our warnings more understandable, we'll use a little hack here to\n    // ensure that Constructor.name !== 'Constructor'. This makes sure we don't\n    // unnecessarily identify a class without displayName as 'Constructor'.\n    var Constructor = identity(function (props, context, updater) {\n      // This constructor gets overridden by mocks. The argument is used\n      // by mocks to assert on what gets mounted.\n\n      if (process.env.NODE_ENV !== 'production') {\n        process.env.NODE_ENV !== 'production' ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory') : void 0;\n      }\n\n      // Wire up auto-binding\n      if (this.__reactAutoBindPairs.length) {\n        bindAutoBindMethods(this);\n      }\n\n      this.props = props;\n      this.context = context;\n      this.refs = emptyObject;\n      this.updater = updater || ReactNoopUpdateQueue;\n\n      this.state = null;\n\n      // ReactClasses doesn't have constructors. Instead, they use the\n      // getInitialState and componentWillMount methods for initialization.\n\n      var initialState = this.getInitialState ? this.getInitialState() : null;\n      if (process.env.NODE_ENV !== 'production') {\n        // We allow auto-mocks to proceed as if they're returning null.\n        if (initialState === undefined && this.getInitialState._isMockFunction) {\n          // This is probably bad practice. Consider warning here and\n          // deprecating this convenience.\n          initialState = null;\n        }\n      }\n      !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent') : _prodInvariant('82', Constructor.displayName || 'ReactCompositeComponent') : void 0;\n\n      this.state = initialState;\n    });\n    Constructor.prototype = new ReactClassComponent();\n    Constructor.prototype.constructor = Constructor;\n    Constructor.prototype.__reactAutoBindPairs = [];\n\n    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));\n\n    mixSpecIntoComponent(Constructor, spec);\n\n    // Initialize the defaultProps property after all mixins have been merged.\n    if (Constructor.getDefaultProps) {\n      Constructor.defaultProps = Constructor.getDefaultProps();\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      // This is a tag to indicate that the use of these method names is ok,\n      // since it's used with createClass. If it's not, then it's likely a\n      // mistake so we'll warn you to use the static property, property\n      // initializer or constructor respectively.\n      if (Constructor.getDefaultProps) {\n        Constructor.getDefaultProps.isReactClassApproved = {};\n      }\n      if (Constructor.prototype.getInitialState) {\n        Constructor.prototype.getInitialState.isReactClassApproved = {};\n      }\n    }\n\n    !Constructor.prototype.render ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createClass(...): Class specification must implement a `render` method.') : _prodInvariant('83') : void 0;\n\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', spec.displayName || 'A component') : void 0;\n      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', spec.displayName || 'A component') : void 0;\n    }\n\n    // Reduce time spent doing lookups by setting these on the prototype.\n    for (var methodName in ReactClassInterface) {\n      if (!Constructor.prototype[methodName]) {\n        Constructor.prototype[methodName] = null;\n      }\n    }\n\n    return Constructor;\n  },\n\n  injection: {\n    injectMixin: function (mixin) {\n      injectedMixins.push(mixin);\n    }\n  }\n\n};\n\nmodule.exports = ReactClass;"]}