{"version":3,"sources":["node_modules/remarkable/lib/rules_core/replacements.js"],"names":["RARE_RE","SCOPED_ABBR_RE","SCOPED_ABBR","replaceScopedAbbr","str","indexOf","replace","match","name","toLowerCase","module","exports","state","i","token","text","inlineTokens","blkIdx","options","typographer","tokens","length","type","children","content","test"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,IAAIA,UAAU,8BAAd;;AAEA,IAAIC,iBAAiB,kBAArB;AACA,IAAIC,cAAc;AAChB,OAAK,GADW;AAEhB,OAAK,GAFW;AAGhB,OAAK,GAHW;AAIhB,QAAM;AAJU,CAAlB;;AAOA,SAASC,iBAAT,CAA2BC,GAA3B,EAAgC;AAC9B,MAAIA,IAAIC,OAAJ,CAAY,GAAZ,IAAmB,CAAvB,EAA0B;AAAE,WAAOD,GAAP;AAAa;;AAEzC,SAAOA,IAAIE,OAAJ,CAAYL,cAAZ,EAA4B,UAASM,KAAT,EAAgBC,IAAhB,EAAsB;AACvD,WAAON,YAAYM,KAAKC,WAAL,EAAZ,CAAP;AACD,GAFM,CAAP;AAGD;;AAGDC,OAAOC,OAAP,GAAiB,SAASL,OAAT,CAAiBM,KAAjB,EAAwB;AACvC,MAAIC,CAAJ,EAAOC,KAAP,EAAcC,IAAd,EAAoBC,YAApB,EAAkCC,MAAlC;;AAEA,MAAI,CAACL,MAAMM,OAAN,CAAcC,WAAnB,EAAgC;AAAE;AAAS;;AAE3C,OAAKF,SAASL,MAAMQ,MAAN,CAAaC,MAAb,GAAsB,CAApC,EAAuCJ,UAAU,CAAjD,EAAoDA,QAApD,EAA8D;;AAE5D,QAAIL,MAAMQ,MAAN,CAAaH,MAAb,EAAqBK,IAArB,KAA8B,QAAlC,EAA4C;AAAE;AAAW;;AAEzDN,mBAAeJ,MAAMQ,MAAN,CAAaH,MAAb,EAAqBM,QAApC;;AAEA,SAAKV,IAAIG,aAAaK,MAAb,GAAsB,CAA/B,EAAkCR,KAAK,CAAvC,EAA0CA,GAA1C,EAA+C;AAC7CC,cAAQE,aAAaH,CAAb,CAAR;AACA,UAAIC,MAAMQ,IAAN,KAAe,MAAnB,EAA2B;AACzBP,eAAOD,MAAMU,OAAb;;AAEAT,eAAOZ,kBAAkBY,IAAlB,CAAP;;AAEA,YAAIf,QAAQyB,IAAR,CAAaV,IAAb,CAAJ,EAAwB;AACtBA,iBAAOA,KACJT,OADI,CACI,MADJ,EACY,GADZ;AAEL;AACA;AAHK,WAIJA,OAJI,CAII,SAJJ,EAIe,GAJf,EAIoBA,OAJpB,CAI4B,UAJ5B,EAIwC,MAJxC,EAKJA,OALI,CAKI,aALJ,EAKmB,QALnB,EAK6BA,OAL7B,CAKqC,QALrC,EAK+C,GAL/C;AAML;AANK,WAOJA,OAPI,CAOI,uBAPJ,EAO6B,YAP7B;AAQL;AARK,WASJA,OATI,CASI,kBATJ,EASwB,YATxB,EAUJA,OAVI,CAUI,0BAVJ,EAUgC,YAVhC,CAAP;AAWD;;AAEDQ,cAAMU,OAAN,GAAgBT,IAAhB;AACD;AACF;AACF;AACF,CApCD","file":"replacements.js","sourceRoot":"/Users/liangdong06/work/react-tools","sourcesContent":["// Simple typographical replacements\n//\n'use strict';\n\n// TODO:\n// - fractionals 1/2, 1/4, 3/4 -> ½, ¼, ¾\n// - miltiplication 2 x 4 -> 2 × 4\n\nvar RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/;\n\nvar SCOPED_ABBR_RE = /\\((c|tm|r|p)\\)/ig;\nvar SCOPED_ABBR = {\n  'c': '©',\n  'r': '®',\n  'p': '§',\n  'tm': '™'\n};\n\nfunction replaceScopedAbbr(str) {\n  if (str.indexOf('(') < 0) { return str; }\n\n  return str.replace(SCOPED_ABBR_RE, function(match, name) {\n    return SCOPED_ABBR[name.toLowerCase()];\n  });\n}\n\n\nmodule.exports = function replace(state) {\n  var i, token, text, inlineTokens, blkIdx;\n\n  if (!state.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline') { continue; }\n\n    inlineTokens = state.tokens[blkIdx].children;\n\n    for (i = inlineTokens.length - 1; i >= 0; i--) {\n      token = inlineTokens[i];\n      if (token.type === 'text') {\n        text = token.content;\n\n        text = replaceScopedAbbr(text);\n\n        if (RARE_RE.test(text)) {\n          text = text\n            .replace(/\\+-/g, '±')\n            // .., ..., ....... -> …\n            // but ?..... & !..... -> ?.. & !..\n            .replace(/\\.{2,}/g, '…').replace(/([?!])…/g, '$1..')\n            .replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',')\n            // em-dash\n            .replace(/(^|[^-])---([^-]|$)/mg, '$1\\u2014$2')\n            // en-dash\n            .replace(/(^|\\s)--(\\s|$)/mg, '$1\\u2013$2')\n            .replace(/(^|[^-\\s])--([^-\\s]|$)/mg, '$1\\u2013$2');\n        }\n\n        token.content = text;\n      }\n    }\n  }\n};\n"]}