{"version":3,"sources":["node_modules/webpack-hot-middleware/node_modules/ansi-html/index.js"],"names":["module","exports","ansiHTML","_regANSI","_defColors","reset","black","red","green","yellow","blue","magenta","cyan","lightgrey","darkgrey","_styles","_openTags","_closeTags","forEach","n","text","test","ansiCodes","ret","replace","match","seq","ot","indexOf","pop","push","ct","l","length","Array","join","setColors","colors","Error","_finalColors","key","hex","hasOwnProperty","isArray","some","h","defHexColor","slice","_setTags","tags","Object","defineProperty","get","open","close","code","color","oriColor","parseInt","toString"],"mappings":"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","file":"index.js","sourceRoot":"/Users/liangdong06/work/react-tools","sourcesContent":["'use strict'\n\nmodule.exports = ansiHTML\n\n// Reference to https://github.com/sindresorhus/ansi-regex\nvar _regANSI = /(?:(?:\\u001b\\[)|\\u009b)(?:(?:[0-9]{1,3})?(?:(?:;[0-9]{0,3})*)?[A-M|f-m])|\\u001b[A-M]/\n\nvar _defColors = {\n  reset: ['fff', '000'], // [FOREGROUD_COLOR, BACKGROUND_COLOR]\n  black: '000',\n  red: 'ff0000',\n  green: '209805',\n  yellow: 'e8bf03',\n  blue: '0000ff',\n  magenta: 'ff00ff',\n  cyan: '00ffee',\n  lightgrey: 'f0f0f0',\n  darkgrey: '888'\n}\nvar _styles = {\n  30: 'black',\n  31: 'red',\n  32: 'green',\n  33: 'yellow',\n  34: 'blue',\n  35: 'magenta',\n  36: 'cyan',\n  37: 'lightgrey'\n}\nvar _openTags = {\n  '1': 'font-weight:bold', // bold\n  '2': 'opacity:0.8', // dim\n  '3': '<i>', // italic\n  '4': '<u>', // underscore\n  '8': 'display:none', // hidden\n  '9': '<del>' // delete\n}\nvar _closeTags = {\n  '23': '</i>', // reset italic\n  '24': '</u>', // reset underscore\n  '29': '</del>' // reset delete\n}\n\n;[0, 21, 22, 27, 28, 39, 49].forEach(function (n) {\n  _closeTags[n] = '</span>'\n})\n\n/**\n * Converts text with ANSI color codes to HTML markup.\n * @param {String} text\n * @returns {*}\n */\nfunction ansiHTML (text) {\n  // Returns the text if the string has no ANSI escape code.\n  if (!_regANSI.test(text)) {\n    return text\n  }\n\n  // Cache opened sequence.\n  var ansiCodes = []\n  // Replace with markup.\n  var ret = text.replace(/\\033\\[(\\d+)*m/g, function (match, seq) {\n    var ot = _openTags[seq]\n    if (ot) {\n      // If current sequence has been opened, close it.\n      if (!!~ansiCodes.indexOf(seq)) { // eslint-disable-line no-extra-boolean-cast\n        ansiCodes.pop()\n        return '</span>'\n      }\n      // Open tag.\n      ansiCodes.push(seq)\n      return ot[0] === '<' ? ot : '<span style=\"' + ot + ';\">'\n    }\n\n    var ct = _closeTags[seq]\n    if (ct) {\n      // Pop sequence\n      ansiCodes.pop()\n      return ct\n    }\n    return ''\n  })\n\n  // Make sure tags are closed.\n  var l = ansiCodes.length\n  ;(l > 0) && (ret += Array(l + 1).join('</span>'))\n\n  return ret\n}\n\n/**\n * Customize colors.\n * @param {Object} colors reference to _defColors\n */\nansiHTML.setColors = function (colors) {\n  if (typeof colors !== 'object') {\n    throw new Error('`colors` parameter must be an Object.')\n  }\n\n  var _finalColors = {}\n  for (var key in _defColors) {\n    var hex = colors.hasOwnProperty(key) ? colors[key] : null\n    if (!hex) {\n      _finalColors[key] = _defColors[key]\n      continue\n    }\n    if ('reset' === key) {\n      if (typeof hex === 'string') {\n        hex = [hex]\n      }\n      if (!Array.isArray(hex) || hex.length === 0 || hex.some(function (h) {\n        return typeof h !== 'string'\n      })) {\n        throw new Error('The value of `' + key + '` property must be an Array and each item could only be a hex string, e.g.: FF0000')\n      }\n      var defHexColor = _defColors[key]\n      if (!hex[0]) {\n        hex[0] = defHexColor[0]\n      }\n      if (hex.length === 1 || !hex[1]) {\n        hex = [hex[0]]\n        hex.push(defHexColor[1])\n      }\n\n      hex = hex.slice(0, 2)\n    } else if (typeof hex !== 'string') {\n      throw new Error('The value of `' + key + '` property must be a hex string, e.g.: FF0000')\n    }\n    _finalColors[key] = hex\n  }\n  _setTags(_finalColors)\n}\n\n/**\n * Reset colors.\n */\nansiHTML.reset = function () {\n  _setTags(_defColors)\n}\n\n/**\n * Expose tags, including open and close.\n * @type {Object}\n */\nansiHTML.tags = {}\n\nif (Object.defineProperty) {\n  Object.defineProperty(ansiHTML.tags, 'open', {\n    get: function () { return _openTags }\n  })\n  Object.defineProperty(ansiHTML.tags, 'close', {\n    get: function () { return _closeTags }\n  })\n} else {\n  ansiHTML.tags.open = _openTags\n  ansiHTML.tags.close = _closeTags\n}\n\nfunction _setTags (colors) {\n  // reset all\n  _openTags['0'] = 'font-weight:normal;opacity:1;color:#' + colors.reset[0] + ';background:#' + colors.reset[1]\n  // inverse\n  _openTags['7'] = 'color:#' + colors.reset[1] + ';background:#' + colors.reset[0]\n  // dark grey\n  _openTags['90'] = 'color:#' + colors.darkgrey\n\n  for (var code in _styles) {\n    var color = _styles[code]\n    var oriColor = colors[color] || '000'\n    _openTags[code] = 'color:#' + oriColor\n    code = parseInt(code)\n    _openTags[(code + 10).toString()] = 'background:#' + oriColor\n  }\n}\n\nansiHTML.reset()\n"]}