{"version":3,"sources":["node_modules/core-js/modules/es6.typed.array-buffer.js"],"names":["$export","require","$typed","buffer","anObject","toIndex","toLength","isObject","ArrayBuffer","speciesConstructor","$ArrayBuffer","$DataView","DataView","$isView","ABV","isView","$slice","prototype","slice","VIEW","ARRAY_BUFFER","G","W","F","S","CONSTR","it","P","U","undefined","byteLength","start","end","call","len","first","final","result","viewS","viewT","index","setUint8","getUint8"],"mappings":"AAAA;;AACA,IAAIA,UAAeC,QAAQ,WAAR,CAAnB;AAAA,IACIC,SAAeD,QAAQ,UAAR,CADnB;AAAA,IAEIE,SAAeF,QAAQ,iBAAR,CAFnB;AAAA,IAGIG,WAAeH,QAAQ,cAAR,CAHnB;AAAA,IAIII,UAAeJ,QAAQ,aAAR,CAJnB;AAAA,IAKIK,WAAeL,QAAQ,cAAR,CALnB;AAAA,IAMIM,WAAeN,QAAQ,cAAR,CANnB;AAAA,IAOIO,cAAeP,QAAQ,WAAR,EAAqBO,WAPxC;AAAA,IAQIC,qBAAqBR,QAAQ,wBAAR,CARzB;AAAA,IASIS,eAAeP,OAAOK,WAT1B;AAAA,IAUIG,YAAeR,OAAOS,QAV1B;AAAA,IAWIC,UAAeX,OAAOY,GAAP,IAAcN,YAAYO,MAX7C;AAAA,IAYIC,SAAeN,aAAaO,SAAb,CAAuBC,KAZ1C;AAAA,IAaIC,OAAejB,OAAOiB,IAb1B;AAAA,IAcIC,eAAe,aAdnB;;AAgBApB,QAAQA,QAAQqB,CAAR,GAAYrB,QAAQsB,CAApB,GAAwBtB,QAAQuB,CAAR,IAAaf,gBAAgBE,YAA7B,CAAhC,EAA4E,EAACF,aAAaE,YAAd,EAA5E;;AAEAV,QAAQA,QAAQwB,CAAR,GAAYxB,QAAQuB,CAAR,GAAY,CAACrB,OAAOuB,MAAxC,EAAgDL,YAAhD,EAA8D;AAC5D;AACAL,UAAQ,SAASA,MAAT,CAAgBW,EAAhB,EAAmB;AACzB,WAAOb,WAAWA,QAAQa,EAAR,CAAX,IAA0BnB,SAASmB,EAAT,KAAgBP,QAAQO,EAAzD;AACD;AAJ2D,CAA9D;;AAOA1B,QAAQA,QAAQ2B,CAAR,GAAY3B,QAAQ4B,CAApB,GAAwB5B,QAAQuB,CAAR,GAAYtB,QAAQ,UAAR,EAAoB,YAAU;AACxE,SAAO,CAAC,IAAIS,YAAJ,CAAiB,CAAjB,EAAoBQ,KAApB,CAA0B,CAA1B,EAA6BW,SAA7B,EAAwCC,UAAhD;AACD,CAF2C,CAA5C,EAEIV,YAFJ,EAEkB;AAChB;AACAF,SAAO,SAASA,KAAT,CAAea,KAAf,EAAsBC,GAAtB,EAA0B;AAC/B,QAAGhB,WAAWa,SAAX,IAAwBG,QAAQH,SAAnC,EAA6C,OAAOb,OAAOiB,IAAP,CAAY7B,SAAS,IAAT,CAAZ,EAA4B2B,KAA5B,CAAP,CADd,CACyD;AACxF,QAAIG,MAAS9B,SAAS,IAAT,EAAe0B,UAA5B;AAAA,QACIK,QAAS9B,QAAQ0B,KAAR,EAAeG,GAAf,CADb;AAAA,QAEIE,QAAS/B,QAAQ2B,QAAQH,SAAR,GAAoBK,GAApB,GAA0BF,GAAlC,EAAuCE,GAAvC,CAFb;AAAA,QAGIG,SAAS,KAAK5B,mBAAmB,IAAnB,EAAyBC,YAAzB,CAAL,EAA6CJ,SAAS8B,QAAQD,KAAjB,CAA7C,CAHb;AAAA,QAIIG,QAAS,IAAI3B,SAAJ,CAAc,IAAd,CAJb;AAAA,QAKI4B,QAAS,IAAI5B,SAAJ,CAAc0B,MAAd,CALb;AAAA,QAMIG,QAAS,CANb;AAOA,WAAML,QAAQC,KAAd,EAAoB;AAClBG,YAAME,QAAN,CAAeD,OAAf,EAAwBF,MAAMI,QAAN,CAAeP,OAAf,CAAxB;AACD,KAAC,OAAOE,MAAP;AACH;AAde,CAFlB;;AAmBApC,QAAQ,gBAAR,EAA0BmB,YAA1B","file":"es6.typed.array-buffer.js","sourceRoot":"/Users/liangdong06/work/react-tools","sourcesContent":["'use strict';\nvar $export      = require('./_export')\n  , $typed       = require('./_typed')\n  , buffer       = require('./_typed-buffer')\n  , anObject     = require('./_an-object')\n  , toIndex      = require('./_to-index')\n  , toLength     = require('./_to-length')\n  , isObject     = require('./_is-object')\n  , ArrayBuffer  = require('./_global').ArrayBuffer\n  , speciesConstructor = require('./_species-constructor')\n  , $ArrayBuffer = buffer.ArrayBuffer\n  , $DataView    = buffer.DataView\n  , $isView      = $typed.ABV && ArrayBuffer.isView\n  , $slice       = $ArrayBuffer.prototype.slice\n  , VIEW         = $typed.VIEW\n  , ARRAY_BUFFER = 'ArrayBuffer';\n\n$export($export.G + $export.W + $export.F * (ArrayBuffer !== $ArrayBuffer), {ArrayBuffer: $ArrayBuffer});\n\n$export($export.S + $export.F * !$typed.CONSTR, ARRAY_BUFFER, {\n  // 24.1.3.1 ArrayBuffer.isView(arg)\n  isView: function isView(it){\n    return $isView && $isView(it) || isObject(it) && VIEW in it;\n  }\n});\n\n$export($export.P + $export.U + $export.F * require('./_fails')(function(){\n  return !new $ArrayBuffer(2).slice(1, undefined).byteLength;\n}), ARRAY_BUFFER, {\n  // 24.1.4.3 ArrayBuffer.prototype.slice(start, end)\n  slice: function slice(start, end){\n    if($slice !== undefined && end === undefined)return $slice.call(anObject(this), start); // FF fix\n    var len    = anObject(this).byteLength\n      , first  = toIndex(start, len)\n      , final  = toIndex(end === undefined ? len : end, len)\n      , result = new (speciesConstructor(this, $ArrayBuffer))(toLength(final - first))\n      , viewS  = new $DataView(this)\n      , viewT  = new $DataView(result)\n      , index  = 0;\n    while(first < final){\n      viewT.setUint8(index++, viewS.getUint8(first++));\n    } return result;\n  }\n});\n\nrequire('./_set-species')(ARRAY_BUFFER);"]}