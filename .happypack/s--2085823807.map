{"version":3,"sources":["node_modules/highlight.js/lib/languages/nix.js"],"names":["module","exports","hljs","NIX_KEYWORDS","keyword","literal","built_in","ANTIQUOTE","className","begin","end","keywords","ATTRS","returnBegin","relevance","contains","STRING","variants","EXPRESSIONS","NUMBER_MODE","HASH_COMMENT_MODE","C_BLOCK_COMMENT_MODE","aliases"],"mappings":";;AAAAA,OAAOC,OAAP,GAAiB,UAASC,IAAT,EAAe;AAC9B,MAAIC,eAAe;AACjBC,aACE,6CAFe;AAGjBC,aACE,wBAJe;AAKjBC,cACE,yEACA;AAPe,GAAnB;AASA,MAAIC,YAAY;AACdC,eAAW,OADG;AAEdC,WAAO,MAFO;AAGdC,SAAK,GAHS;AAIdC,cAAUR;AAJI,GAAhB;AAMA,MAAIS,QAAQ;AACVH,WAAO,sBADG,EACqBI,aAAa,IADlC;AAEVC,eAAW,CAFD;AAGVC,cAAU,CACR;AACEP,iBAAW,MADb;AAEEC,aAAO;AAFT,KADQ;AAHA,GAAZ;AAUA,MAAIO,SAAS;AACXR,eAAW,QADA;AAEXO,cAAU,CAACR,SAAD,CAFC;AAGXU,cAAU,CACR,EAACR,OAAO,IAAR,EAAcC,KAAK,IAAnB,EADQ,EAER,EAACD,OAAO,GAAR,EAAaC,KAAK,GAAlB,EAFQ;AAHC,GAAb;AAQA,MAAIQ,cAAc,CAChBhB,KAAKiB,WADW,EAEhBjB,KAAKkB,iBAFW,EAGhBlB,KAAKmB,oBAHW,EAIhBL,MAJgB,EAKhBJ,KALgB,CAAlB;AAOAL,YAAUQ,QAAV,GAAqBG,WAArB;AACA,SAAO;AACLI,aAAS,CAAC,OAAD,CADJ;AAELX,cAAUR,YAFL;AAGLY,cAAUG;AAHL,GAAP;AAKD,CA/CD","file":"nix.js","sourceRoot":"/Users/liangdong06/work/react-tools","sourcesContent":["module.exports = function(hljs) {\n  var NIX_KEYWORDS = {\n    keyword:\n      'rec with let in inherit assert if else then',\n    literal:\n      'true false or and null',\n    built_in:\n      'import abort baseNameOf dirOf isNull builtins map removeAttrs throw ' +\n      'toString derivation'\n  };\n  var ANTIQUOTE = {\n    className: 'subst',\n    begin: /\\$\\{/,\n    end: /}/,\n    keywords: NIX_KEYWORDS\n  };\n  var ATTRS = {\n    begin: /[a-zA-Z0-9-_]+(\\s*=)/, returnBegin: true,\n    relevance: 0,\n    contains: [\n      {\n        className: 'attr',\n        begin: /\\S+/\n      }\n    ]\n  };\n  var STRING = {\n    className: 'string',\n    contains: [ANTIQUOTE],\n    variants: [\n      {begin: \"''\", end: \"''\"},\n      {begin: '\"', end: '\"'}\n    ]\n  };\n  var EXPRESSIONS = [\n    hljs.NUMBER_MODE,\n    hljs.HASH_COMMENT_MODE,\n    hljs.C_BLOCK_COMMENT_MODE,\n    STRING,\n    ATTRS\n  ];\n  ANTIQUOTE.contains = EXPRESSIONS;\n  return {\n    aliases: [\"nixos\"],\n    keywords: NIX_KEYWORDS,\n    contains: EXPRESSIONS\n  };\n};"]}