{"version":3,"sources":["node_modules/react-highlight/node_modules/highlight.js/lib/languages/step21.js"],"names":["module","exports","hljs","STEP21_IDENT_RE","STEP21_KEYWORDS","keyword","STEP21_START","className","begin","relevance","STEP21_CLOSE","aliases","case_insensitive","lexemes","keywords","contains","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","COMMENT","C_NUMBER_MODE","inherit","APOS_STRING_MODE","illegal","QUOTE_STRING_MODE","end","variants"],"mappings":";;AAAAA,OAAOC,OAAP,GAAiB,UAASC,IAAT,EAAe;AAC9B,MAAIC,kBAAkB,mBAAtB;AACA,MAAIC,kBAAkB;AACpBC,aAAS;AADW,GAAtB;AAGA,MAAIC,eAAe;AACjBC,eAAW,MADM;AAEjBC,WAAO,eAFU;AAGjBC,eAAW;AAHM,GAAnB;AAKA,MAAIC,eAAe;AACjBH,eAAW,MADM;AAEjBC,WAAO,mBAFU;AAGjBC,eAAW;AAHM,GAAnB;;AAMA,SAAO;AACLE,aAAS,CAAC,KAAD,EAAQ,MAAR,EAAgB,KAAhB,CADJ;AAELC,sBAAkB,IAFb,EAEmB;AACxBC,aAASV,eAHJ;AAILW,cAAUV,eAJL;AAKLW,cAAU,CACRT,YADQ,EAERI,YAFQ,EAGRR,KAAKc,mBAHG,EAIRd,KAAKe,oBAJG,EAKRf,KAAKgB,OAAL,CAAa,UAAb,EAAyB,MAAzB,CALQ,EAMRhB,KAAKiB,aANG,EAORjB,KAAKkB,OAAL,CAAalB,KAAKmB,gBAAlB,EAAoC,EAACC,SAAS,IAAV,EAApC,CAPQ,EAQRpB,KAAKkB,OAAL,CAAalB,KAAKqB,iBAAlB,EAAqC,EAACD,SAAS,IAAV,EAArC,CARQ,EASR;AACEf,iBAAW,QADb;AAEEC,aAAO,GAFT,EAEcgB,KAAK;AAFnB,KATQ,EAaR;AACEjB,iBAAW,QADb;AAEEkB,gBAAU,CACR;AACEjB,eAAO,GADT,EACcgB,KAAK,MADnB;AAEEF,iBAAS;AAFX,OADQ;AAFZ,KAbQ;AALL,GAAP;AA6BD,CA7CD","file":"step21.js","sourceRoot":"/Users/liangdong06/work/react-tools","sourcesContent":["module.exports = function(hljs) {\n  var STEP21_IDENT_RE = '[A-Z_][A-Z0-9_.]*';\n  var STEP21_KEYWORDS = {\n    keyword: 'HEADER ENDSEC DATA'\n  };\n  var STEP21_START = {\n    className: 'meta',\n    begin: 'ISO-10303-21;',\n    relevance: 10\n  };\n  var STEP21_CLOSE = {\n    className: 'meta',\n    begin: 'END-ISO-10303-21;',\n    relevance: 10\n  };\n\n  return {\n    aliases: ['p21', 'step', 'stp'],\n    case_insensitive: true, // STEP 21 is case insensitive in theory, in practice all non-comments are capitalized.\n    lexemes: STEP21_IDENT_RE,\n    keywords: STEP21_KEYWORDS,\n    contains: [\n      STEP21_START,\n      STEP21_CLOSE,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.COMMENT('/\\\\*\\\\*!', '\\\\*/'),\n      hljs.C_NUMBER_MODE,\n      hljs.inherit(hljs.APOS_STRING_MODE, {illegal: null}),\n      hljs.inherit(hljs.QUOTE_STRING_MODE, {illegal: null}),\n      {\n        className: 'string',\n        begin: \"'\", end: \"'\"\n      },\n      {\n        className: 'symbol',\n        variants: [\n          {\n            begin: '#', end: '\\\\d+',\n            illegal: '\\\\W'\n          }\n        ]\n      }\n    ]\n  };\n};"]}