{"version":3,"sources":["node_modules/remarkable/lib/renderer.js"],"names":["utils","require","rules","module","exports","Renderer","assign","getBreak","prototype","renderInline","tokens","options","env","_rules","len","length","i","result","type","render","children"],"mappings":"AAAA;;AAEA;;;;AAIA,IAAIA,QAAQC,QAAQ,gBAAR,CAAZ;AACA,IAAIC,QAAQD,QAAQ,SAAR,CAAZ;;AAEA;;;;AAIAE,OAAOC,OAAP,GAAiBC,QAAjB;;AAEA;;;;;AAKA,SAASA,QAAT,GAAoB;AAClB,OAAKH,KAAL,GAAaF,MAAMM,MAAN,CAAa,EAAb,EAAiBJ,KAAjB,CAAb;;AAEA;AACA,OAAKK,QAAL,GAAgBL,MAAMK,QAAtB;AACD;;AAED;;;;;;;;;;;AAWAF,SAASG,SAAT,CAAmBC,YAAnB,GAAkC,UAAUC,MAAV,EAAkBC,OAAlB,EAA2BC,GAA3B,EAAgC;AAChE,MAAIC,SAAS,KAAKX,KAAlB;AACA,MAAIY,MAAMJ,OAAOK,MAAjB;AAAA,MAAyBC,IAAI,CAA7B;AACA,MAAIC,SAAS,EAAb;;AAEA,SAAOH,KAAP,EAAc;AACZG,cAAUJ,OAAOH,OAAOM,CAAP,EAAUE,IAAjB,EAAuBR,MAAvB,EAA+BM,GAA/B,EAAoCL,OAApC,EAA6CC,GAA7C,EAAkD,IAAlD,CAAV;AACD;;AAED,SAAOK,MAAP;AACD,CAVD;;AAYA;;;;;;;;;;;AAWAZ,SAASG,SAAT,CAAmBW,MAAnB,GAA4B,UAAUT,MAAV,EAAkBC,OAAlB,EAA2BC,GAA3B,EAAgC;AAC1D,MAAIC,SAAS,KAAKX,KAAlB;AACA,MAAIY,MAAMJ,OAAOK,MAAjB;AAAA,MAAyBC,IAAI,CAAC,CAA9B;AACA,MAAIC,SAAS,EAAb;;AAEA,SAAO,EAAED,CAAF,GAAMF,GAAb,EAAkB;AAChB,QAAIJ,OAAOM,CAAP,EAAUE,IAAV,KAAmB,QAAvB,EAAiC;AAC/BD,gBAAU,KAAKR,YAAL,CAAkBC,OAAOM,CAAP,EAAUI,QAA5B,EAAsCT,OAAtC,EAA+CC,GAA/C,CAAV;AACD,KAFD,MAEO;AACLK,gBAAUJ,OAAOH,OAAOM,CAAP,EAAUE,IAAjB,EAAuBR,MAAvB,EAA+BM,CAA/B,EAAkCL,OAAlC,EAA2CC,GAA3C,EAAgD,IAAhD,CAAV;AACD;AACF;AACD,SAAOK,MAAP;AACD,CAbD","file":"renderer.js","sourceRoot":"/Users/liangdong06/work/react-tools","sourcesContent":["'use strict';\n\n/**\n * Local dependencies\n */\n\nvar utils = require('./common/utils');\nvar rules = require('./rules');\n\n/**\n * Expose `Renderer`\n */\n\nmodule.exports = Renderer;\n\n/**\n * Renderer class. Renders HTML and exposes `rules` to allow\n * local modifications.\n */\n\nfunction Renderer() {\n  this.rules = utils.assign({}, rules);\n\n  // exported helper, for custom rules only\n  this.getBreak = rules.getBreak;\n}\n\n/**\n * Render a string of inline HTML with the given `tokens` and\n * `options`.\n *\n * @param  {Array} `tokens`\n * @param  {Object} `options`\n * @param  {Object} `env`\n * @return {String}\n * @api public\n */\n\nRenderer.prototype.renderInline = function (tokens, options, env) {\n  var _rules = this.rules;\n  var len = tokens.length, i = 0;\n  var result = '';\n\n  while (len--) {\n    result += _rules[tokens[i].type](tokens, i++, options, env, this);\n  }\n\n  return result;\n};\n\n/**\n * Render a string of HTML with the given `tokens` and\n * `options`.\n *\n * @param  {Array} `tokens`\n * @param  {Object} `options`\n * @param  {Object} `env`\n * @return {String}\n * @api public\n */\n\nRenderer.prototype.render = function (tokens, options, env) {\n  var _rules = this.rules;\n  var len = tokens.length, i = -1;\n  var result = '';\n\n  while (++i < len) {\n    if (tokens[i].type === 'inline') {\n      result += this.renderInline(tokens[i].children, options, env);\n    } else {\n      result += _rules[tokens[i].type](tokens, i, options, env, this);\n    }\n  }\n  return result;\n};\n"]}