{"version":3,"sources":["node_modules/babel-polyfill/node_modules/regenerator-runtime/runtime.js"],"names":["global","Op","Object","prototype","hasOwn","hasOwnProperty","undefined","$Symbol","Symbol","iteratorSymbol","iterator","toStringTagSymbol","toStringTag","inModule","module","runtime","regeneratorRuntime","exports","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","makeInvokeMethod","tryCatch","fn","obj","arg","type","call","err","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","constructor","displayName","defineIteratorMethods","forEach","method","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","__await","AsyncIterator","invoke","resolve","reject","record","result","value","Promise","then","unwrapped","process","domain","bind","previousPromise","enqueue","callInvokeWithMethodAndArg","async","iter","next","done","state","Error","doneResult","delegate","returnMethod","info","resultName","nextLoc","sent","_sent","dispatchException","abrupt","toString","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","keys","object","key","reverse","length","pop","iterable","iteratorMethod","isNaN","i","skipTempReset","prev","charAt","slice","stop","rootEntry","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","window"],"mappings":"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","file":"runtime.js","sourceRoot":"/Users/liangdong06/work/react-tools","sourcesContent":["/**\n * Copyright (c) 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * https://raw.github.com/facebook/regenerator/master/LICENSE file. An\n * additional grant of patent rights can be found in the PATENTS file in\n * the same directory.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    if (typeof process === \"object\" && process.domain) {\n      invoke = process.domain.bind(invoke);\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          if (method === \"return\" ||\n              (method === \"throw\" && delegate.iterator[method] === undefined)) {\n            // A return or throw (when the delegate iterator has no throw\n            // method) always terminates the yield* loop.\n            context.delegate = null;\n\n            // If the delegate iterator has a return method, give it a\n            // chance to clean up.\n            var returnMethod = delegate.iterator[\"return\"];\n            if (returnMethod) {\n              var record = tryCatch(returnMethod, delegate.iterator, arg);\n              if (record.type === \"throw\") {\n                // If the return method threw an exception, let that\n                // exception prevail over the original return or throw.\n                method = \"throw\";\n                arg = record.arg;\n                continue;\n              }\n            }\n\n            if (method === \"return\") {\n              // Continue with the outer return, now that the delegate\n              // iterator has been terminated.\n              continue;\n            }\n          }\n\n          var record = tryCatch(\n            delegate.iterator[method],\n            delegate.iterator,\n            arg\n          );\n\n          if (record.type === \"throw\") {\n            context.delegate = null;\n\n            // Like returning generator.throw(uncaught), but without the\n            // overhead of an extra function call.\n            method = \"throw\";\n            arg = record.arg;\n            continue;\n          }\n\n          // Delegate generator ran and handled its own exceptions so\n          // regardless of what the method was, we continue as if it is\n          // \"next\" with an undefined arg.\n          method = \"next\";\n          arg = undefined;\n\n          var info = record.arg;\n          if (info.done) {\n            context[delegate.resultName] = info.value;\n            context.next = delegate.nextLoc;\n          } else {\n            state = GenStateSuspendedYield;\n            return info;\n          }\n\n          context.delegate = null;\n        }\n\n        if (method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = arg;\n\n        } else if (method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw arg;\n          }\n\n          if (context.dispatchException(arg)) {\n            // If the dispatched exception was caught by a catch block,\n            // then let that catch block handle the exception normally.\n            method = \"next\";\n            arg = undefined;\n          }\n\n        } else if (method === \"return\") {\n          context.abrupt(\"return\", arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          var info = {\n            value: record.arg,\n            done: context.done\n          };\n\n          if (record.arg === ContinueSentinel) {\n            if (context.delegate && method === \"next\") {\n              // Deliberately forget the last sent value so that we don't\n              // accidentally pass it on to the delegate.\n              arg = undefined;\n            }\n          } else {\n            return info;\n          }\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(arg) call above.\n          method = \"throw\";\n          arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n        return !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.next = finallyEntry.finallyLoc;\n      } else {\n        this.complete(record);\n      }\n\n      return ContinueSentinel;\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = record.arg;\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // Among the various tricks for obtaining a reference to the global\n  // object, this seems to be the most reliable technique that does not\n  // use indirect eval (which violates Content Security Policy).\n  typeof global === \"object\" ? global :\n  typeof window === \"object\" ? window :\n  typeof self === \"object\" ? self : this\n);\n"]}