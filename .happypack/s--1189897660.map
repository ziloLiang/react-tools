{"version":3,"sources":["node_modules/remarkable/lib/rules_inline/escape.js"],"names":["ESCAPED","i","push","split","forEach","ch","charCodeAt","module","exports","escape","state","silent","pos","max","posMax","src","pending","type","level"],"mappings":"AAAA;;AAEA;;AAEA,IAAIA,UAAU,EAAd;;AAEA,KAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAI,GAApB,EAAyBA,GAAzB,EAA8B;AAAED,UAAQE,IAAR,CAAa,CAAb;AAAkB;;AAElD,qCACGC,KADH,CACS,EADT,EACaC,OADb,CACqB,UAASC,EAAT,EAAa;AAAEL,UAAQK,GAAGC,UAAH,CAAc,CAAd,CAAR,IAA4B,CAA5B;AAAgC,CADpE;;AAIAC,OAAOC,OAAP,GAAiB,SAASC,MAAT,CAAgBC,KAAhB,EAAuBC,MAAvB,EAA+B;AAC9C,MAAIN,EAAJ;AAAA,MAAQO,MAAMF,MAAME,GAApB;AAAA,MAAyBC,MAAMH,MAAMI,MAArC;;AAEA,MAAIJ,MAAMK,GAAN,CAAUT,UAAV,CAAqBM,GAArB,MAA8B,IAAlC,CAAsC,OAAtC,EAA+C;AAAE,aAAO,KAAP;AAAe;;AAEhEA;;AAEA,MAAIA,MAAMC,GAAV,EAAe;AACbR,SAAKK,MAAMK,GAAN,CAAUT,UAAV,CAAqBM,GAArB,CAAL;;AAEA,QAAIP,KAAK,GAAL,IAAYL,QAAQK,EAAR,MAAgB,CAAhC,EAAmC;AACjC,UAAI,CAACM,MAAL,EAAa;AAAED,cAAMM,OAAN,IAAiBN,MAAMK,GAAN,CAAUH,GAAV,CAAjB;AAAkC;AACjDF,YAAME,GAAN,IAAa,CAAb;AACA,aAAO,IAAP;AACD;;AAED,QAAIP,OAAO,IAAX,EAAiB;AACf,UAAI,CAACM,MAAL,EAAa;AACXD,cAAMR,IAAN,CAAW;AACTe,gBAAM,WADG;AAETC,iBAAOR,MAAMQ;AAFJ,SAAX;AAID;;AAEDN;AACA;AACA,aAAOA,MAAMC,GAAN,IAAaH,MAAMK,GAAN,CAAUT,UAAV,CAAqBM,GAArB,MAA8B,IAAlD,EAAwD;AAAEA;AAAQ;;AAElEF,YAAME,GAAN,GAAYA,GAAZ;AACA,aAAO,IAAP;AACD;AACF;;AAED,MAAI,CAACD,MAAL,EAAa;AAAED,UAAMM,OAAN,IAAiB,IAAjB;AAAwB;AACvCN,QAAME,GAAN;AACA,SAAO,IAAP;AACD,CApCD","file":"escape.js","sourceRoot":"/Users/liangdong06/work/react-tools","sourcesContent":["// Proceess escaped chars and hardbreaks\n\n'use strict';\n\nvar ESCAPED = [];\n\nfor (var i = 0; i < 256; i++) { ESCAPED.push(0); }\n\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'\n  .split('').forEach(function(ch) { ESCAPED[ch.charCodeAt(0)] = 1; });\n\n\nmodule.exports = function escape(state, silent) {\n  var ch, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x5C/* \\ */) { return false; }\n\n  pos++;\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch < 256 && ESCAPED[ch] !== 0) {\n      if (!silent) { state.pending += state.src[pos]; }\n      state.pos += 2;\n      return true;\n    }\n\n    if (ch === 0x0A) {\n      if (!silent) {\n        state.push({\n          type: 'hardbreak',\n          level: state.level\n        });\n      }\n\n      pos++;\n      // skip leading whitespaces from next line\n      while (pos < max && state.src.charCodeAt(pos) === 0x20) { pos++; }\n\n      state.pos = pos;\n      return true;\n    }\n  }\n\n  if (!silent) { state.pending += '\\\\'; }\n  state.pos++;\n  return true;\n};\n"]}