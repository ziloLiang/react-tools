{"version":3,"sources":["node_modules/react-highlight/node_modules/highlight.js/lib/languages/fsharp.js"],"names":["module","exports","hljs","TYPEPARAM","begin","end","contains","inherit","TITLE_MODE","aliases","keywords","illegal","className","COMMENT","beginKeywords","excludeEnd","UNDERSCORE_TITLE_MODE","relevance","BACKSLASH_ESCAPE","C_LINE_COMMENT_MODE","QUOTE_STRING_MODE","C_NUMBER_MODE"],"mappings":";;AAAAA,OAAOC,OAAP,GAAiB,UAASC,IAAT,EAAe;AAC9B,MAAIC,YAAY;AACdC,WAAO,GADO,EACFC,KAAK,GADH;AAEdC,cAAU,CACRJ,KAAKK,OAAL,CAAaL,KAAKM,UAAlB,EAA8B,EAACJ,OAAO,gBAAR,EAA9B,CADQ;AAFI,GAAhB;;AAOA,SAAO;AACLK,aAAS,CAAC,IAAD,CADJ;AAELC,cACE,sEACA,mEADA,GAEA,uEAFA,GAGA,4DAHA,GAIA,+DAJA,GAKA,yDARG;AASLC,aAAS,MATJ;AAULL,cAAU,CACR;AACE;AACAM,iBAAW,SAFb;AAGER,aAAO;AAHT,KADQ,EAMR;AACEQ,iBAAW,QADb;AAEER,aAAO,IAFT,EAEeC,KAAK,GAFpB;AAGEC,gBAAU,CAAC,EAACF,OAAO,IAAR,EAAD;AAHZ,KANQ,EAWR;AACEQ,iBAAW,QADb;AAEER,aAAO,KAFT,EAEgBC,KAAK;AAFrB,KAXQ,EAeRH,KAAKW,OAAL,CAAa,QAAb,EAAuB,QAAvB,CAfQ,EAgBR;AACED,iBAAW,OADb;AAEEE,qBAAe,MAFjB,EAEyBT,KAAK,SAF9B,EAEyCU,YAAY,IAFrD;AAGET,gBAAU,CACRJ,KAAKc,qBADG,EAERb,SAFQ;AAHZ,KAhBQ,EAwBR;AACES,iBAAW,MADb;AAEER,aAAO,MAFT,EAEiBC,KAAK,MAFtB;AAGEY,iBAAW;AAHb,KAxBQ,EA6BR;AACEL,iBAAW,QADb;AAEER,aAAO,oBAFT;AAGEE,gBAAU,CAACJ,KAAKgB,gBAAN;AAHZ,KA7BQ,EAkCRhB,KAAKiB,mBAlCG,EAmCRjB,KAAKK,OAAL,CAAaL,KAAKkB,iBAAlB,EAAqC,EAACT,SAAS,IAAV,EAArC,CAnCQ,EAoCRT,KAAKmB,aApCG;AAVL,GAAP;AAiDD,CAzDD","file":"fsharp.js","sourceRoot":"/Users/liangdong06/work/react-tools","sourcesContent":["module.exports = function(hljs) {\n  var TYPEPARAM = {\n    begin: '<', end: '>',\n    contains: [\n      hljs.inherit(hljs.TITLE_MODE, {begin: /'[a-zA-Z0-9_]+/})\n    ]\n  };\n\n  return {\n    aliases: ['fs'],\n    keywords:\n      'abstract and as assert base begin class default delegate do done ' +\n      'downcast downto elif else end exception extern false finally for ' +\n      'fun function global if in inherit inline interface internal lazy let ' +\n      'match member module mutable namespace new null of open or ' +\n      'override private public rec return sig static struct then to ' +\n      'true try type upcast use val void when while with yield',\n    illegal: /\\/\\*/,\n    contains: [\n      {\n        // monad builder keywords (matches before non-bang kws)\n        className: 'keyword',\n        begin: /\\b(yield|return|let|do)!/\n      },\n      {\n        className: 'string',\n        begin: '@\"', end: '\"',\n        contains: [{begin: '\"\"'}]\n      },\n      {\n        className: 'string',\n        begin: '\"\"\"', end: '\"\"\"'\n      },\n      hljs.COMMENT('\\\\(\\\\*', '\\\\*\\\\)'),\n      {\n        className: 'class',\n        beginKeywords: 'type', end: '\\\\(|=|$', excludeEnd: true,\n        contains: [\n          hljs.UNDERSCORE_TITLE_MODE,\n          TYPEPARAM\n        ]\n      },\n      {\n        className: 'meta',\n        begin: '\\\\[<', end: '>\\\\]',\n        relevance: 10\n      },\n      {\n        className: 'symbol',\n        begin: '\\\\B(\\'[A-Za-z])\\\\b',\n        contains: [hljs.BACKSLASH_ESCAPE]\n      },\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.inherit(hljs.QUOTE_STRING_MODE, {illegal: null}),\n      hljs.C_NUMBER_MODE\n    ]\n  };\n};"]}